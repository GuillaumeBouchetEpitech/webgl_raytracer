"use strict";function e(e,t,i,n){return new(i||(i=Promise))((function(r,s){function o(e){try{f(n.next(e))}catch(e){s(e)}}function a(e){try{f(n.throw(e))}catch(e){s(e)}}function f(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}f((n=n.apply(e,t||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const t=["requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen"],i=["fullscreenchange","webkitfullscreenchange","mozfullscreenchange","msfullscreenchange"],n=new class{constructor(){this._onFullScreenChangeCallbacks=[],this._isInitialized=!1}_initialize(){if(this._isInitialized)return;this._isInitialized=!0;const e=()=>{this._onFullScreenChangeCallbacks.forEach((e=>e()))};for(const t of i)document.addEventListener(t,e,!1)}isCompatible(e){for(const i of t)if(i in e)return!0;return!1}isFullScreen(e){return document.fullscreenElement===e}requestFullScreen(i){return e(this,void 0,void 0,(function*(){if(this.isFullScreen(i))return{success:!1,message:"element already in full screen"};this._initialize();for(const e of t)if(e in i)return i[e](),{success:!0,message:"request for full screen done"};return{success:!1,message:"unsupported request for full screen"}}))}addOnFullScreenChange(e){this._onFullScreenChangeCallbacks.push(e)}removeOnFullScreenChange(e){const t=this._onFullScreenChangeCallbacks.indexOf(e);t<0||this._onFullScreenChangeCallbacks.splice(t,1)}removeAllCallbacks(){this._onFullScreenChangeCallbacks.length=0}},r={Num0:48,Num1:49,Num2:50,Num3:51,Num4:52,Num5:53,Num6:54,Num7:55,Num8:56,Num9:57,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,Semicolon:186,Equal:187,Comma:188,Minus:189,Period:190,BackQuote:192,BracketLeft:219,Backslash:220,BracketRight:221,Quote:222,Shift:16,Ctrl:17,Alt:18,CapsLock:20,Tab:9,Enter:13,Pause:19,Escape:27,Space:32,PageUp:33,PageDown:34,End:35,Home:36,ArrowLeft:37,ArrowUp:38,ArrowRight:39,ArrowDown:40,PrintScreen:44,Insert:45,Delete:46,ContextMenu:93,ScrollLock:145,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,F13:124,F14:125,F15:126,F16:127,F17:128,F18:129,F19:130,F20:131,F21:132,F22:133,F23:134,F24:135,NumPad0:96,NumPad1:97,NumPad2:98,NumPad3:99,NumPad4:100,NumPad5:101,NumPad6:102,NumPad7:103,NumPad8:104,NumPad9:105,NumPadMultiply:106,NumPadAdd:107,NumPadSubtract:109,NumPadDecimal:110,NumPadDivide:111,NumLock:144,NumPadComma:194,NumPadEqual:12},s=e=>e>=r.A&&e<=r.Z,o=e=>e>=r.Num0&&e<=r.Num9||e>=r.NumPad0&&e<=r.NumPad9,a=new class{constructor(){this._pressedKeysSet=new Set,this._preventDefaultKeysSet=new Set,this._activated=!1,this._activated=!1,this._handleKeyDown=(e=>{const{keyCode:t}=e;this._preventDefaultKeysSet.has(t)&&e.preventDefault(),this._pressedKeysSet.add(t)}).bind(this),this._handleKeyUp=(e=>{const{keyCode:t}=e;this._preventDefaultKeysSet.has(t)&&e.preventDefault(),this._pressedKeysSet.delete(t)}).bind(this)}isPressed(...e){for(const t of e)if(this._pressedKeysSet.has(r[t]))return!0;return!1}preventDefault(e){this._preventDefaultKeysSet.add(r[e])}enableDefault(e){this._preventDefaultKeysSet.delete(r[e])}activate(){this._activated||(this._pressedKeysSet.clear(),document.addEventListener("keydown",this._handleKeyDown),document.addEventListener("keyup",this._handleKeyUp),this._activated=!0)}deactivate(){this._activated&&(this._pressedKeysSet.clear(),document.removeEventListener("keydown",this._handleKeyDown),document.removeEventListener("keyup",this._handleKeyUp),this._activated=!1)}},f={Left:0,Middle:1,Right:2},d=new class{constructor(){this._pressedButtonsSet=new Set,this._activated=!1,this._deltaX=0,this._deltaY=0,this._activated=!1,this._handleMouseDown=(e=>{this._pressedButtonsSet.add(e.button)}).bind(this),this._handleMouseUp=(e=>{this._pressedButtonsSet.delete(e.button)}).bind(this),this._handleMouseMove=(e=>{this._deltaX+=e.movementX||e.mozMovementX||e.webkitMovementX||0,this._deltaY+=e.movementY||e.mozMovementY||e.webkitMovementY||0}).bind(this)}activate(){this._activated||(this._pressedButtonsSet.clear(),document.addEventListener("mousedown",this._handleMouseDown),document.addEventListener("mouseup",this._handleMouseUp),document.addEventListener("mousemove",this._handleMouseMove),this._activated=!0)}deactivate(){this._activated&&(this._pressedButtonsSet.clear(),document.removeEventListener("mousedown",this._handleMouseDown),document.removeEventListener("mouseup",this._handleMouseUp),document.removeEventListener("mousemove",this._handleMouseMove),this._activated=!1)}isButtonPressed(e){return this._pressedButtonsSet.has(f[e])}deltaX(){return this._deltaX}deltaY(){return this._deltaY}resetDeltas(){this._deltaX=0,this._deltaY=0}},c=["requestPointerLock","mozRequestPointerLock","webkitRequestPointerLock"],h=["exitPointerLock","mozExitPointerLock","webkitExitPointerLock"],l=["pointerLockElement","mozPointerLockElement","webkitPointerLockElement"],u=[{methodName:"onpointerlockchange",propertyName:"pointerlockchange"},{methodName:"onmozpointerlockchange",propertyName:"mozpointerlockchange"},{methodName:"onwebkitpointerlockchange",propertyName:"webkitpointerlockchange"}],_=[{methodName:"onpointerlockerror",propertyName:"pointerlockerror"},{methodName:"onmozpointerlockerror",propertyName:"mozpointerlockerror"},{methodName:"onwebkitpointerlockerror",propertyName:"webkitpointerlockerror"}],g=new class{constructor(){this._onLockChangeCallbacks=[],this._onLockErrorCallbacks=[],this._timeSinceLastLockChange=0,this._isInitialized=!1}_initialize(){if(this._isInitialized)return;this._isInitialized=!0;const e=()=>{this._timeSinceLastLockChange=Date.now(),this._onLockChangeCallbacks.forEach((e=>e()))},t=e=>{this._timeSinceLastLockChange=Date.now(),this._onLockErrorCallbacks.forEach((t=>t(e)))};for(const t of u)if(t.methodName in document){document.addEventListener(t.propertyName,e,!1);break}for(const e of _)if(e.methodName in document){document.addEventListener(e.propertyName,t,!1);break}}canBePointerLocked(e){for(const t of c)if(t in e)return!0;return!1}isPointerLocked(e){for(const t of l)if(t in document)return document[t]===e;return!1}requestPointerLock(t){return e(this,void 0,void 0,(function*(){if(this.isPointerLocked(t))return{success:!1,message:"element already locked"};if(this._initialize(),this._timeSinceLastLockChange>0){const e=(Date.now()-this._timeSinceLastLockChange)/1e3;if(e<1.1)return{success:!1,message:`request for lock was too early, time to wait: ${e.toFixed(2)}sec`}}this._timeSinceLastLockChange=Date.now();for(const e of c)if(e in t){const i={unadjustedMovement:!1};try{yield t[e](i)}catch(e){return{success:!1,message:`request for lock was too early, time to wait: ${((Date.now()-this._timeSinceLastLockChange)/1e3).toFixed(2)}sec`}}return this._timeSinceLastLockChange=Date.now(),{success:!0,message:"request for lock done"}}return{success:!1,message:"unsupported request for lock"}}))}allowPointerLockedOnClickEvent(t){if(t===this._latestRequestHtmlElement)return;this._latestRequestHtmlElement=t;const i=()=>e(this,void 0,void 0,(function*(){t.removeEventListener("click",i);const e=yield this.requestPointerLock(t);this._latestRequestHtmlElement=void 0,e.success||this.allowPointerLockedOnClickEvent(t)}));t.addEventListener("click",i)}exitPointerLock(){for(const e of h)if(e in document){document[e]();break}}addOnLockChange(e){this._onLockChangeCallbacks.push(e)}removeOnLockChange(e){const t=this._onLockChangeCallbacks.indexOf(e);t<0||this._onLockChangeCallbacks.splice(t,1)}addOnLockError(e){this._onLockErrorCallbacks.push(e)}removeOnLockError(e){const t=this._onLockErrorCallbacks.indexOf(e);t<0||this._onLockErrorCallbacks.splice(t,1)}removeAllCallbacks(){this._onLockChangeCallbacks.length=0,this._onLockErrorCallbacks.length=0}};class p{constructor(e,t,i){this.createdAt=Date.now(),this.deltaX=0,this.deltaY=0,this.id=e,this.positionX=t,this.positionY=i}resetDelta(){this.deltaX=0,this.deltaY=0}}const m=new class{constructor(){this._activated=!1,this._allTouchDataMap=new Map,this._allCachedTouchDataArray=[],this._activated=!1,this._handleTouchStart=(e=>{e.preventDefault();for(let t=0;t<e.changedTouches.length;++t){const{identifier:i,pageX:n,pageY:r}=e.changedTouches[t],s=new p(i,n,r);this._allTouchDataMap.set(`${i}`,s),this._allCachedTouchDataArray.length=0}}).bind(this),this._handleTouchEnd=(e=>{e.preventDefault();for(let t=0;t<e.changedTouches.length;++t){const{identifier:i}=e.changedTouches[t];this._allTouchDataMap.delete(`${i}`),this._allCachedTouchDataArray.length=0}}).bind(this),this._handleTouchMove=(e=>{e.preventDefault();for(let t=0;t<e.changedTouches.length;++t){const{identifier:i,pageX:n,pageY:r}=e.changedTouches[t],s=this._allTouchDataMap.get(`${i}`);if(!s)continue;const o=n-s.positionX,a=r-s.positionY;s.deltaX+=o,s.deltaY+=a,s.positionX=n,s.positionY=r}}).bind(this)}isSupported(e){return"ontouchstart"in e}activate(e){this.isSupported(e)&&(this._activated||(this._allTouchDataMap.clear(),this._allCachedTouchDataArray.length=0,e.addEventListener("touchstart",this._handleTouchStart),e.addEventListener("touchend",this._handleTouchEnd),e.addEventListener("touchcancel",this._handleTouchEnd),e.addEventListener("touchmove",this._handleTouchMove,{passive:!1}),this._activated=!0))}deactivate(e){this._activated&&(this._allTouchDataMap.clear(),this._allCachedTouchDataArray.length=0,e.removeEventListener("touchstart",this._handleTouchStart),e.removeEventListener("touchend",this._handleTouchEnd),e.removeEventListener("touchcancel",this._handleTouchEnd),e.removeEventListener("touchmove",this._handleTouchMove),this._activated=!1)}_refreshCache(){0===this._allCachedTouchDataArray.length&&(this._allCachedTouchDataArray=[...this._allTouchDataMap.values()])}getTouchData(){return this._refreshCache(),this._allCachedTouchDataArray}resetDeltas(){this._refreshCache(),this._allCachedTouchDataArray.forEach((e=>e.resetDelta()))}},x=new class{constructor(){this._activated=!1,this._onVisibilityChangeCallbacks=[],this._handleVisibilityChange=(()=>{const e=this.isVisible();this._onVisibilityChangeCallbacks.forEach((t=>t(e)))}).bind(this)}activate(){this.isSupported()&&(this._activated||(document.addEventListener("visibilitychange",this._handleVisibilityChange,!1),this._activated=!0))}deactivate(){this._activated&&(document.removeEventListener("visibilitychange",this._handleVisibilityChange,!1),this._activated=!1)}isSupported(){return"onvisibilitychange"in document}isVisible(){return"visible"===document.visibilityState}addVisibilityChange(e){this._onVisibilityChangeCallbacks.push(e)}removeVisibilityChange(e){const t=this._onVisibilityChangeCallbacks.indexOf(e);t<0||this._onVisibilityChangeCallbacks.splice(t,1)}removeAllCallbacks(){this._onVisibilityChangeCallbacks.length=0}},b=()=>!!window.WebGL2RenderingContext;var v=Object.freeze({__proto__:null,AllKeyCodes:r,GlobalFullScreenManager:n,GlobalKeyboardManager:a,GlobalMouseManager:d,GlobalPointerLockManager:g,GlobalTouchManager:m,GlobalVisibilityManager:x,isAlphanumeric:e=>o(e)||s(e),isLetter:s,isNumber:o,isWebGL2Supported:b,isWebWorkerSupported:()=>!!window.Worker});class E{constructor(){this._framesDelta=[],this._averageDelta=0,this._minDelta=0,this._maxDelta=0}pushDelta(e){this._framesDelta.length>=100&&this._framesDelta.shift(),this._framesDelta.push(e),this._minDelta=999999999,this._maxDelta=-999999999,this._averageDelta=0;for(const e of this._framesDelta)this._minDelta=Math.min(this._minDelta,e),this._maxDelta=Math.max(this._maxDelta,e),this._averageDelta+=e;this._averageDelta/=this._framesDelta.length}get framesDelta(){return this._framesDelta}get averageDelta(){return this._averageDelta}get minDelta(){return this._minDelta}get maxDelta(){return this._maxDelta}}var T=1e-6,y="undefined"!=typeof Float32Array?Float32Array:Array;function S(){var e=new y(16);return y!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function R(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function w(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function C(e,t,i){var n=t[0],r=t[1],s=t[2],o=t[3],a=t[4],f=t[5],d=t[6],c=t[7],h=t[8],l=t[9],u=t[10],_=t[11],g=t[12],p=t[13],m=t[14],x=t[15],b=i[0],v=i[1],E=i[2],T=i[3];return e[0]=b*n+v*a+E*h+T*g,e[1]=b*r+v*f+E*l+T*p,e[2]=b*s+v*d+E*u+T*m,e[3]=b*o+v*c+E*_+T*x,b=i[4],v=i[5],E=i[6],T=i[7],e[4]=b*n+v*a+E*h+T*g,e[5]=b*r+v*f+E*l+T*p,e[6]=b*s+v*d+E*u+T*m,e[7]=b*o+v*c+E*_+T*x,b=i[8],v=i[9],E=i[10],T=i[11],e[8]=b*n+v*a+E*h+T*g,e[9]=b*r+v*f+E*l+T*p,e[10]=b*s+v*d+E*u+T*m,e[11]=b*o+v*c+E*_+T*x,b=i[12],v=i[13],E=i[14],T=i[15],e[12]=b*n+v*a+E*h+T*g,e[13]=b*r+v*f+E*l+T*p,e[14]=b*s+v*d+E*u+T*m,e[15]=b*o+v*c+E*_+T*x,e}function A(){var e=new y(3);return y!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function D(e){var t=new y(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}function z(e,t,i){var n=new y(3);return n[0]=e,n[1]=t,n[2]=i,n}function L(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e}function F(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e}function P(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e}function M(e,t,i){return e[0]=t[0]*i[0],e[1]=t[1]*i[1],e[2]=t[2]*i[2],e}function B(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e}function k(e,t,i,n){return e[0]=t[0]+i[0]*n,e[1]=t[1]+i[1]*n,e[2]=t[2]+i[2]*n,e}function I(e,t){var i=t[0],n=t[1],r=t[2],s=i*i+n*n+r*r;return s>0&&(s=1/Math.sqrt(s)),e[0]=t[0]*s,e[1]=t[1]*s,e[2]=t[2]*s,e}function U(e,t,i){var n=t[0],r=t[1],s=t[2],o=i[0],a=i[1],f=i[2];return e[0]=r*f-s*a,e[1]=s*o-n*f,e[2]=n*a-r*o,e}function N(e,t,i,n){var r=t[0],s=t[1],o=t[2];return e[0]=r+n*(i[0]-r),e[1]=s+n*(i[1]-s),e[2]=o+n*(i[2]-o),e}Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});var V,X=P;function O(e,t,i,n){var r=new y(4);return r[0]=e,r[1]=t,r[2]=i,r[3]=n,r}function G(){var e=new y(4);return y!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}function Y(e,t){var i=new y(2);return i[0]=e,i[1]=t,i}A(),function(){var e;e=new y(4),y!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0)}(),A(),z(1,0,0),z(0,1,0),G(),G(),V=new y(9),y!=Float32Array&&(V[1]=0,V[2]=0,V[3]=0,V[5]=0,V[6]=0,V[7]=0),V[0]=1,V[4]=1,V[8]=1,function(){var e=new y(2);y!=Float32Array&&(e[0]=0,e[1]=0)}();const H={X:0,Y:1,Z:2};var W,$,j=Object.freeze({__proto__:null,FreeFlyController:class{constructor(e){this._isActivated=!1,this._theta=0,this._phi=0,this._touchWasActive=!1,this._touchStartTime=0,this._touchMoveForward=!1,this._position=z(0,0,0),this._target=z(0,0,0),this._forwardAxis=z(1,0,0),this._leftAxis=z(0,0,1),this._upAxis=z(0,1,0),this._mouseSensibility=e.mouseSensibility,this._keyboardSensibility=e.keyboardSensibility,this._touchSensibility=e.touchSensibility,this._movingSpeed=e.movingSpeed,L(this._position,e.position),this._axisIndices=[e.coordinates?H[e.coordinates[0]]:H.X,e.coordinates?H[e.coordinates[1]]:H.Y,e.coordinates?H[e.coordinates[2]]:H.Z],this._theta=e.theta,this._phi=e.phi}isActivated(){return this._isActivated}update(e){let t=!1,i=!1,n=!1,r=!1,s=!1,o=!1,f=!1,c=0,h=0;const l=Math.PI/180;c-=d.deltaX()*this._mouseSensibility*l*e,h-=d.deltaY()*this._mouseSensibility*l*e;const u=m.getTouchData().length>0;if(u){if(!this._touchWasActive){const e=Date.now();(e-this._touchStartTime)/1e3<.25?this._touchMoveForward=!0:this._touchStartTime=e}const t=m.getTouchData()[0];c-=t.deltaX*this._touchSensibility*l*e,h-=t.deltaY*this._touchSensibility*l*e}else this._touchMoveForward=!1;this._touchWasActive=u,this._touchMoveForward&&(t=!0),a.isPressed("Z","W")&&(t=!0),a.isPressed("S")&&(i=!0),a.isPressed("A","Q")&&(n=!0),a.isPressed("D")&&(r=!0),a.isPressed("Shift")&&(s=!0),a.isPressed("C")&&(o=!0),a.isPressed("Space")&&(f=!0);const _=this._movingSpeed*(s?4:1)*e,g=z(0,0,0);B(g,this._forwardAxis,_);const p=z(0,0,0);B(p,this._leftAxis,_);const x=z(0,0,0);B(x,this._upAxis,_);const b=this._keyboardSensibility*e;a.isPressed("ArrowUp")?h+=b:a.isPressed("ArrowDown")&&(h-=b),a.isPressed("ArrowLeft")?c+=b:a.isPressed("ArrowRight")&&(c-=b),this._theta+=c,this._phi+=h;const v=.5*Math.PI,E=.95*v;this._phi=Math.min(Math.max(this._phi,-E),+E);const T=Math.cos(this._theta),y=Math.sin(this._theta),[S,R,w]=this._axisIndices,C=Math.cos(this._phi+v);this._upAxis[S]=C*T,this._upAxis[R]=C*y,this._upAxis[w]=Math.sin(this._phi+v);const A=Math.cos(this._phi);this._forwardAxis[S]=A*T,this._forwardAxis[R]=A*y,this._forwardAxis[w]=Math.sin(this._phi),U(this._leftAxis,this._upAxis,this._forwardAxis),t?F(this._position,this._position,g):i&&X(this._position,this._position,g),n?F(this._position,this._position,p):r&&X(this._position,this._position,p),f?F(this._position,this._position,x):o&&X(this._position,this._position,x),F(this._target,this._position,this._forwardAxis)}getPosition(){return this._position}setPosition(e){L(this._position,e)}getTarget(){return this._target}getUpAxis(){return this._upAxis}getTheta(){return this._theta}getPhi(){return this._phi}getTouchMoveForward(){return this._touchMoveForward}}});!function(e){e[e.perspective=0]="perspective",e[e.orthogonal=1]="orthogonal"}(W||(W={})),function(e){e[e.Right=0]="Right",e[e.Left=1]="Left",e[e.Bottom=2]="Bottom",e[e.Top=3]="Top",e[e.Back=4]="Back",e[e.Front=5]="Front"}($||($={}));var q=Object.freeze({__proto__:null,Camera:class{constructor(){this._projectionType=W.perspective,this._viewportPos=Y(0,0),this._viewportSize=Y(0,0),this._projectionMatrix=S(),this._viewMatrix=S(),this._composedMatrix=S(),this._eye=z(0,0,0),this._target=z(0,0,0),this._upAxis=z(0,0,0)}setAsPerspective(e){this._projectionType=W.perspective;let t=e.aspectRatio;void 0===t&&(t=this._viewportSize[0]/this._viewportSize[1]),this._perspectiveData={fovy:e.fovy,aspectRatio:t,near:e.near,far:e.far}}setAsOrthogonal(e){this._projectionType=W.orthogonal,this._orthogonalData=Object.assign({},e)}setViewportPos(e,t){this._viewportPos[0]=e,this._viewportPos[1]=t}getViewportPos(){return this._viewportPos}setViewportSize(e,t){this._viewportSize[0]=e,this._viewportSize[1]=t,this._projectionType!==W.perspective&&this._perspectiveData&&(this._perspectiveData.aspectRatio=this._viewportSize[0]/this._viewportSize[1])}getViewportSize(){return this._viewportSize}lookAt(e,t,i){this.setEye(e),this.setTarget(t),this.setUpAxis(i)}setEye(e){L(this._eye,e)}setTarget(e){L(this._target,e)}setUpAxis(e){L(this._upAxis,e)}getEye(){return this._eye}getTarget(){return this._target}getUpAxis(){return this._upAxis}computeMatrices(){if(this._projectionType===W.perspective){const{fovy:e,aspectRatio:t,near:i,far:n}=this._perspectiveData;!function(e,t,i,n,r){var s,o=1/Math.tan(t/2);e[0]=o/i,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=o,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=r&&r!==1/0?(s=1/(n-r),e[10]=(r+n)*s,e[14]=2*r*n*s):(e[10]=-1,e[14]=-2*n)}(this._projectionMatrix,e*Math.PI/180,t,i,n)}else if(this._projectionType===W.orthogonal){const{left:e,right:t,top:i,bottom:n,near:r,far:s}=this._orthogonalData;!function(e,t,i,n,r,s,o){var a=1/(t-i),f=1/(n-r),d=1/(s-o);e[0]=-2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*f,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*d,e[11]=0,e[12]=(t+i)*a,e[13]=(r+n)*f,e[14]=(o+s)*d,e[15]=1}(this._projectionMatrix,e,t,i,n,r,s)}!function(e,t,i,n){var r,s,o,a,f,d,c,h,l,u,_=t[0],g=t[1],p=t[2],m=n[0],x=n[1],b=n[2],v=i[0],E=i[1],y=i[2];Math.abs(_-v)<T&&Math.abs(g-E)<T&&Math.abs(p-y)<T?w(e):(c=_-v,h=g-E,l=p-y,r=x*(l*=u=1/Math.hypot(c,h,l))-b*(h*=u),s=b*(c*=u)-m*l,o=m*h-x*c,(u=Math.hypot(r,s,o))?(r*=u=1/u,s*=u,o*=u):(r=0,s=0,o=0),a=h*o-l*s,f=l*r-c*o,d=c*s-h*r,(u=Math.hypot(a,f,d))?(a*=u=1/u,f*=u,d*=u):(a=0,f=0,d=0),e[0]=r,e[1]=a,e[2]=c,e[3]=0,e[4]=s,e[5]=f,e[6]=h,e[7]=0,e[8]=o,e[9]=d,e[10]=l,e[11]=0,e[12]=-(r*_+s*g+o*p),e[13]=-(a*_+f*g+d*p),e[14]=-(c*_+h*g+l*p),e[15]=1)}(this._viewMatrix,this._eye,this._target,this._upAxis),this.computeComposedMatrix()}computeComposedMatrix(){C(this._composedMatrix,this._projectionMatrix,this._viewMatrix)}setProjectionMatrix(e){R(this._projectionMatrix,e)}setViewMatrix(e){R(this._viewMatrix,e)}setComposedMatrix(e){R(this._composedMatrix,e)}getProjectionMatrix(){return this._projectionMatrix}getViewMatrix(){return this._viewMatrix}getComposedMatrix(){return this._composedMatrix}getPerspectiveData(){if(this._projectionType!==W.perspective)throw new Error("not a perspective projection");return this._perspectiveData}getOrthogonalData(){if(this._projectionType!==W.orthogonal)throw new Error("not an orthogonal projection");return this._orthogonalData}},FrustumCulling:class{constructor(){this._frustum=new Float32Array(24)}_setPlane(e,t,i,n){const r=4*e;this._frustum[r+0]=t[0]+i[0]*n,this._frustum[r+1]=t[1]+i[1]*n,this._frustum[r+2]=t[2]+i[2]*n,this._frustum[r+3]=t[3]+i[3]*n;const s=Math.sqrt(this._frustum[r+0]*this._frustum[r+0]+this._frustum[r+1]*this._frustum[r+1]+this._frustum[r+2]*this._frustum[r+2]);0!==s&&(this._frustum[r+0]/=s,this._frustum[r+1]/=s,this._frustum[r+2]/=s,this._frustum[r+3]/=s)}calculateFrustum(e,t){const i=C(S(),e,t),n=O(i[0],i[4],i[8],i[12]),r=O(i[1],i[5],i[9],i[13]),s=O(i[2],i[6],i[10],i[14]),o=O(i[3],i[7],i[11],i[15]);this._setPlane($.Right,o,n,-1),this._setPlane($.Left,o,n,1),this._setPlane($.Bottom,o,r,1),this._setPlane($.Top,o,r,-1),this._setPlane($.Back,o,s,-1),this._setPlane($.Front,o,s,1)}sphereInFrustum(e,t,i,n){for(let r=0;r<6;++r){const s=4*r;if(this._frustum[s+0]*e+this._frustum[s+1]*t+this._frustum[s+2]*i+this._frustum[s+3]<=-n)return!1}return!0}pointInFrustum(e,t,i){return this.sphereInFrustum(e,t,i,0)}cubeInFrustumVec3(e,t){return this.cubeInFrustum(e[0],e[1],e[2],t)}cubeInFrustum(e,t,i,n){const r=.5*n,s=e-r,o=t-r,a=i-r,f=e+r,d=t+r,c=i+r;for(let e=0;e<6;++e){const t=4*e,i=this._frustum[t+0],n=this._frustum[t+1],r=this._frustum[t+2],h=this._frustum[t+3];if(!(i*s+n*o+r*a+h>0||i*f+n*o+r*a+h>0||i*s+n*d+r*a+h>0||i*f+n*d+r*a+h>0||i*s+n*o+r*c+h>0||i*f+n*o+r*c+h>0||i*s+n*d+r*c+h>0||i*f+n*d+r*c+h>0))return!1}return!0}}});let Z=class e{static initialize(t){if(e._gl=t.getContext("webgl2",{alpha:!1,antialias:!1,depth:!0,failIfMajorPerformanceCaveat:!1,powerPreference:"high-performance",premultipliedAlpha:!0,preserveDrawingBuffer:!0,stencil:!1}),!e._gl)throw new Error("could not create webgl context");e._extensionLoseContext=e._gl.getExtension("WEBGL_lose_context"),e._gl.getExtension("EXT_color_buffer_float"),e._gl.getExtension("EXT_float_blend")}static getContext(){if(!e._gl)throw new Error("webgl context not initialized");return e._gl}static getExtensionLoseContext(){return e._extensionLoseContext}static getExtensionLoseContextStrict(){if(!e._extensionLoseContext)throw new Error("lose context extension not available");return e._extensionLoseContext}};var K;Z._gl=null,Z._extensionLoseContext=null,function(e){e[e.positiveX=0]="positiveX",e[e.negativeX=1]="negativeX",e[e.positiveY=2]="positiveY",e[e.negativeY=3]="negativeY",e[e.positiveZ=4]="positiveZ",e[e.negativeZ=5]="negativeZ"}(K||(K={}));const Q=e=>{const t=Z.getContext();switch(e){case K.positiveX:return t.TEXTURE_CUBE_MAP_POSITIVE_X;case K.negativeX:return t.TEXTURE_CUBE_MAP_NEGATIVE_X;case K.positiveY:return t.TEXTURE_CUBE_MAP_POSITIVE_Y;case K.negativeY:return t.TEXTURE_CUBE_MAP_NEGATIVE_Y;case K.positiveZ:return t.TEXTURE_CUBE_MAP_POSITIVE_Z;case K.negativeZ:return t.TEXTURE_CUBE_MAP_NEGATIVE_Z}};class J{constructor(){this._width=0,this._height=0,this._minBufferSize=0,this._texture=null}initialize(e,t){if(e<1)throw new Error(`cube map: width is < 1, input: ${e}`);if(t<1)throw new Error(`cube map: height is < 1, input: ${t}`);const i=Z.getContext();this._texture=i.createTexture(),this._width=e,this._height=t,this._minBufferSize=this._width*this._height*4}dispose(){Z.getContext().deleteTexture(this._texture)}rawBind(){if(!this._texture)throw new Error("cube map: not initialized");const e=Z.getContext();e.bindTexture(e.TEXTURE_CUBE_MAP,this._texture)}bind(e){this.rawBind(),e(this),J.unbind()}static unbind(){const e=Z.getContext();e.bindTexture(e.TEXTURE_CUBE_MAP,null)}loadFromMemory(e,t){if(!this._texture)throw new Error("cube map: not initialized");if(t.length<this._minBufferSize)throw new Error(`cube map: miss-matching pixels buffer size, input: ${t.length}`);const i=Z.getContext(),n=i.RGBA,r=i.RGBA,s=i.UNSIGNED_BYTE;i.texImage2D(Q(e),0,n,this._width,this._height,0,r,s,t)}allocate(){const e=Z.getContext(),t=e.RGBA,i=e.RGBA,n=e.UNSIGNED_BYTE,r=new Uint8Array(this._width*this._height*4);[K.negativeX,K.negativeY,K.negativeZ,K.positiveX,K.positiveY,K.positiveZ].forEach((s=>{e.texImage2D(Q(s),0,t,this._width,this._height,0,i,n,r)}))}complete(){const e=Z.getContext();e.generateMipmap(e.TEXTURE_CUBE_MAP),e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR)}getWidth(){if(!this._texture)throw new Error("cube map: not initialized");return this._width}getHeight(){if(!this._texture)throw new Error("cube map: not initialized");return this._height}getRawObject(){if(!this._texture)throw new Error("texture not initialized");return this._texture}}class ee{constructor(){this._texture=null}initialize(e=[]){if(this._texture)throw new Error("data texture already initialized");const t=Z.getContext();if(this._texture=t.createTexture(),!this._texture)throw new Error("data texture failed to be created");t.bindTexture(t.TEXTURE_2D,this._texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),this.allocate(e)}dispose(){Z.getContext().deleteTexture(this._texture)}allocate(e){if(!this._texture)throw new Error("data texture not initialized");if(e.length<=0)throw new Error("texture: width must be positive");const t=Z.getContext();t.bindTexture(t.TEXTURE_2D,this._texture),this._buffer=new Uint8Array(e.flat());const i=t.RGBA,n=e.length,r=t.RGBA,s=t.UNSIGNED_BYTE;t.texImage2D(t.TEXTURE_2D,0,i,n,1,0,r,s,this._buffer)}update(e,t){if(!this._texture)throw new Error("data texture not initialized");if(!this._buffer)throw new Error("data texture update but not previously allocated");if(e+t.length>this._buffer.length)throw new Error(`data texture update but size is larger (start: ${e}, length: ${t.length}, max: ${this._buffer.length})`);const i=Z.getContext();i.bindTexture(i.TEXTURE_2D,this._texture);for(let e=0;e<t.length;++e)this._buffer[4*e+0]=t[e][0],this._buffer[4*e+1]=t[e][1],this._buffer[4*e+2]=t[e][2],this._buffer[4*e+3]=t[e][3];const n=t.length,r=i.RGBA,s=i.UNSIGNED_BYTE,o=e;i.texSubImage2D(i.TEXTURE_2D,0,o,0,n,1,r,s,this._buffer,0)}rawBind(){if(!this._texture)throw new Error("data texture not initialized");const e=Z.getContext();e.bindTexture(e.TEXTURE_2D,this._texture)}preBind(e){this.rawBind(),e(this)}bind(e){this.preBind(e),ee.unbind()}static unbind(){const e=Z.getContext();e.bindTexture(e.TEXTURE_2D,null)}}let te=class e{constructor(){const e=Z.getContext().createFramebuffer();if(null===e)throw new Error("null frame buffer object");this._frameBuffer=e}dispose(){Z.getContext().deleteFramebuffer(this._frameBuffer)}rawBind(){const e=Z.getContext();e.bindFramebuffer(e.FRAMEBUFFER,this._frameBuffer)}bind(t){this.rawBind(),t(this),e.unbind()}static unbind(){const e=Z.getContext();e.bindFramebuffer(e.FRAMEBUFFER,null)}attachTexture(e){const t=Z.getContext();t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e.getRawObject(),0)}attachDepthTexture(e){const t=Z.getContext();t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,e.getRawObject(),0)}attachCubeMap(e,t){const i=Z.getContext();i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,Q(t),e.getRawObject(),0)}getPixels(e,t,i,n,r){const s=Z.getContext();s.readPixels(e,t,i,n,s.RGBA,s.UNSIGNED_BYTE,r)}};var ie;!function(e){e[e.float=0]="float",e[e.vec2f=1]="vec2f",e[e.vec3f=2]="vec3f",e[e.vec4f=3]="vec4f",e[e.mat3f=4]="mat3f",e[e.mat4f=5]="mat4f"}(ie||(ie={}));const ne=e=>{switch(e){case ie.float:return 1;case ie.vec2f:return 2;case ie.vec3f:return 3;case ie.vec4f:return 4;case ie.mat3f:return 9;case ie.mat4f:return 16}};var re;!function(e){e[e.lines=0]="lines",e[e.lineStrip=1]="lineStrip",e[e.lineLoop=2]="lineLoop",e[e.triangles=3]="triangles",e[e.triangleStrip=4]="triangleStrip",e[e.triangleFan=5]="triangleFan"}(re||(re={}));const se=e=>e instanceof Float32Array?e:new Float32Array(e),oe=e=>{const t=Z.getContext();return"dynamic"===e?t.DYNAMIC_DRAW:"streaming"===e?t.STREAM_DRAW:t.STATIC_DRAW};class ae{constructor(e,t){this._primitiveStart=0,this._primitiveCount=0,this._instanceCount=0,this._isInstanced=!1;const i=Z.getContext();if(0===t.vbos.length)throw new Error("empty vbo definition");for(const i of t.vbos){if(0===i.attrs.length)throw new Error("empty vbo attribute definition");for(const t of i.attrs)if(!e.hasAttribute(t.name))throw new Error(`attribute not found, name="${t.name}"`)}switch(this._def=t,t.primitiveType){case re.lines:this._primitiveType=i.LINES;break;case re.lineStrip:this._primitiveType=i.LINE_STRIP;break;case re.lineLoop:this._primitiveType=i.LINE_LOOP;break;case re.triangles:this._primitiveType=i.TRIANGLES;break;case re.triangleStrip:this._primitiveType=i.TRIANGLE_STRIP;break;case re.triangleFan:this._primitiveType=i.TRIANGLE_FAN;break;default:throw new Error("primitive type not found")}const n=i.createVertexArray();if(!n)throw new Error("fail o create a vao unit");this._vao=n,i.bindVertexArray(this._vao),this._vbos=[];for(const t of this._def.vbos){const n=i.createBuffer();if(!n)throw new Error("fail o create a vbo unit");this._vbos.push({object:n,maxSize:0,mode:t.mode||"static"}),i.bindBuffer(i.ARRAY_BUFFER,n);let r=t.stride||0;if(!r){for(const e of t.attrs)switch(e.type){case ie.float:r+=1;break;case ie.vec2f:r+=2;break;case ie.vec3f:r+=3;break;case ie.vec4f:r+=4;break;case ie.mat3f:r+=9;break;case ie.mat4f:r+=16}r*=4}for(const n of t.attrs){let s=1,o=1;switch(n.type){case ie.float:s=1,o=1;break;case ie.vec2f:s=2,o=1;break;case ie.vec3f:s=3,o=1;break;case ie.vec4f:s=4,o=1;break;case ie.mat3f:s=3,o=3;break;case ie.mat4f:s=4,o=4}const a=e.getAttribute(n.name);for(let e=0;e<o;++e){const o=a+e,f=4*(n.index+e*s);i.enableVertexAttribArray(o),i.vertexAttribPointer(o,s,i.FLOAT,!1,r,f),!0===t.instanced&&(i.vertexAttribDivisor(o,1),this._isInstanced=!0)}}}i.bindVertexArray(null)}dispose(){const e=Z.getContext();for(const t of this._vbos)e.deleteBuffer(t.object);this._vbos.length=0,e.deleteVertexArray(this._vao)}setBufferSize(e,t){if(e<0||e>=this._vbos.length)throw new Error(`no vbo available to that index (input: ${e})`);if(t<=0)throw new Error(`vbo must be > 0 (input: ${t})`);const i=this._vbos[e];if(t<i.maxSize)return;i.maxSize=t;const n=Z.getContext();n.bindBuffer(n.ARRAY_BUFFER,i.object),n.bufferData(n.ARRAY_BUFFER,t,oe(i.mode)),n.bindBuffer(n.ARRAY_BUFFER,null)}setFloatBufferSize(e,t){this.setBufferSize(e,4*t)}allocateBuffer(e,t,i){if(e<0||e>=this._vbos.length)throw new Error(`no vbo available to that index (input: ${e}, total vbos: ${this._vbos.length})`);if(i<=0)throw new Error(`size must be > 0 (input: ${i})`);const n=this._vbos[e];if(i<=0)throw new Error(`vbo must be > 0 (input: ${i})`);n.maxSize=i;const r=se(t),s=Z.getContext();s.bindBuffer(s.ARRAY_BUFFER,n.object),s.bufferData(s.ARRAY_BUFFER,r,oe(n.mode),0,i),s.bindBuffer(s.ARRAY_BUFFER,null)}updateBuffer(e,t,i,n){if(e<0||e>=this._vbos.length)throw new Error(`no vbo available to that index (input: ${e}, total vbos: ${this._vbos.length})`);if(i<=0)throw new Error(`size must be > 0 (input: ${i})`);const r=this._vbos[e];if(void 0!==n){if(n<0)throw new Error(`offset must be >= 0 (input: ${n})`);const e=n+i;if(e>r.maxSize)throw new Error(`offset + size > to vbo max size (input: ${e}, max size: ${r.maxSize})`)}else if(i>r.maxSize)throw new Error(`size must be < to vbo max size (input: ${i}, max size: ${r.maxSize})`);const s=se(t),o=Z.getContext();o.bindBuffer(o.ARRAY_BUFFER,r.object),o.bufferSubData(o.ARRAY_BUFFER,null!=n?n:0,s,0,i),o.bindBuffer(o.ARRAY_BUFFER,null)}render(){if(0==this._primitiveCount)return;if(this._isInstanced&&0==this._instanceCount)return;const e=Z.getContext();e.bindVertexArray(this._vao),!0===this._isInstanced?e.drawArraysInstanced(this._primitiveType,this._primitiveStart,this._primitiveCount,this._instanceCount):e.drawArrays(this._primitiveType,this._primitiveStart,this._primitiveCount),e.bindVertexArray(null)}setPrimitiveStart(e){this._primitiveStart=e}setPrimitiveCount(e){this._primitiveCount=e}setInstancedCount(e){this._instanceCount=e}}class fe{constructor(){this._def={vbos:[],primitiveType:re.lines}}reset(){return this._def={vbos:[],primitiveType:re.lines},this}getDef(){return this._def}setPrimitiveType(e){return this._def.primitiveType=re[e],this}addVbo(){return this._def.vbos.push({attrs:[],instanced:!1}),this}setVboAsInstanced(){return this._getLastVbo().instanced=!0,this}setVboAsDynamic(){return this._getLastVbo().mode="dynamic",this}setVboAsStreaming(){return this._getLastVbo().mode="streaming",this}setStride(e){return this._getLastVbo().stride=e,this}addVboAttribute(e,t){const i=this._getLastVbo(),n=i.attrs.length>0?i.attrs[i.attrs.length-1]:null;return i.attrs.push({name:e,type:ie[t],index:n?n.index+ne(n.type):0}),this}_getLastVbo(){if(0===this._def.vbos.length)throw new Error("no VBO setup");return this._def.vbos[this._def.vbos.length-1]}}var de=Object.freeze({__proto__:null,get AttributeType(){return ie},BytesPerPixel:4,Geometry:ae,GeometryBuilder:fe,get PrimitiveType(){return re}});let ce=class e{constructor(e,t){this._attributes=new Map,this._uniforms=new Map,this._name=e;const i=Z.getContext(),n=this._getShader(t.vertexSrc,i.VERTEX_SHADER),r=this._getShader(t.fragmentSrc,i.FRAGMENT_SHADER),s=i.createProgram();if(!s)throw new Error("could not create a shader program");if(i.attachShader(s,n),i.attachShader(s,r),i.linkProgram(s),i.deleteShader(n),i.deleteShader(r),!i.getProgramParameter(s,i.LINK_STATUS)){const e=i.getProgramInfoLog(s);throw new Error("Failed to initialized shaders, Error linking:"+e)}this._program=s,this.bind((()=>{this._getAttributes(t.attributes),this._getUniforms(t.uniforms)}))}dispose(){Z.getContext().deleteProgram(this._program)}bind(t){if(null!==e._isBound)throw new Error(`Double shader binding (bound: ${e._isBound._name}, binding: ${this._name})`);e._isBound=this,Z.getContext().useProgram(this._program),t(this),e.unbind()}static unbind(){Z.getContext().useProgram(null),e._isBound=null}isBound(){return e._isBound===this}hasAttribute(e){return this._attributes.has(e)}getAttribute(e){const t=this._attributes.get(e);if(void 0===t)throw new Error(`attribute not found: ${e}`);return t}getUniform(e){const t=this._uniforms.get(e);if(void 0===t)throw new Error(`uniform not found: ${e}`);return t}setTextureUniform(e,t,i){const n=Z.getContext();n.activeTexture(n.TEXTURE0+i),n.uniform1i(this.getUniform(e),i),t.rawBind()}setInteger1Uniform(e,t){Z.getContext().uniform1i(this.getUniform(e),t)}setInteger2Uniform(e,t,i){Z.getContext().uniform2i(this.getUniform(e),t,i)}setInteger3Uniform(e,t,i,n){Z.getContext().uniform3i(this.getUniform(e),t,i,n)}setFloat1Uniform(e,t){Z.getContext().uniform1f(this.getUniform(e),t)}setFloat2Uniform(e,t,i){Z.getContext().uniform2f(this.getUniform(e),t,i)}setFloat3Uniform(e,t,i,n){Z.getContext().uniform3f(this.getUniform(e),t,i,n)}setMatrix3Uniform(e,t){Z.getContext().uniformMatrix3fv(this.getUniform(e),!1,t)}setMatrix4Uniform(e,t){Z.getContext().uniformMatrix4fv(this.getUniform(e),!1,t)}_getAttributes(e){const t=Z.getContext();for(let i=0;i<e.length;++i){const n=t.getAttribLocation(this._program,e[i]);if(n<0)throw new Error(`attribute not found => ${e[i]}`);this._attributes.set(e[i],n)}}_getUniforms(e){const t=Z.getContext();for(let i=0;i<e.length;++i){const n=t.getUniformLocation(this._program,e[i]);if(null===n)throw new Error(`uniform not found => ${e[i]}`);this._uniforms.set(e[i],n)}}_getShader(e,t){const i=Z.getContext(),n=i.createShader(t);if(!n)throw new Error("could not create a shader");if(i.shaderSource(n,e),i.compileShader(n),!i.getShaderParameter(n,i.COMPILE_STATUS)){let e=i.getShaderInfoLog(n);throw e||(e="failed to compile a shader"),new Error(e)}return n}};var he,le;ce._isBound=null,function(e){e[e.pixelated=0]="pixelated",e[e.linear=1]="linear",e[e.mipmap=2]="mipmap"}(he||(he={})),function(e){e[e.noRepeat=0]="noRepeat",e[e.repeat=1]="repeat"}(le||(le={}));let ue=class e{constructor(){this._width=0,this._height=0,this._texture=null}initialize(){if(this._texture)throw new Error("texture: already initialized");const e=Z.getContext();this._texture=e.createTexture()}rawBind(){if(!this._texture)throw new Error("texture: not initialized");const e=Z.getContext();e.bindTexture(e.TEXTURE_2D,this._texture)}preBind(e){this.rawBind(),e(this)}bind(t){this.preBind(t),e.unbind()}static unbind(){const e=Z.getContext();e.bindTexture(e.TEXTURE_2D,null)}load(e,t=he.pixelated,i=le.noRepeat){this._allocate(e.width,e.height,e,t,i)}loadFromMemory(e,t,i,n=he.pixelated,r=le.noRepeat){this._allocate(e,t,i,n,r)}allocate(e,t,i=he.pixelated,n=le.noRepeat){this._allocate(e,t,null,i,n)}allocateDepth(e,t,i=he.pixelated,n=le.noRepeat){this._allocate(e,t,null,i,n,!0)}resize(e,t,i=he.pixelated,n=le.noRepeat){this._allocate(e,t,null,i,n)}_allocate(e,t,i=null,n=he.pixelated,r=le.noRepeat,s=!1){if(!this._texture)throw new Error("texture: not initialized");if(e<=0)throw new Error("texture: width must be positive");if(t<=0)throw new Error("texture: height must be positive");const o=Z.getContext();this._width=e,this._height=t;const a=s?o.DEPTH_COMPONENT32F:o.RGBA,f=s?o.DEPTH_COMPONENT:o.RGBA,d=s?o.FLOAT:o.UNSIGNED_BYTE;i instanceof HTMLImageElement?o.texImage2D(o.TEXTURE_2D,0,a,f,d,i):o.texImage2D(o.TEXTURE_2D,0,a,e,t,0,f,d,i),r===le.noRepeat?(o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE)):r===le.repeat&&(o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_S,o.REPEAT),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_T,o.REPEAT)),n===he.pixelated?(o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,o.NEAREST),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,o.NEAREST)):n===he.linear?(o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,o.LINEAR),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,o.LINEAR)):n===he.mipmap&&(o.generateMipmap(o.TEXTURE_2D),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,o.NEAREST),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,o.LINEAR_MIPMAP_LINEAR))}getWidth(){if(!this._texture)throw new Error("texture not initialized");return this._width}getHeight(){if(!this._texture)throw new Error("texture not initialized");return this._height}getRawObject(){if(!this._texture)throw new Error("texture not initialized");return this._texture}};class _e{constructor(){this._width=0,this._height=0,this._texture=null}initialize(){if(this._texture)throw new Error("texture: already initialized");const e=Z.getContext();this._texture=e.createTexture()}dispose(){Z.getContext().deleteTexture(this._texture)}rawBind(){if(!this._texture)throw new Error("texture: not initialized");const e=Z.getContext();e.bindTexture(e.TEXTURE_2D_ARRAY,this._texture)}preBind(e){this.rawBind(),e(this)}bind(e){this.preBind(e),_e.unbind()}static unbind(){const e=Z.getContext();e.bindTexture(e.TEXTURE_2D_ARRAY,null)}loadFromImage(e,t,i,n,r=he.pixelated,s=le.noRepeat){this._allocate(e,t,i,n,r,s)}loadFromMemory(e,t,i,n,r=he.pixelated,s=le.noRepeat){this._allocate(e,t,i,n,r,s)}_allocate(e,t,i,n=null,r=he.pixelated,s=le.noRepeat){if(!this._texture)throw new Error("texture: not initialized");if(e<=0)throw new Error("texture: width must be positive");if(t<=0)throw new Error("texture: height must be positive");const o=Z.getContext();this._width=e,this._height=t;const a=o.RGBA,f=o.RGBA,d=o.UNSIGNED_BYTE;HTMLImageElement,o.texImage3D(o.TEXTURE_2D_ARRAY,0,a,e,t,i,0,f,d,n),s===le.noRepeat?(o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE),o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE)):s===le.repeat&&(o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_WRAP_S,o.REPEAT),o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_WRAP_T,o.REPEAT)),r===he.pixelated?(o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_MAG_FILTER,o.NEAREST),o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_MIN_FILTER,o.NEAREST)):r===he.linear?(o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_MAG_FILTER,o.LINEAR),o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_MIN_FILTER,o.LINEAR)):r===he.mipmap&&(o.generateMipmap(o.TEXTURE_2D_ARRAY),o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_MAG_FILTER,o.NEAREST),o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_MIN_FILTER,o.LINEAR_MIPMAP_LINEAR))}getWidth(){if(!this._texture)throw new Error("texture not initialized");return this._width}getHeight(){if(!this._texture)throw new Error("texture not initialized");return this._height}getRawObject(){if(!this._texture)throw new Error("texture not initialized");return this._texture}}var ge=Object.freeze({__proto__:null,CubeMap:J,get CubeMapType(){return K},DataTexture:class e{constructor(){this._texture=null}initialize(e){if(this._texture)throw new Error("data texture already initialized");const t=Z.getContext();if(this._texture=t.createTexture(),!this._texture)throw new Error("data texture failed to be created");t.bindTexture(t.TEXTURE_2D,this._texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),this.allocate(e)}dispose(){Z.getContext().deleteTexture(this._texture)}allocate(e){if(!this._texture)throw new Error("data texture not initialized");const t=Array.isArray(e)?e.length:e;if(t<=0)throw new Error("texture: width must be positive");if(t>2048)throw new Error(`data texture max size is 2048 (input was ${t})`);const i=Z.getContext();i.bindTexture(i.TEXTURE_2D,this._texture),Array.isArray(e),this._buffer=new Float32Array(e);const n=i.R32F,r=t,s=i.RED,o=i.FLOAT;i.texImage2D(i.TEXTURE_2D,0,n,r,1,0,s,o,this._buffer)}update(e,t){if(!this._texture)throw new Error("data texture not initialized");if(!this._buffer)throw new Error("data texture update but not previously allocated");if(e+t.length>this._buffer.length)throw new Error(`data texture update but size is larger (start: ${e}, length: ${t.length}, max: ${this._buffer.length})`);const i=Z.getContext();i.bindTexture(i.TEXTURE_2D,this._texture);for(let e=0;e<t.length;++e)this._buffer[e]=t[e];const n=t.length,r=i.RED,s=i.FLOAT,o=e;i.texSubImage2D(i.TEXTURE_2D,0,o,0,n,1,r,s,this._buffer,0)}rawBind(){if(!this._texture)throw new Error("data texture not initialized");const e=Z.getContext();e.bindTexture(e.TEXTURE_2D,this._texture)}preBind(e){this.rawBind(),e(this)}bind(t){this.preBind(t),e.unbind()}static unbind(){const e=Z.getContext();e.bindTexture(e.TEXTURE_2D,null)}},DataTextureVec4:ee,FenceSync:class{constructor(){}dispose(){this._sync&&(Z.getContext().deleteSync(this._sync),this._sync=void 0)}isStarted(){return void 0!==this._sync}start(){this._sync&&this.dispose();const e=Z.getContext(),t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);if(null===t)throw new Error("could not create a webgl fence");this._sync=t,e.flush(),e.finish()}isSignaled(){if(!this._sync)throw new Error("fence not started");const e=Z.getContext();return e.getSyncParameter(this._sync,e.SYNC_STATUS)===e.SIGNALED}wait(e){if(!this._sync)throw new Error("fence not started");const t=Z.getContext();switch(t.clientWaitSync(this._sync,0,e)){case t.TIMEOUT_EXPIRED:return"timed-out";case t.WAIT_FAILED:return console.warn("fence.wait -> should never get here"),this.dispose(),"done";case t.ALREADY_SIGNALED:case t.CONDITION_SATISFIED:default:return this.dispose(),"done"}}},FrameBuffer:te,GeometryWrapper:de,ShaderProgram:ce,Texture:ue,TextureArray:_e,get TextureFilter(){return he},get TextureRepeat(){return le},WebGLContext:Z,checkError:()=>{const e=Z.getContext();switch(e.getError()){case e.INVALID_ENUM:throw new Error("gl.INVALID_ENUM\nAn unacceptable value is specified for an enumerated argument. The offending command is ignored and has no other side effect than to set the error flag.");case e.INVALID_VALUE:throw new Error("gl.INVALID_VALUE\nA numeric argument is out of range. The offending command is ignored and has no other side effect than to set the error flag.");case e.INVALID_OPERATION:throw new Error("gl.INVALID_OPERATION\nThe specified operation is not allowed in the current state. The offending command is ignored and has no other side effect than to set the error flag.");case e.INVALID_FRAMEBUFFER_OPERATION:throw new Error("gl.INVALID_FRAMEBUFFER_OPERATION\nThe framebuffer object is not complete. The offending command is ignored and has no other side effect than to set the error flag.");case e.OUT_OF_MEMORY:throw new Error("gl.OUT_OF_MEMORY\nThere is not enough memory left to execute the command. The state of the GL is undefined, except for the state of the error flags, after this error is recorded.");case e.CONTEXT_LOST_WEBGL:throw new Error("gl.CONTEXT_LOST_WEBGL\n If the WebGL context is lost, this error is returned on the first call to getError. Afterwards and until the context has been restored, it returns gl.NO_ERROR.")}},getCubeMapType:Q}),pe='#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\nuniform vec3 u_lightPos;\n\nin vec3 a_vertexPosition;\nin vec3 a_vertexNormal;\n\nin vec3 a_offsetPosition;\nin vec4 a_offsetOrientation; // quaternion\nin vec3 a_offsetScale;\nin vec3 a_offsetColor;\n\nout vec3 v_color;\n\n// #include "./assets/graphics/shaders/_common/_common-quat-rotations.glsl.vert"\n\nvec4 quat_from_axis_angle(vec3 axis, float angle)\n{\n  vec4 qr;\n  // float half_angle = (angle * 0.5) * 3.14159 / 180.0;\n  float half_angle = (angle * 0.5);\n  qr.x = axis.x * sin(half_angle);\n  qr.y = axis.y * sin(half_angle);\n  qr.z = axis.z * sin(half_angle);\n  qr.w = cos(half_angle);\n  return qr;\n}\n\nvec3 apply_quat_to_vec3(vec3 position, vec4 q)\n{\n  vec3 v = position.xyz;\n  return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\n// #include "./assets/graphics/shaders/_common/_common-apply-lighting.glsl.frag"\n\nfloat getDiffuseLightingRatio(vec3 lightDir, vec3 normal)\n{\n  normal = normalize(normal);\n  lightDir = normalize(lightDir);\n\n  return max(dot(lightDir, normal), 0.0);\n}\n\nvoid main(void)\n{\n\tvec3 worldSpacePosition = a_offsetPosition + apply_quat_to_vec3(a_vertexPosition * a_offsetScale, a_offsetOrientation);\n\tvec3 worldSpaceNormal = apply_quat_to_vec3(a_vertexNormal, a_offsetOrientation);\n\n\tgl_Position = u_composedMatrix * vec4(worldSpacePosition, 1.0);\n\n\tfloat diffuseRatio = getDiffuseLightingRatio(u_lightPos - worldSpacePosition, worldSpaceNormal);\n\n\tv_color = a_offsetColor * (0.3 + diffuseRatio);\n}\n'.trim(),me="#version 300 es\n\nprecision lowp float;\n\nin vec3 v_color;\n\nout vec4 out_color;\n\n//\n//\n//\n\nvoid main(void)\n{\n\tout_color = vec4(v_color, 1.0);\n}\n".trim();class xe{constructor(e,t){this._width=0,this._height=0,this._frameBuffer=new te,this._depthTexture=new ue,this._colorTexture=new ue,this._depthTexture.initialize(),this._colorTexture.initialize(),this.resize(e,t)}resize(e,t){this._width=e,this._height=t,this._depthTexture.bind((e=>{e.allocateDepth(this._width,this._height)})),this._colorTexture.bind((e=>{e.allocate(this._width,this._height)})),this._frameBuffer.bind((e=>{this._depthTexture.bind((t=>{e.attachDepthTexture(t)})),this._colorTexture.bind((t=>{e.attachTexture(t)}))}))}captureScene(e){this._frameBuffer.bind((t=>{const i=Z.getContext();i.viewport(0,0,this._width,this._height),i.clearColor(0,0,0,0),e()}))}get colorTexture(){return this._colorTexture}}var be="\n#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\n\nin vec3  a_vertex_position;\nin vec2  a_vertex_texCoord;\n\nout vec2 v_texCoord;\n\nvoid main(void)\n{\n  v_texCoord = a_vertex_texCoord;\n  gl_Position = u_composedMatrix * vec4(a_vertex_position, 1.0);\n}\n\n".trim(),ve="\n#version 300 es\n\nprecision highp float;\n\nuniform sampler2D u_texture;\n\nin vec2 v_texCoord;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  o_color = texture(u_texture, v_texCoord);\n}\n".trim();class Ee{constructor(e,t){this._width=0,this._height=0,this._shader=new ce("RenderHudTexture",{vertexSrc:be,fragmentSrc:ve,attributes:["a_vertex_position","a_vertex_texCoord"],uniforms:["u_composedMatrix","u_texture"]});const i=new fe;i.reset().setPrimitiveType("triangleStrip").addVbo().addVboAttribute("a_vertex_position","vec3f").addVboAttribute("a_vertex_texCoord","vec2f"),this._geometry=new ae(this._shader,i.getDef()),this.resize(e,t)}resize(e,t){this._width=e,this._height=t;const i=[{pos:[0*this._width,0*this._height,-1],tex:[0,0]},{pos:[1*this._width,0*this._height,-1],tex:[1,0]},{pos:[0*this._width,1*this._height,-1],tex:[0,1]},{pos:[1*this._width,1*this._height,-1],tex:[1,1]}].map((e=>[e.pos[0],e.pos[1],e.pos[2],e.tex[0],e.tex[1]])).flat();this._geometry.allocateBuffer(0,i,i.length),this._geometry.setPrimitiveCount(i.length/5)}flush(e,t){this._shader.bind((i=>{i.setMatrix4Uniform("u_composedMatrix",e),i.setTextureUniform("u_texture",t,0),this._geometry.render()}))}}var Te="\n#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\n\nin vec3 a_vertex_position;\nin vec4 a_vertex_color;\n\nflat out vec4 v_color;\n\nvoid main(void)\n{\n  gl_Position = u_composedMatrix * vec4(a_vertex_position, 1.0);\n\n  v_color = a_vertex_color;\n}\n".trim(),ye="\n#version 300 es\n\nprecision lowp float;\n\nflat in vec4 v_color;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  o_color = v_color;\n}\n".trim();class Se{constructor(e,t){this._buffer=new Float32Array(14336),this._currentSize=0,this._shader=e;const i=Object.assign(Object.assign({},t),{primitiveType:re.lines});this._geometry=new ae(e,i)}pushLine(e,t,i){var n;if(this._currentSize+14>=this._buffer.length){if(!this._shader.isBound())return;this.flush()}const r=null!==(n=i[3])&&void 0!==n?n:1;this._buffer[this._currentSize+0]=e[0],this._buffer[this._currentSize+1]=e[1],this._buffer[this._currentSize+2]=e[2],this._buffer[this._currentSize+3]=i[0],this._buffer[this._currentSize+4]=i[1],this._buffer[this._currentSize+5]=i[2],this._buffer[this._currentSize+6]=r,this._currentSize+=7,this._buffer[this._currentSize+0]=t[0],this._buffer[this._currentSize+1]=t[1],this._buffer[this._currentSize+2]=t[2],this._buffer[this._currentSize+3]=i[0],this._buffer[this._currentSize+4]=i[1],this._buffer[this._currentSize+5]=i[2],this._buffer[this._currentSize+6]=r,this._currentSize+=7}canRender(){return this._currentSize>0}flush(){this.canRender()&&(this._geometry.allocateBuffer(0,this._buffer,this._currentSize),this._geometry.setPrimitiveCount(this._currentSize/7),this._geometry.render(),this.clear())}clear(){this._currentSize=0}}class Re{constructor(e,t){this._buffer=new Float32Array(7168),this._currentSize=0,this._shader=e;const i=Object.assign(Object.assign({},t),{primitiveType:re.triangles});this._geometry=new ae(e,i)}pushTriangle(e,t,i,n){var r;if(this._currentSize+42>=this._buffer.length){if(!this._shader.isBound())return;this.flush()}const s=null!==(r=n[3])&&void 0!==r?r:1;this._buffer[this._currentSize+0]=e[0],this._buffer[this._currentSize+1]=e[1],this._buffer[this._currentSize+2]=e[2],this._buffer[this._currentSize+3]=n[0],this._buffer[this._currentSize+4]=n[1],this._buffer[this._currentSize+5]=n[2],this._buffer[this._currentSize+6]=s,this._currentSize+=7,this._buffer[this._currentSize+0]=t[0],this._buffer[this._currentSize+1]=t[1],this._buffer[this._currentSize+2]=t[2],this._buffer[this._currentSize+3]=n[0],this._buffer[this._currentSize+4]=n[1],this._buffer[this._currentSize+5]=n[2],this._buffer[this._currentSize+6]=s,this._currentSize+=7,this._buffer[this._currentSize+0]=i[0],this._buffer[this._currentSize+1]=i[1],this._buffer[this._currentSize+2]=i[2],this._buffer[this._currentSize+3]=n[0],this._buffer[this._currentSize+4]=n[1],this._buffer[this._currentSize+5]=n[2],this._buffer[this._currentSize+6]=s,this._currentSize+=7}pushLine(e,t,i,n){if(this._currentSize+42>=this._buffer.length)return;const r=t[0]-e[0],s=t[1]-e[1],o=Math.atan2(s,r)+.5*Math.PI,a=Math.cos(o)*i*.5,f=Math.sin(o)*i*.5;this.pushTriangle([e[0]-a,e[1]-f,e[2]],[t[0]-a,t[1]-f,t[2]],[t[0]+a,t[1]+f,t[2]],n),this.pushTriangle([e[0]-a,e[1]-f,e[2]],[t[0]+a,t[1]+f,t[2]],[e[0]+a,e[1]+f,e[2]],n)}pushRotatedLine(e,t,i,n,r){this.pushLine([e[0]-i*Math.cos(t),e[1]-i*Math.sin(t),e[2]],[e[0]+i*Math.cos(t),e[1]+i*Math.sin(t),e[2]],n,r)}pushOriginBoundRectangle(e,t,i){if(this._currentSize+42>=this._buffer.length)return;const n=[e[0]+t[0],e[1]+t[1]];this.pushTriangle([e[0],e[1],e[2]],[n[0],n[1],e[2]],[e[0],n[1],e[2]],i),this.pushTriangle([e[0],e[1],e[2]],[n[0],e[1],e[2]],[n[0],n[1],e[2]],i)}pushCenteredRectangle(e,t,i){const n=[e[0]-.5*t[0],e[1]-.5*t[1],e[2]];this.pushOriginBoundRectangle(n,t,i)}canRender(){return this._currentSize>0}flush(){this.canRender()&&(this._geometry.allocateBuffer(0,this._buffer,this._currentSize),this._geometry.setPrimitiveCount(this._currentSize/7),this._geometry.render(),this.clear())}clear(){this._currentSize=0}}var we="\n#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\n\nin vec2 a_vertex_position;\nin vec2 a_vertex_texCoord;\nin vec3 a_offset_position;\nin vec2 a_offset_texCoord;\nin vec3 a_offset_color;\nin float a_offset_scale;\n\nout vec2 v_texCoord;\nflat out vec3 v_color;\n\nvoid main(void)\n{\n  vec3 position = vec3(a_vertex_position, 0.0) * a_offset_scale + a_offset_position;\n\n  gl_Position = u_composedMatrix * vec4(position, 1.0);\n\n  v_texCoord = a_vertex_texCoord + a_offset_texCoord;\n  v_color = a_offset_color;\n}\n".trim(),Ce="\n#version 300 es\n\nprecision mediump float;\n\nuniform sampler2D u_texture;\n\nin vec2 v_texCoord;\nflat in vec3 v_color;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  vec4 textureColor = texture(u_texture, v_texCoord);\n  if (textureColor.a < 0.5)\n  {\n    discard;\n  }\n  else\n  {\n    o_color = vec4(v_color, textureColor.a);\n  }\n}\n".trim();const Ae=[16,6],De=[1/Ae[0],1/Ae[1]],ze=[.2,.2,.2],Le=[.2,.6,.2],Fe=(e,t,i)=>{const{center:n}=e;t.pushCenteredRectangle(z(n[0],n[1],-.3),e.size,[0,0,0]),t.pushCenteredRectangle(z(n[0],n[1],-.2),[e.size[0]-2,e.size[1]-2],e.color),e.text&&i.setTextScale(16).setTextAlign("centered","centered").pushText(e.text,n).setTextAlign("left","top"),e.lines&&e.lines.forEach((e=>{t.pushThickLine([n[0]+e.a[0],n[1]+e.a[1],0],[n[0]+e.b[0],n[1]+e.b[1],0],e.thickness,e.color)}))},Pe=(e,t,i)=>{Fe({center:[e[0],e[1]],size:[40,40],text:"A\nQ",color:a.isPressed("A","Q")?Le:ze},t,i),Fe({center:[e[0]+45,e[1]],size:[40,40],text:"S",color:a.isPressed("S")?Le:ze},t,i),Fe({center:[e[0]+45,e[1]+45],size:[40,40],text:"W\nZ",color:a.isPressed("W","Z")?Le:ze},t,i),Fe({center:[e[0]+90,e[1]],size:[40,40],text:"D",color:a.isPressed("D")?Le:ze},t,i)},Me=(e,t,i)=>{Fe({center:[e[0],e[1]],size:[40,40],lines:[{a:[15,0],b:[-8,0],thickness:6,color:[1,1,1]},{a:[0,10],b:[-12,-2],thickness:6,color:[1,1,1]},{a:[0,-10],b:[-12,2],thickness:6,color:[1,1,1]}],color:a.isPressed("ArrowLeft")?Le:ze},t,i),Fe({center:[e[0]+45,e[1]],size:[40,40],lines:[{a:[0,15],b:[0,-8],thickness:6,color:[1,1,1]},{a:[10,0],b:[-2,-12],thickness:6,color:[1,1,1]},{a:[-10,0],b:[2,-12],thickness:6,color:[1,1,1]}],color:a.isPressed("ArrowDown")?Le:ze},t,i),Fe({center:[e[0]+45,e[1]+45],size:[40,40],lines:[{a:[0,-15],b:[0,8],thickness:6,color:[1,1,1]},{a:[10,0],b:[-2,12],thickness:6,color:[1,1,1]},{a:[-10,0],b:[2,12],thickness:6,color:[1,1,1]}],color:a.isPressed("ArrowUp")?Le:ze},t,i),Fe({center:[e[0]+90,e[1]],size:[40,40],lines:[{a:[-15,0],b:[8,0],thickness:6,color:[1,1,1]},{a:[0,10],b:[12,-2],thickness:6,color:[1,1,1]},{a:[0,-10],b:[12,2],thickness:6,color:[1,1,1]}],color:a.isPressed("ArrowRight")?Le:ze},t,i)},Be=(e,t,i,n)=>{m.isSupported(e)?Fe({center:[t[0]+115,t[1]],size:[230,60],text:"Touch Events\nSupported\n(double tap)",color:[0,.5,0]},i,n):Fe({center:[t[0]+115,t[1]],size:[230,60],text:"Touch Events\nNot Supported",color:[.5,0,0]},i,n),g.canBePointerLocked(e)?Fe({center:[t[0]+105,t[1]+70],size:[210,60],text:"Mouse\nSupported",color:[0,.5,0]},i,n):Fe({center:[t[0]+105,t[1]+70],size:[210,60],text:"Mouse Events\nNot Supported",color:[.5,0,0]},i,n)},ke=(e,t,i,n,r,s=!1)=>{const o=5*Math.ceil(i.maxDelta/5);{n.pushOriginBoundRectangle(e,t,[0,0,0,.5]);const i=[[e[0]+0*t[0],e[1]+0*t[1],0],[e[0]+1*t[0],e[1]+0*t[1],0],[e[0]+1*t[0],e[1]+1*t[1],0],[e[0]+0*t[0],e[1]+1*t[1],0]];n.pushLine(i[0],i[1],[1,1,1]),n.pushLine(i[1],i[2],[1,1,1]),n.pushLine(i[2],i[3],[1,1,1]),n.pushLine(i[3],i[0],[1,1,1])}for(let i=5;i<o;i+=5){const r=i/o,s=[e[0]+0,e[1]+t[1]*r,0],a=[e[0]+t[0],e[1]+t[1]*r,0];n.pushLine(s,a,[.5,.5,.5])}if(i.framesDelta.length>=2){const r=t[0]/i.framesDelta.length;let s=i.framesDelta[0],a=0,f=t[1]*s/o;for(let d=1;d<i.framesDelta.length;++d){const c=i.framesDelta[d],h=d*r,l=t[1]*c/o,u=[e[0]+a,e[1]+f,0],_=[e[0]+h,e[1]+l,0];n.pushLine(u,_,[1,1,1]),s=c,a=h,f=l}}{const n=14,o=.5*n,a=i.averageDelta,f=i.maxDelta,d=i.minDelta;let c=`~${a.toFixed(0)}ms`,h=`<${f}ms`,l=`>${d}ms`;if(!0===s){const e=e=>e<999?e.toFixed(0):"???";c+=`\n~${e(1e3/a)}fps`,h+=`\n<${e(1e3/f)}fps`,l+=`\n>${e(1e3/d)}fps`}r.setTextScale(n).setTextAlign("left","top").setTextColor(1,1,.75).pushText(c,[e[0]+7,e[1]-8]).setTextAlign("left","centered").setTextColor(1,.75,.75).pushText(h,[e[0]+t[0]+o,e[1]+t[1]-1*o]).setTextColor(.75,1,.75).pushText(l,[e[0]+t[0]+o,e[1]+1*o]).setTextColor(1,1,1)}};var Ie=Object.freeze({__proto__:null,GeometryStackRenderer:class{constructor(){this._aliasedGeometriesMap=new Map,this._shader=new ce("GeometryStackRenderer",{vertexSrc:pe,fragmentSrc:me,attributes:["a_vertexPosition","a_vertexNormal","a_offsetPosition","a_offsetOrientation","a_offsetScale","a_offsetColor"],uniforms:["u_composedMatrix","u_lightPos"]});const e=new fe;e.reset().setPrimitiveType("triangles").addVbo().addVboAttribute("a_vertexPosition","vec3f").addVboAttribute("a_vertexNormal","vec3f").addVbo().setVboAsDynamic().setVboAsInstanced().addVboAttribute("a_offsetPosition","vec3f").addVboAttribute("a_offsetOrientation","vec4f").addVboAttribute("a_offsetScale","vec3f").addVboAttribute("a_offsetColor","vec3f"),this._geoDef=e.getDef()}createAlias(e,t,i){if(this._aliasedGeometriesMap.get(e))throw new Error("alias already exist, alias: "+e);const n={geometry:new ae(this._shader,this._geoDef),buffer:new Float32Array(13*t),currentSize:0};n.geometry.updateBuffer(0,i,i.length),n.geometry.setPrimitiveCount(i.length/6),this._aliasedGeometriesMap.set(e,n)}deleteAlias(e){if(!this._aliasedGeometriesMap.get(e))throw new Error("alias not found, alias: "+e);this._aliasedGeometriesMap.delete(e)}clearAlias(e){const t=this._aliasedGeometriesMap.get(e);if(!t)throw new Error("alias not found, alias: "+e);t.currentSize=0}pushAlias(e,t,i,n,r){const s=this._aliasedGeometriesMap.get(e);if(!s)throw new Error("alias not found, alias: "+e);s.buffer[s.currentSize++]=t[0],s.buffer[s.currentSize++]=t[1],s.buffer[s.currentSize++]=t[2],s.buffer[s.currentSize++]=i[0],s.buffer[s.currentSize++]=i[1],s.buffer[s.currentSize++]=i[2],s.buffer[s.currentSize++]=i[3],s.buffer[s.currentSize++]=n[0],s.buffer[s.currentSize++]=n[1],s.buffer[s.currentSize++]=n[2],s.buffer[s.currentSize++]=r[0],s.buffer[s.currentSize++]=r[1],s.buffer[s.currentSize++]=r[2]}flush(e,t,i=!0){let n=!1;[...this._aliasedGeometriesMap.values()].forEach((e=>{e.currentSize>0&&(n=!0)})),n&&this._shader.bind((n=>{n.setMatrix4Uniform("u_composedMatrix",e),n.setFloat3Uniform("u_lightPos",t[0],t[1],t[2]),[...this._aliasedGeometriesMap.values()].forEach((e=>{0!==e.currentSize&&(e.geometry.updateBuffer(1,e.buffer,e.currentSize),e.geometry.setInstancedCount(e.currentSize/13),e.geometry.render(),!0===i&&(e.currentSize=0))}))}))}clear(){[...this._aliasedGeometriesMap.values()].forEach((e=>{e.currentSize=0}))}},MultiBuffersRendering:class{constructor(e,t){this._sceneCapturer=new xe(e,t),this._renderHudTexture=new Ee(e,t)}resize(e,t){this._sceneCapturer.resize(e,t),this._renderHudTexture.resize(e,t)}captureScene(e){this._sceneCapturer.captureScene(e)}renderHud(e){this._renderHudTexture.flush(e,this._sceneCapturer.colorTexture)}},StackRenderers:class{constructor(){this._shader=new ce("StackRenderers",{vertexSrc:Te,fragmentSrc:ye,attributes:["a_vertex_position","a_vertex_color"],uniforms:["u_composedMatrix"]});const e=new fe;e.reset().setPrimitiveType("lines").addVbo().setVboAsDynamic().addVboAttribute("a_vertex_position","vec3f").addVboAttribute("a_vertex_color","vec4f"),this._wireFramesStackRenderer=new Se(this._shader,e.getDef()),this._trianglesStackRenderer=new Re(this._shader,e.getDef())}pushLine(e,t,i){this._wireFramesStackRenderer.pushLine(e,t,i)}pushCross(e,t,i){const n=[[e[0]-t,e[1],e[2]],[e[0]+t,e[1],e[2]],[e[0],e[1]-t,e[2]],[e[0],e[1]+t,e[2]],[e[0],e[1],e[2]-t],[e[0],e[1],e[2]+t]],r=[0,1,2,3,4,5];for(let e=0;e<r.length;e+=2){const t=n[e+0],r=n[e+1];this._wireFramesStackRenderer.pushLine(t,r,i)}}pushThickLine(e,t,i,n){this._trianglesStackRenderer.pushLine(e,t,i,n)}pushRotatedLine(e,t,i,n,r){this._trianglesStackRenderer.pushRotatedLine(e,t,i,n,r)}pushOriginBoundRectangle(e,t,i){this._trianglesStackRenderer.pushOriginBoundRectangle(e,t,i)}pushCenteredRectangle(e,t,i){this._trianglesStackRenderer.pushCenteredRectangle(e,t,i)}pushTriangle(e,t,i,n){this._trianglesStackRenderer.pushTriangle(e,t,i,n)}pushQuad(e,t,i){this.pushTriangle([e[0]+0*t[0],e[1]+0*t[1],e[2]],[e[0]+1*t[0],e[1]+1*t[1],e[2]],[e[0]+1*t[0],e[1]+0*t[1],e[2]],i),this.pushTriangle([e[0]+0*t[0],e[1]+0*t[1],e[2]],[e[0]+1*t[0],e[1]+1*t[1],e[2]],[e[0]+0*t[0],e[1]+1*t[1],e[2]],i)}flush(e){(this._wireFramesStackRenderer.canRender()||this._trianglesStackRenderer.canRender())&&this._shader.bind((t=>{t.setMatrix4Uniform("u_composedMatrix",e),this._wireFramesStackRenderer.flush(),this._trianglesStackRenderer.flush()}))}safeRender(e,t){this._shader.bind((i=>{i.setMatrix4Uniform("u_composedMatrix",e),t(),this._wireFramesStackRenderer.flush(),this._trianglesStackRenderer.flush()}))}clear(){this._wireFramesStackRenderer.clear(),this._trianglesStackRenderer.clear()}},TextRenderer:class{constructor(){this._texture=new ue,this._buffer=new Float32Array(36864),this._currentSize=0,this._textScale=14,this._textColor=[1,1,1],this._horizontalTextAlign="left",this._verticalTextAlign="top",this._shader=new ce("TextRenderer",{vertexSrc:we,fragmentSrc:Ce,attributes:["a_vertex_position","a_vertex_texCoord","a_offset_position","a_offset_texCoord","a_offset_color","a_offset_scale"],uniforms:["u_composedMatrix","u_texture"]});const e=new fe;e.reset().setPrimitiveType("triangles").addVbo().addVboAttribute("a_vertex_position","vec2f").addVboAttribute("a_vertex_texCoord","vec2f").setStride(16).addVbo().setVboAsDynamic().setVboAsInstanced().addVboAttribute("a_offset_position","vec3f").addVboAttribute("a_offset_texCoord","vec2f").addVboAttribute("a_offset_color","vec3f").addVboAttribute("a_offset_scale","float").setStride(36),this._geometry=new ae(this._shader,e.getDef());const t=[{position:[.5,-.5],texCoord:[1*De[0],1*De[1]]},{position:[-.5,-.5],texCoord:[0*De[0],1*De[1]]},{position:[.5,.5],texCoord:[1*De[0],0*De[1]]},{position:[-.5,.5],texCoord:[0*De[0],0*De[1]]}],i=[1,0,2,1,2,3],n=[];for(const e of i){const i=t[e];n.push(i.position[0],i.position[1],i.texCoord[0],i.texCoord[1])}this._geometry.allocateBuffer(0,n,n.length),this._geometry.setPrimitiveCount(n.length/4),this._texCoordMap=new Map([[" ",[0*De[0],0*De[1]]],["!",[1*De[0],0*De[1]]],['"',[2*De[0],0*De[1]]],["#",[3*De[0],0*De[1]]],["$",[4*De[0],0*De[1]]],["%",[5*De[0],0*De[1]]],["&",[6*De[0],0*De[1]]],["'",[7*De[0],0*De[1]]],["(",[8*De[0],0*De[1]]],[")",[9*De[0],0*De[1]]],["*",[10*De[0],0*De[1]]],["+",[11*De[0],0*De[1]]],[",",[12*De[0],0*De[1]]],["-",[13*De[0],0*De[1]]],[".",[14*De[0],0*De[1]]],["/",[15*De[0],0*De[1]]],["0",[0*De[0],1*De[1]]],["1",[1*De[0],1*De[1]]],["2",[2*De[0],1*De[1]]],["3",[3*De[0],1*De[1]]],["4",[4*De[0],1*De[1]]],["5",[5*De[0],1*De[1]]],["6",[6*De[0],1*De[1]]],["7",[7*De[0],1*De[1]]],["8",[8*De[0],1*De[1]]],["9",[9*De[0],1*De[1]]],[":",[10*De[0],1*De[1]]],[";",[11*De[0],1*De[1]]],["<",[12*De[0],1*De[1]]],["=",[13*De[0],1*De[1]]],[">",[14*De[0],1*De[1]]],["?",[15*De[0],1*De[1]]],["@",[0*De[0],2*De[1]]],["A",[1*De[0],2*De[1]]],["B",[2*De[0],2*De[1]]],["C",[3*De[0],2*De[1]]],["D",[4*De[0],2*De[1]]],["E",[5*De[0],2*De[1]]],["F",[6*De[0],2*De[1]]],["G",[7*De[0],2*De[1]]],["H",[8*De[0],2*De[1]]],["I",[9*De[0],2*De[1]]],["J",[10*De[0],2*De[1]]],["K",[11*De[0],2*De[1]]],["L",[12*De[0],2*De[1]]],["M",[13*De[0],2*De[1]]],["N",[14*De[0],2*De[1]]],["O",[15*De[0],2*De[1]]],["P",[0*De[0],3*De[1]]],["Q",[1*De[0],3*De[1]]],["R",[2*De[0],3*De[1]]],["S",[3*De[0],3*De[1]]],["T",[4*De[0],3*De[1]]],["U",[5*De[0],3*De[1]]],["V",[6*De[0],3*De[1]]],["W",[7*De[0],3*De[1]]],["X",[8*De[0],3*De[1]]],["Y",[9*De[0],3*De[1]]],["Z",[10*De[0],3*De[1]]],["[",[11*De[0],3*De[1]]],["\\",[12*De[0],3*De[1]]],["]",[13*De[0],3*De[1]]],["^",[14*De[0],3*De[1]]],["_",[15*De[0],3*De[1]]],["`",[0*De[0],4*De[1]]],["a",[1*De[0],4*De[1]]],["b",[2*De[0],4*De[1]]],["c",[3*De[0],4*De[1]]],["d",[4*De[0],4*De[1]]],["e",[5*De[0],4*De[1]]],["f",[6*De[0],4*De[1]]],["g",[7*De[0],4*De[1]]],["h",[8*De[0],4*De[1]]],["i",[9*De[0],4*De[1]]],["j",[10*De[0],4*De[1]]],["k",[11*De[0],4*De[1]]],["l",[12*De[0],4*De[1]]],["m",[13*De[0],4*De[1]]],["n",[14*De[0],4*De[1]]],["o",[15*De[0],4*De[1]]],["p",[0*De[0],5*De[1]]],["q",[1*De[0],5*De[1]]],["r",[2*De[0],5*De[1]]],["s",[3*De[0],5*De[1]]],["t",[4*De[0],5*De[1]]],["u",[5*De[0],5*De[1]]],["v",[6*De[0],5*De[1]]],["w",[7*De[0],5*De[1]]],["x",[8*De[0],5*De[1]]],["y",[9*De[0],5*De[1]]],["z",[10*De[0],5*De[1]]],["{",[11*De[0],5*De[1]]],["|",[12*De[0],5*De[1]]],["}",[13*De[0],5*De[1]]],["~",[14*De[0],5*De[1]]]]);const r=new Uint8Array(98304);{let e=0;for(let t=0;t<5818;t+=2){let i=parseInt(`${"7e7e28fd03fd07fe04fe0aff02ff7e4dfd0cfd03fd07fe04fe0aff02ff1afc0dfd10fc08fc0ffe55ff15fb0bfd03fd07fe04fe08f707fd04ff07fe02fe0cfd0ffd0cfd0aff03fe03ff0afe44fe15fb0bfd03fd04f204f607fd03fe07fe02fe0cfd0efd0efd0aff02fe02ff0bfe43fd15fb0cfe03fe05f204fe01ff02ff0afd02fd07fe02fe0bfd0efd10fd0afa0cfe42fd16fb1bfe04fe07fe01ff02ff0efd09fc1cfd12fd09fa0cfe41fd17fb1bfe04fe07f70bfd0afc04ff17fd12fd06f405f616f61cfd19fd1cfe04fe08f709fd0bfb02fe17fd12fd06f405f616f61bfd1afd1cfe04fe0aff02ff01fe08fd0bfe02fa17fd12fd09fa0cfe3efd37f207ff02ff01fe07fd02fd07fe03fc19fd10fd0afa0cfe3dfd38f204f607fe03fd07fe03fd1bfd0efd0aff02fe02ff0bfe0cfd1dfd0dfd1dfd1cfe04fe07f708ff04fd07fe02fb1bfd0cfd0aff03fe03ff0afe0cfd1dfd0cfd1efd1cfe04fe0aff02ff1afb02fe1bfc08fc0ffe1cfd1dfd0bfd1ffd1cfe04fe0aff02ff7afd7e7e7e7e7e7e0efd17fd10fc0af80bfe0bf909f90dfd08f609fb08f506f808f82cfd19fd0df807fd04fd0afe0afd03fd07fd03fd0bfc08fd0ffd0bfd05fd05fd04fd06fd04fd2afd1bfd0bfc02fc06fd03fc09fd0afd04fd06fd04fd09fb08fd0efd0cfd05fd05fd04fd06fd04fd09fd0cfd0efd1dfd0afe05fd06fd02fb06fa11fd0dfd08fe01fd08fd0dfd0dfd05fd05fd04fd06fd04fd09fd0cfd0dfd0af409fd10fd06fd02fb06fa10fd0dfd08fe02fd08fd0dfd15fd05fb02fd06fd04fd09fd0cfd0cfd0bf40afd0efd07fd01fe01fd09fd0ffd0bfb08fe03fd08f808f70efd08fa08f626fd23fd0cfd08fd01fe01fd09fd0efd0cfb08f606f707f60cfd09fa09f726fd23fd0bfd09fb02fd09fd0dfd10fd07f60cfc06fd04fd0bfd08fd02fb0dfd09fd0cfd0cfd0bf40afd0cfd09fb02fd09fd0cfd12fd0bfd0ffd06fd04fd0afd09fd04fd0dfd09fd0cfd0dfd0af409fd19fc03fd09fd0bfd03fd06fd04fd0bfd08fd04fd06fd04fd09fd0afd04fd0cfd0afd0cfd0efd1dfd1afd04fd09fd0afd04fd06fd03fd0cfd08fd03fd07fd04fd09fd0afd04fd0bfd19fd10fd1bfd0ffd0af807f707f607f90bf907f909f80afd0bf809fb2efd19fd10fd7e51fd17fd11fd7e7e7e7e13f87e78fd05fd08fc09f709f907f808f606f608f907fd03fd07f90df905fc03fd06fb0bfd05fd05fd05fd08fb08fd05fd07fa09fd03fd07fd03fd07fd02fd08fd04fe07fd04fe07fd03fd06fd03fd09fd11fd08fd03fd07fd0cfc03fc05fd05fd07fd01fd07fd05fd06fd02fd08fd03fd06fd04fd07fd03fd07fd05ff07fd05ff06fd04fd06fd03fd09fd11fd08fd02fd08fd0cfb01fb05fc04fd06fd03fd06fd05fd05fd04fd07fd03fd06fd0efd03fd07fd0dfd0cfd04fd06fd03fd09fd11fd08fd01fd09fd0cf505fb03fd05fd05fd05fd02fa05fd04fd07fd03fd06fd0efd03fd07fd03fe08fd03fe07fd0dfd03fd09fd11fd08fa0afd0cf505fa02fd05fd05fd05fd02fa05fd04fd07f807fd0efd03fd07f808f807fd0df709fd11fd08fb0bfd0cfd01fd01fd05fd01fd01fd05fd05fd05fd02fa05fd04fd07f807fd0efd03fd07f808f807fd0df709fd11fd08fb0bfd0cfd02ff02fd05fd02fa05fd05fd05fd02fa05f607fd03fd06fd0efd03fd07fd03fe08fd03fe07fd02fb06fd03fd09fd0bfd03fd08fa0afd0cfd05fd05fd03fb05fd05fd05fd0dfd04fd07fd03fd06fd0efd03fd07fd0dfd0cfd04fd06fd03fd09fd0bfd03fd08fd01fd09fd05ff06fd05fd05fd04fc05fd05fd05fd0dfd04fd07fd03fd06fd04fd07fd03fd07fd05ff07fd0cfd04fd06fd03fd09fd0bfd03fd08fd02fd08fd04fe06fd05fd05fd05fd06fd03fd06fd0dfd04fd07fd03fd07fd03fd07fd02fd08fd04fe07fd0dfd03fd06fd03fd09fd0bfd03fd08fd03fd07fd03fd06fd05fd05fd05fd07fd01fd07fd0dfd04fd06f709f907f808f606fb0df806fd03fd07f90af908fc03fd06f606fd05fd05fd05fd08fb0af87e7e7e7e7e7e7e68fe1af70afb08f708f807f505fd03fd07fd03fd07fd05fd05fd03fd07fd03fd07f608f907ff11f90afc1afd03fd07fc01fc07fd03fd06fd04fd06fe02fd02fe05fd03fd07fd03fd07fd05fd05fd03fd07fd03fd07fd04fd08fd0bfe14fd09fa19fd03fd07fd03fd07fd03fd06fd04fd06ff03fd03ff05fd03fd07fd03fd07fd05fd05fd03fd07fd03fd07fe05fd08fd0bfd13fd08fd02fd18fd03fd06fd05fd06fd03fd06fd04fd0afd09fd03fd07fd03fd07fd05fd06fd01fd08fd03fd07ff05fd09fd0cfd12fd07fd04fd17fd03fd06fd05fd06fd03fd06fd11fd09fd03fd07fd03fd07fd05fd07fb09fd03fd0cfd0afd0dfd11fd28f807fd05fd06f808f90cfd09fd03fd07fd03fd07fd02ff02fd08fd0bfd01fd0cfd0bfd0efd10fd28f807fd05fd06f809f90bfd09fd03fd07fd03fd07fd02ff02fd08fd0cfb0cfd0cfd0ffd0ffd28fd0cfd03fb06fd02fd0efd0afd09fd03fd07fd03fd07fd02ff02fd07fb0cfd0cfd0dfd10fd0efd28fd0cfd02fa06fd03fd06fd04fd0afd09fd03fd07fd03fd08f707fd01fd0bfd0bfd05ff08fd11fd0dfd28fd0df707fd03fd06fd04fd0afd09fd03fd08fd01fd09fc01fc06fd03fd0afd0afd05fe08fd12fd0cfd28fd0df707fd03fd06fd04fd0afd09fd03fd09fb0bfd01fd07fd03fd0afd0afd04fd08fd13fd0bfd27fb12fd06fc03fd07f809f908f90bfd0cfd01fd07fd03fd08f908f608f910fd06f93cfa7e54f07e72f07e7e7e7e0bfd1dfc21fb19fb18fc10fd0ffd07fc0dfa39fd1efd22fd19fd01fd18fd10fd0ffd08fd10fd3bfd1cfd22fd19fd01fd18fd10fd0ffd08fd10fd3bfd1cfd22fd19fd1cfd2dfd10fd4af909f808f909f808f90afd0cfb02fe07fd01fc08fa0cfa08fd03fd0afd09f606f809f91efd08fd03fd06fd03fd07fd03fd07fd03fd07f808fd03fd08fc02fd0afd0ffd08fd02fd0bfd09fd02ff02fd05fd03fd07fd03fd1dfd08fd03fd06fd03fd07fd03fd07fd03fd07f808fd03fd08fc02fd0afd0ffd08fd01fd0cfd09fd02ff02fd05fd03fd07fd03fd18f808fd03fd06fd0dfd03fd07f709fd0bfd03fd08fd03fd0afd0ffd08fa0dfd09fd02ff02fd05fd03fd07fd03fd17fd03fd08fd03fd06fd0dfd03fd07fd0ffd0bfd03fd08fd03fd0afd0ffd08fd01fd0cfd09fd02ff02fd05fd03fd07fd03fd17fd03fd08fd03fd06fd03fd07fd03fd07fd03fd09fd0cf808fd03fd0afd0ffd08fd02fd0bfd09fd02ff02fd05fd03fd07fd03fd17fd03fd08fd03fd06fd03fd07fd03fd07fd03fd09fd0df908fd03fd0afd0ffd08fd03fd0afd09fd02ff02fd05fd03fd07fd03fd18fb02fe06fe02fb08f909fb02fe07f908f90ffd07fc03fd07f706fd03fd07fc03fd07f706fd05fd05fd03fd08f978fd03fd27fd03fd7e4af92afa7e7e7e7e7e7e18fa09fc09fa1efe4eff6efd0dfc0dfd1cfc4cfe6efd0dfc0dfd1bfa4afd6efd0dfc0dfd1afd02fd07fe02fb07fb02fe07fc02fd08f908f707fd03fd07fd03fd07fd05fd05fd02fd09fd03fd06f80afd0efc0efd08fb03fd05fd04fd07fd03fd05fd03fd09f706fd04fe09fd0bfd03fd07fd03fd07fd05fd05fd02fd09fd03fd06fe03fd08fd24fd05fd01fd02fd05fe06fe07fd03fd05fd03fd09fc02fd06fd04fe09fd0bfd03fd07fd03fd07fd05fd06fa0afd03fd06ff03fd09fd24fd05fd02fd01fd05fe06fe07fd03fd05fd03fd09fd0dfb0cfd0bfd03fd07fd03fd07fd02ff02fd07fc0bfd03fd09fd0cfd0efc0efd07fd03fb06fe06fe07fd03fd05fd03fd09fd0ffb0afd0bfd03fd07fd03fd07fd02ff02fd07fc0bfd03fd08fd0efd0dfc0dfd19fe06fe07fd03fd05fd03fd09fd0cfe04fd09fd01fd07fd03fd08fd01fd09fc01fc07fa0bf908fd03ff0bfd0dfc0dfd19fe06fe07f807f809fd0cfe04fd09fd01fd07fd03fd09fb0bfd01fd07fd02fd0bfb08fd03fe0bfd0dfc0dfd19f607fd11fd08fb0cf90bfb09fb02fe09fd0cfd01fd07fd02fd0dfd08f80cfa09fc09fa1af607fd11fd7cfd69fb0ffb77fa".substring(t,t+2)}000000`,16)>>24,n=0;i<0&&(i=-i,n=255);for(let t=0;t<i;++t)r[4*e+0]=n,r[4*e+1]=n,r[4*e+2]=n,r[4*e+3]=n,++e}}this._texture.initialize(),this._texture.bind((e=>{e.loadFromMemory(256,96,r)}))}setTextAlign(e,t){return this._horizontalTextAlign=e,this._verticalTextAlign=t,this}setTextScale(e){return this._textScale=e,this}setTextColor(e,t,i){return this._textColor[0]=e,this._textColor[1]=t,this._textColor[2]=i,this}pushText(e,t){if(0===e.length)return this;if(this._textScale<=0)return this;const i=[0];for(let t=0;t<e.length;++t)"\n"==e[t]?i.push(0):i[i.length-1]+=1;if(0===i.length)return this;let n=0;const r=[0,0],s=.5*this._textScale;switch(this._horizontalTextAlign){case"left":r[0]=t[0];break;case"centered":r[0]=t[0]-i[n]*s+s;break;case"right":r[0]=t[0]-i[n]*this._textScale+this._textScale}switch(this._verticalTextAlign){case"top":r[1]=t[1];break;case"centered":r[1]=t[1]+i.length*s-s;break;case"bottom":r[1]=t[1]-(i.length-1)*this._textScale}for(let o=0;o<e.length;++o){const a=e[o];if("\n"==a){switch(n+=1,this._horizontalTextAlign){case"left":r[0]=t[0];break;case"centered":r[0]=t[0]-i[n]*s+s;break;case"right":r[0]=t[0]-i[n]*this._textScale+this._textScale}r[1]-=this._textScale}else this._pushLetter(a,r),r[0]+=this._textScale}return this}_pushLetter(e,t){if(this._currentSize+90>=this._buffer.length)return;const i=this._texCoordMap.get(e);if(!i)throw new Error(`fail to find a letter, letter=${e}`);for(let e=-1;e<=1;++e)for(let n=-1;n<=1;++n)this._buffer[this._currentSize++]=t[0]+2*n,this._buffer[this._currentSize++]=t[1]+2*e,this._buffer[this._currentSize++]=-.1,this._buffer[this._currentSize++]=i[0],this._buffer[this._currentSize++]=i[1],this._buffer[this._currentSize++]=0,this._buffer[this._currentSize++]=0,this._buffer[this._currentSize++]=0,this._buffer[this._currentSize++]=this._textScale;this._buffer[this._currentSize++]=t[0],this._buffer[this._currentSize++]=t[1],this._buffer[this._currentSize++]=0,this._buffer[this._currentSize++]=i[0],this._buffer[this._currentSize++]=i[1],this._buffer[this._currentSize++]=this._textColor[0],this._buffer[this._currentSize++]=this._textColor[1],this._buffer[this._currentSize++]=this._textColor[2],this._buffer[this._currentSize++]=this._textScale}flush(e){return 0===this._currentSize||(this._shader.bind((t=>{t.setMatrix4Uniform("u_composedMatrix",e),t.setTextureUniform("u_texture",this._texture,0),this._geometry.allocateBuffer(1,this._buffer,this._currentSize),this._geometry.setInstancedCount(this._currentSize/9),this._geometry.render()})),ue.unbind(),this.clear()),this}clear(){return this._currentSize=0,this}},addArrowStrokesWidgets:Me,addKeyStrokesWidgets:Pe,addKeysTouchesWidgets:Be,renderFpsMeter:ke});class Ue{constructor(e){if(this._lines=[],this._maxLines=30,this._textAreaElement=document.getElementById(e),!this._textAreaElement)throw new Error(`DOM elements not found, id=${e}`);this._textAreaElement.value=""}log(...e){if(0===e.length)return;const t=Array.prototype.slice.call(e).join(" ");console.log(t),this._pushText(t)}error(...e){if(0===e.length)return;const t=Array.prototype.slice.call(e).join(" ");console.error(t),this._pushText(`[ERR] - ${t}`)}_pushText(e){this._lines.push(e),this._lines.length>this._maxLines&&this._lines.splice(0,this._lines.length-this._maxLines),this._textAreaElement.value=`${this._lines.join("\n")}\n`,this._textAreaElement.scrollTop=this._textAreaElement.scrollHeight}peekLast(){if(this._lines.length>0)return this._lines[this._lines.length-1]}popLast(){this._lines.length>0&&this._lines.splice(this._lines.length-1,1)}}var Ne="\n#version 300 es\n\nprecision highp float;\n\nin vec2 a_vertexPosition;\nin vec3 a_plotPosition;\n\nout vec3 v_position;\n\nvoid main(void)\n{\n  gl_Position = vec4(a_vertexPosition, 1.0, 1.0);\n\n  v_position = a_plotPosition;\n}\n".trim(),Ve="\n#version 300 es\n\nprecision highp float;\n\n//\n//\n//\n\n\n// Indices of refractionFactor\nconst float Air = 1.0;\nconst float Glass = 1.51714;\n\n// Air to glass ratio of the indices of refractionFactor (Eta)\nconst float Eta = Air / Glass;\n\n// see http://en.wikipedia.org/wiki/Refractive_index Reflectivity\nconst float R0 = ((Air - Glass) * (Air - Glass)) / ((Air + Glass) * (Air + Glass));\n\n\n//\n//\n//\n\nuniform vec3        u_cameraEye;\n\n//\n\nuniform sampler2D   u_sceneTextureData;\nuniform int         u_sceneTextureSize;\n\nuniform int       u_spheresStart;\nuniform int       u_spheresStop;\n\nuniform int       u_boxesStart;\nuniform int       u_boxesStop;\n\nuniform int       u_trianglesStart;\nuniform int       u_trianglesStop;\n\n//\n\nuniform sampler2D   u_lightsTextureData;\n\nuniform int       u_sunLightsStart;\nuniform int       u_sunLightsStop;\n\nuniform int       u_spotLightsStart;\nuniform int       u_spotLightsStop;\n\n//\n//\n//\n\nin vec3  v_position;\n\nout vec4 o_color;\n\n//\n\nconst float     g_ambiantLight = 0.05;\n\nconst int       g_maxTotalReflection = 2;\nconst bool      g_shadowsEnabled = true;\n\nconst vec3      g_backgroundColor = vec3(0.1);\n\n//\n\nstruct RayValues\n{\n  vec3 origin;\n  vec3 direction;\n};\n\nstruct RayResult\n{\n  bool hasHit;\n  float distance;\n  vec3 position;\n  vec3 normal;\n  vec4 color;\n  float reflectionFactor;\n  float refractionFactor;\n  bool lightEnabled;\n};\n\n//\n//\n//\n//\n//\n\nfloat getSceneDataByIndex(int index)\n{\n  return texelFetch(u_sceneTextureData, ivec2(index, 0), 0).x;\n}\n\nvec3 getSceneVec3ByIndex(int index)\n{\n  return vec3(\n    texelFetch(u_sceneTextureData, ivec2(index + 0, 0), 0).x,\n    texelFetch(u_sceneTextureData, ivec2(index + 1, 0), 0).x,\n    texelFetch(u_sceneTextureData, ivec2(index + 2, 0), 0).x\n  );\n}\n\nfloat getLightsDataByIndex(int index)\n{\n  return texelFetch(u_lightsTextureData, ivec2(index, 0), 0).x;\n}\n\nvec3 getLightsVec3ByIndex(int index)\n{\n  return vec3(\n    texelFetch(u_lightsTextureData, ivec2(index + 0, 0), 0).x,\n    texelFetch(u_lightsTextureData, ivec2(index + 1, 0), 0).x,\n    texelFetch(u_lightsTextureData, ivec2(index + 2, 0), 0).x\n  );\n}\n\n//\n//\n//\n//\n//\n\nbool intersectSphere(RayValues ray, float radius, out float outDistance, out vec3 normal)\n{\n  float nearValue = 0.001; // TODO: hardcoded\n  float farValue = 100.0; // TODO: hardcoded\n\n  float b = dot(ray.origin, ray.direction);\n  float c = dot(ray.origin, ray.origin) - radius * radius;\n  float h = b * b - c;\n  if (h < 0.0) {\n    return false;\n  }\n\n  h = sqrt(h);\n\n  float d1 = -b - h;\n  if (d1 >= nearValue && d1 <= farValue)\n  {\n    normal = normalize(ray.origin + ray.direction * d1);\n    outDistance = d1;\n    return true;\n  }\n\n  float d2 = -b + h;\n  if (d2 >= nearValue && d2 <= farValue)\n  {\n    normal = normalize(ray.origin + ray.direction * d2);\n    outDistance = d2;\n    return true;\n  }\n\n  return false;\n}\n\nbool intersectBox(RayValues ray, vec3 boxSize, out float outDistance, out vec3 normal)\n{\n  float nearValue = 0.001; // TODO: hardcoded\n  float farValue = 100.0; // TODO: hardcoded\n\n  //\n  //\n  // sad hack: fix a shadow related bug\n\n  if (ray.direction.x == 0.0) ray.direction.x = -1e-8;\n  if (ray.direction.y == 0.0) ray.direction.y = -1e-8;\n  if (ray.direction.z == 0.0) ray.direction.z = -1e-8;\n\n  // sad hack: fix a shadow related bug\n  //\n  //\n\n  vec3 m = sign(ray.direction) / max(abs(ray.direction), 1e-8);\n  vec3 n = m * ray.origin;\n  vec3 k = abs(m) * boxSize;\n\n  vec3 t1 = -n - k;\n  vec3 t2 = -n + k;\n\n  float tN = max(max(t1.x, t1.y), t1.z);\n  float tF = min(min(t2.x, t2.y), t2.z);\n\n  if (tN > tF || tF <= 0.0) {\n    return false;\n  }\n\n  if (tN >= nearValue && tN <= farValue)\n  {\n    normal = normalize(-sign(ray.direction) * step(t1.yzx, t1.xyz) * step(t1.zxy, t1.xyz));\n    outDistance = tN;\n    return true;\n  }\n\n  if (tF >= nearValue && tF <= farValue)\n  {\n    normal = normalize(-sign(ray.direction) * step(t1.yzx, t1.xyz) * step(t1.zxy, t1.xyz));\n    outDistance = tF;\n    return true;\n  }\n\n  return false;\n}\n\nbool intersectTriangle(RayValues ray, vec3 v0, vec3 v1, vec3 v2, out float outDistance, out vec3 normal)\n{\n  float nearValue = 0.001; // TODO: hardcoded\n  float farValue = 100.0; // TODO: hardcoded\n\n  vec3 v1v0 = v1 - v0;\n  vec3 v2v0 = v2 - v0;\n  vec3 rov0 = ray.origin - v0;\n\n  vec3 n = cross(v1v0, v2v0);\n  vec3 q = cross(rov0, ray.direction);\n  float d = 1.0 / dot(ray.direction, n);\n  float u = d * dot(-q, v2v0);\n  float v = d * dot(q, v1v0);\n  float t = d * dot(-n, rov0);\n\n  if (u < 0.0 || v < 0.0 || (u + v) > 1.0 || t < nearValue || t > farValue) {\n    return false;\n  }\n\n  normal = normalize(-n);\n  outDistance = t;\n  return true;\n}\n\n// float intersectPlane(RayValues ray, vec3 normal, float offset)\n// {\n//     return -(dot(ray.origin, normal) + offset) / dot(ray.direction, normal);\n// }\n\n// float intersectPlane2(RayValues ray, vec3 normal, float offset)\n// {\n//     float nearValue = 0.001; // TODO: hardcoded\n//     float farValue = 1000.0; // TODO: hardcoded\n\n//     float a = dot(ray.direction, normal);\n//     float d = -(dot(ray.origin, normal) + offset) / a;\n\n//     if (a > 0.0 || d < nearValue || d > farValue)\n//         return -1.0;\n\n//     return d;\n// }\n\n// float diskIntersect(RayValues ray, vec3 center, vec3 normal, float radius)\n// {\n//     vec3  o = ray.origin - center;\n//     float t = -dot(normal, o) / dot(ray.direction, normal);\n//     vec3  q = o + ray.direction * t;\n//     return (dot(q, q) < radius * radius) ? t : -1.0;\n// }\n\n//\n//\n//\n//\n//\n\nbool intersectScene(RayValues ray, out RayResult outBestResult, bool shadowMode)\n{\n  float bestDistance = -1.0;\n\n  outBestResult.hasHit = false;\n  outBestResult.distance = -1.0;\n\n  if (u_sceneTextureSize <= 0) {\n    return false;\n  }\n\n  RayValues tmpRay;\n  vec3 normal;\n\n  for (int index = u_spheresStart; index < u_spheresStop; index += 12)\n  {\n    bool castShadow = (getSceneDataByIndex(index + 9) != 0.0);\n\n    if (shadowMode && !castShadow) {\n      continue;\n    }\n\n    tmpRay.origin = ray.origin;\n    tmpRay.direction = ray.direction;\n\n    vec3 center = getSceneVec3ByIndex(index + 0);\n\n    tmpRay.origin -= center;\n\n    float radius = getSceneDataByIndex(index + 3);\n\n    float currDistance = 0.0;\n    if (\n      !intersectSphere(tmpRay, radius, currDistance, normal) ||\n      (outBestResult.distance > 0.0 && currDistance > outBestResult.distance)\n    ) {\n      continue;\n    }\n\n    outBestResult.hasHit = true;\n    outBestResult.distance = currDistance;\n    outBestResult.position = ray.origin + currDistance * ray.direction;\n    outBestResult.normal = normal;\n    outBestResult.refractionFactor = 0.0;\n\n    bool chessboardMaterialEnabled = (getSceneDataByIndex(index + 11) != 0.0);\n\n    if (chessboardMaterialEnabled)\n    {\n      // vec3 txPos = (txx * vec4(outBestResult.position - center, 1.0)).xyz;\n      vec3 txPos = (vec4(outBestResult.position - center, 1.0)).xyz;\n      // chessboard color effect\n      if (fract(txPos.x * 0.2) > 0.5 == fract(txPos.z * 0.2) > 0.5 == fract(txPos.y * 0.2) > 0.5)\n      {\n        outBestResult.color = vec4(1.0);\n        outBestResult.reflectionFactor = 0.3;\n      }\n      else\n      {\n        outBestResult.color = vec4(0.0, 0.4, 0.45, 1.0);\n        outBestResult.reflectionFactor = 0.0;\n      }\n    }\n    else\n    {\n      vec3 color = getSceneVec3ByIndex(index + 4);\n\n      float reflectionFactor = getSceneDataByIndex(index + 7);\n      float refractionFactor = getSceneDataByIndex(index + 8);\n\n      outBestResult.color = vec4(color, 0.5);\n      outBestResult.reflectionFactor = reflectionFactor;\n      outBestResult.refractionFactor = refractionFactor;\n    }\n\n    bool lightEnabled = (getSceneDataByIndex(index + 10) != 0.0);\n    outBestResult.lightEnabled = lightEnabled;\n\n    // if (shadowMode)\n    //     return true;\n  }\n\n  for (int index = u_boxesStart; index < u_boxesStop; index += 26)\n  {\n    bool castShadow = (getSceneDataByIndex(index + 23) != 0.0);\n\n    if (shadowMode && !castShadow) {\n      continue;\n    }\n\n    tmpRay.origin = ray.origin;\n    tmpRay.direction = ray.direction;\n\n    mat4 normalTransformationMatrix = mat4(\n      getSceneDataByIndex(index + 0),\n      getSceneDataByIndex(index + 1),\n      getSceneDataByIndex(index + 2),\n      getSceneDataByIndex(index + 3),\n\n      getSceneDataByIndex(index + 4),\n      getSceneDataByIndex(index + 5),\n      getSceneDataByIndex(index + 6),\n      getSceneDataByIndex(index + 7),\n\n      getSceneDataByIndex(index + 8),\n      getSceneDataByIndex(index + 9),\n      getSceneDataByIndex(index + 10),\n      getSceneDataByIndex(index + 11),\n\n      getSceneDataByIndex(index + 12),\n      getSceneDataByIndex(index + 13),\n      getSceneDataByIndex(index + 14),\n      getSceneDataByIndex(index + 15)\n    );\n\n    vec3 boxSize = getSceneVec3ByIndex(index + 16);\n\n    mat4 inversedTransformationMatrix = inverse(normalTransformationMatrix);\n\n    // convert ray from world space to box space\n    tmpRay.origin = (inversedTransformationMatrix * vec4(tmpRay.origin, 1.0)).xyz;\n    tmpRay.direction = (inversedTransformationMatrix * vec4(tmpRay.direction, 0.0)).xyz;\n\n    float currDistance = 0.0;\n    if (\n      !intersectBox(tmpRay, boxSize, currDistance, normal) ||\n      (outBestResult.distance > 0.0 && currDistance > outBestResult.distance)\n    ) {\n      continue;\n    }\n\n    // convert normal from box space to world space\n    normal = (normalTransformationMatrix * vec4(normal, 0.0)).xyz;\n\n    outBestResult.hasHit = true;\n    outBestResult.distance = currDistance;\n    outBestResult.position = ray.origin + currDistance * ray.direction;\n    outBestResult.normal = normal;\n    outBestResult.refractionFactor = 0.0; // TODO\n\n    bool chessboardMaterialEnabled = (getSceneDataByIndex(index + 25) != 0.0);\n\n    if (chessboardMaterialEnabled)\n    {\n      vec3 txPos = (inversedTransformationMatrix * vec4(outBestResult.position, 1.0)).xyz;\n\n      // chessboard color effect\n      if (fract(txPos.x * 0.2) > 0.5 == fract(txPos.z * 0.2) > 0.5 == fract(txPos.y * 0.2) > 0.5)\n      {\n        outBestResult.color = vec4(1.0);\n        outBestResult.reflectionFactor = 0.3;\n      }\n      else\n      {\n        outBestResult.color = vec4(0.0, 0.4, 0.45, 1.0);\n        outBestResult.reflectionFactor = 0.0;\n      }\n    }\n    else\n    {\n      vec3 color = getSceneVec3ByIndex(index + 19);\n\n      float reflectionFactor = getSceneDataByIndex(index + 22);\n\n      outBestResult.color = vec4(color, 1.0);\n      outBestResult.reflectionFactor = reflectionFactor;\n    }\n\n    bool lightEnabled = (getSceneDataByIndex(index + 24) != 0.0);\n    outBestResult.lightEnabled = lightEnabled;\n\n    // if (shadowMode)\n    //     return true;\n  }\n\n  for (int index = u_trianglesStart; index < u_trianglesStop; index += 15)\n  {\n    bool castShadow = (getSceneDataByIndex(index + 13) != 0.0);\n\n    if (shadowMode && !castShadow) {\n      continue;\n    }\n\n    tmpRay.origin = ray.origin;\n    tmpRay.direction = ray.direction;\n\n    vec3 v0 = getSceneVec3ByIndex(index + 0);\n    vec3 v1 = getSceneVec3ByIndex(index + 3);\n    vec3 v2 = getSceneVec3ByIndex(index + 6);\n\n    float currDistance = 0.0;\n    if (\n      !intersectTriangle(tmpRay, v0, v1, v2, currDistance, normal) ||\n      (outBestResult.distance > 0.0 && currDistance > outBestResult.distance)\n    ) {\n      continue;\n    }\n\n    outBestResult.hasHit = true;\n    outBestResult.distance = currDistance;\n    outBestResult.position = ray.origin + currDistance * ray.direction;\n    outBestResult.normal = normal;\n    outBestResult.refractionFactor = 0.0; // TODO\n\n    vec3 color = getSceneVec3ByIndex(index + 9);\n\n    float reflectionFactor = getSceneDataByIndex(index + 12);\n\n    outBestResult.color = vec4(color, 1.0);\n    outBestResult.reflectionFactor = reflectionFactor;\n\n    bool lightEnabled = (getSceneDataByIndex(index + 14) != 0.0);\n    outBestResult.lightEnabled = lightEnabled;\n\n    // if (shadowMode)\n    //     return true;\n  }\n\n  { // plane test\n\n    // vec3 planeNormal = normalize(vec3(0.0, 0.0, 1.0));\n    // float val = intersectPlane(tmpRay, planeNormal, 35.0/4.0*3.0);\n\n    // vec3 planeNormal = normalize(vec3(0.0, 0.0, 1.0));\n    // float val = intersectPlane(tmpRay, planeNormal, 0.0);\n\n    // vec3 planeNormal = normalize(vec3(0.0, 0.0, 1.0));\n    // float val = intersectPlane(tmpRay, planeNormal, 10.0);\n\n    // if (val > 0.0 && (bestDistance <= 0.0 || val < bestDistance))\n    // {\n    //     outBestResult.hasHit = true;\n    //     outBestResult.distance = val;\n    //     outBestResult.position = ray.origin + val * ray.direction;\n    //     outBestResult.normal = vec3(planeNormal);\n    //     outBestResult.color = vec4(1.0, 1.0, 1.0, 1.0);\n    //     outBestResult.reflectionFactor = 0.0;\n    //     outBestResult.lightEnabled = true;\n    // }\n\n  } // plane test\n\n  return outBestResult.hasHit;\n}\n\nfloat lightAt(vec3 impactPosition, vec3 impactNormal, vec3 viewer)\n{\n  float bestIntensity = 0.0;\n\n  for (int index = u_sunLightsStart; index < u_sunLightsStop; index += 4)\n  {\n    if (!g_shadowsEnabled) {\n      continue;\n    }\n\n    vec3 lightDir = getLightsVec3ByIndex(index + 0);\n    float localIntensity = getLightsDataByIndex(index + 3);\n\n    float coef = localIntensity;\n    lightDir = normalize(lightDir);\n\n    // is the sun light blocked by an object?\n    RayResult result;\n    if (intersectScene(RayValues(impactPosition, lightDir), result, true)) {\n      // light ray is blocked, skip this light\n      continue;\n    }\n\n    //\n    //\n    //\n\n    float intensity = 0.0;\n    vec3 reflectionFactor = reflect(-lightDir, impactNormal);\n    intensity += 0.6 * pow(max(dot(reflectionFactor, viewer), 0.0), 30.0);\n    intensity += 1.0 * dot(lightDir, impactNormal);\n\n    intensity *= coef;\n\n    if (bestIntensity < intensity) {\n      bestIntensity = intensity;\n    }\n  }\n\n  for (int index = u_spotLightsStart; index < u_spotLightsStop; index += 5)\n  {\n    vec3 lightDir = vec3(1.0);\n    float coef = 1.0;\n\n    // spot light\n\n    vec3 lightPos = getLightsVec3ByIndex(index + 0);\n    float lightRadius = getLightsDataByIndex(index + 3);\n\n    vec3 lightToImpactVec3 = lightPos - impactPosition;\n\n    // is it out of the spot light effect radius?\n    float lightToImpactDistance = length(lightToImpactVec3);\n    if (lightToImpactDistance > lightRadius) {\n      // out of range, do not apply this light\n      continue;\n    }\n\n    lightDir.x = lightToImpactVec3.x / lightToImpactDistance; // normalize\n    lightDir.y = lightToImpactVec3.y / lightToImpactDistance; // normalize\n    lightDir.z = lightToImpactVec3.z / lightToImpactDistance; // normalize\n\n    float localIntensity = getLightsDataByIndex(index + 4);\n\n    coef = localIntensity * (1.0 - lightToImpactDistance / lightRadius);\n\n    if (!g_shadowsEnabled) {\n      continue;\n    }\n\n    RayResult result;\n    if (\n      // is the spot light blocked by an object?\n      intersectScene(RayValues(impactPosition, lightDir), result, true) &&\n      // is the blocking object in range of the spot light effect radius?\n      result.distance < lightToImpactDistance\n    ) {\n      // light ray is blocked, skip this light\n      continue;\n    }\n\n    //\n    //\n    //\n\n    float intensity = 0.0;\n    vec3 reflectionFactor = reflect(-lightDir, impactNormal);\n    intensity += 0.6 * pow(max(dot(reflectionFactor, viewer), 0.0), 30.0);\n    intensity += 1.0 * dot(lightDir, impactNormal);\n\n    intensity *= coef;\n\n    if (bestIntensity < intensity) {\n      bestIntensity = intensity;\n    }\n  }\n\n  return max(g_ambiantLight, bestIntensity);\n}\n\nvoid main()\n{\n  //\n  //\n  // initial ray\n\n  vec3 rayDir = normalize(v_position - u_cameraEye); // camera direction\n  vec3 finalPixelColor = g_backgroundColor;\n\n  RayValues currRay = RayValues(u_cameraEye, rayDir);\n  RayResult result;\n\n  result.position = u_cameraEye;\n  result.reflectionFactor = 1.0;\n  result.lightEnabled = true;\n\n  float lastReflectionFactor = 1.0;\n  float lastRefractionFactor = 1.0;\n\n  const int maxIteration = g_maxTotalReflection;\n  for (int iterationLeft = maxIteration; iterationLeft >= 0; --iterationLeft)\n  {\n    if (\n      result.reflectionFactor <= 0.05 &&\n      result.refractionFactor <= 0.05\n    ) {\n      break;\n    }\n\n    bool mustStop = false;\n\n    currRay = RayValues(result.position, rayDir);\n\n    result.hasHit = intersectScene(currRay, result, false);\n\n    vec3 tmpColor = g_backgroundColor;\n\n    if (result.hasHit)\n    {\n      float lightIntensity = 1.0;\n\n      if (result.lightEnabled)\n      {\n        lightIntensity = lightAt(result.position, result.normal, -currRay.direction);\n\n        if (lightIntensity <= 0.0)\n        {\n          // not lit\n          mustStop = true;\n        }\n      }\n\n      tmpColor = result.color.xyz * lightIntensity;\n    }\n\n    // vec3 incident = normalize( vec3( vertex - camera ) );\n\n    // if (result.refractionFactor > 0.05) {\n\n    //   finalPixelColor = finalPixelColor * (1.0 - lastReflectionFactor) + tmpColor * lastReflectionFactor;\n\n    //   if (mustStop || !result.hasHit)\n    //   {\n    //     break;\n    //   }\n\n    //   // lastReflectionFactor *= result.reflectionFactor;\n    //   lastRefractionFactor *= result.refractionFactor;\n\n    //   // rayDir = refract(rayDir, result.normal);\n    //   rayDir = refract(rayDir, result.normal, Eta);\n\n    //   continue;\n    // }\n\n    finalPixelColor = finalPixelColor * (1.0 - lastReflectionFactor) + tmpColor * lastReflectionFactor;\n\n    if (mustStop || !result.hasHit)\n    {\n      break;\n    }\n\n    lastReflectionFactor *= result.reflectionFactor;\n\n    rayDir = reflect(rayDir, result.normal);\n\n    // result.refractionFactor\n    // rayDir = refract(rayDir, result.normal, Eta);\n\n  }\n\n  o_color = vec4(finalPixelColor, 1.0);\n}\n".trim(),Xe="\n#version 300 es\n\nprecision highp float;\n\nin vec2 a_vertexPosition;\nin vec2 a_vertexTextureCoord;\n\nout vec2 v_textureCoord;\n\nvoid main(void)\n{\n  v_textureCoord = a_vertexTextureCoord;\n\n  gl_Position = vec4(a_vertexPosition, 1.0, 1.0);\n}\n".trim(),Oe="\n#version 300 es\n\nprecision highp float;\n\nuniform sampler2D u_texture;\nuniform vec2 u_step;\n\nin vec2 v_textureCoord;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  // gl_FragColor = texture(u_texture, v_textureCoord);\n\n  float total = 0.0;\n  vec4 accumulated = vec4(0.0);\n\n  //\n\n  if (v_textureCoord.x - u_step.x > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x - u_step.x, v_textureCoord.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.x + u_step.x > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x + u_step.x, v_textureCoord.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.y - u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x, v_textureCoord.y - u_step.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.y + u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x, v_textureCoord.y + u_step.y));\n    total += 1.0;\n  }\n\n  //\n\n  if (v_textureCoord.x - u_step.x > 0.0 && v_textureCoord.y - u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x - u_step.x, v_textureCoord.y - u_step.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.x + u_step.x > 0.0 && v_textureCoord.y - u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x + u_step.x, v_textureCoord.y - u_step.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.x - u_step.x > 0.0 && v_textureCoord.y + u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x - u_step.x, v_textureCoord.y + u_step.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.x + u_step.x > 0.0 && v_textureCoord.y + u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x + u_step.x, v_textureCoord.y + u_step.y));\n    total += 1.0;\n  }\n\n  //\n\n  if (total > 0.0)\n    o_color = accumulated / total;\n  else\n    o_color = vec4(1.0, 0.0, 0.0, 1.0); // warning\n}\n".trim();const{WebGLContext:Ge,DataTexture:Ye,Texture:He,FrameBuffer:We,ShaderProgram:$e,GeometryWrapper:je}=ge;class qe{constructor(e){this._resolutionCoef=1,this._antiAliasing=!1,this._spheres=[],this._boxes=[],this._triangles=[],this._sunLights=[],this._spotLights=[],this._cameraFovy=e.fovy,this._renderWidth=this._canvasWidth=e.canvasWidth,this._renderHeight=this._canvasHeight=e.canvasHeight,this._rayTracerShaderProgram=new $e("RayTracerRenderer-1",{vertexSrc:Ne,fragmentSrc:Ve,attributes:["a_vertexPosition","a_plotPosition"],uniforms:["u_cameraEye","u_sceneTextureData","u_sceneTextureSize","u_spheresStart","u_spheresStop","u_boxesStart","u_boxesStop","u_trianglesStart","u_trianglesStop","u_lightsTextureData","u_sunLightsStart","u_sunLightsStop","u_spotLightsStart","u_spotLightsStop"]}),this._textureShaderProgram=new $e("RayTracerRenderer-1",{vertexSrc:Xe,fragmentSrc:Oe,attributes:["a_vertexPosition","a_vertexTextureCoord"],uniforms:["u_texture","u_step"]}),this._finalTexture=new He,this._frameBuffer=new We,this._finalTexture.initialize(),this._finalTexture.preBind((e=>{e.allocate(this._renderWidth,this._renderHeight),this._frameBuffer.bind((t=>{t.attachTexture(e)}))}));const t=new je.GeometryBuilder;t.reset().setPrimitiveType("triangleStrip").addVbo().addVboAttribute("a_vertexPosition","vec2f").addVbo().setVboAsDynamic().addVboAttribute("a_plotPosition","vec3f"),this._rayTracerGeometry=new je.Geometry(this._rayTracerShaderProgram,t.getDef());const i=[];i.push(1,1),i.push(-1,1),i.push(1,-1),i.push(-1,-1),this._rayTracerGeometry.allocateBuffer(0,i,i.length),this._rayTracerGeometry.setPrimitiveStart(0),this._rayTracerGeometry.setPrimitiveCount(4),t.reset().setPrimitiveType("triangleStrip").addVbo().addVboAttribute("a_vertexPosition","vec2f").addVboAttribute("a_vertexTextureCoord","vec2f"),this._screenGeometry=new je.Geometry(this._textureShaderProgram,t.getDef());const n=[];n.push(1,1,1,1),n.push(-1,1,0,1),n.push(1,-1,1,0),n.push(-1,-1,0,0),this._screenGeometry.allocateBuffer(0,n,n.length),this._screenGeometry.setPrimitiveStart(0),this._screenGeometry.setPrimitiveCount(4),this._sceneDataTexture=new Ye,this._sceneDataTexture.initialize(2048),this._lightsDataTexture=new Ye,this._lightsDataTexture.initialize(2048),this._camera={position:z(0,0,0),target:z(1.5,1.5,1.5),up:z(0,1,0)}}pushSphere({position:e,radius:t,color:i,reflectionFactor:n,refractionFactor:r,chessboardEnabled:s,castShadowEnabled:o,receiveLightEnabled:a}){if(t<=0)throw new Error("invalid sphere radius");if(n<0||n>1)throw new Error("invalid sphere reflection");this._spheres.push({position:[e[0],e[1],e[2]],radius:t,color:[i[0],i[1],i[2]],reflectionFactor:n,refractionFactor:r,chessboardEnabled:s,castShadowEnabled:o,receiveLightEnabled:a})}pushBox({position:e,angleX:t,angleY:i,angleZ:n,boxSize:r,color:s,reflectionFactor:o,chessboardEnabled:a,castShadowEnabled:f,receiveLightEnabled:d}){if(r[0]<=0||r[1]<=0||r[2]<=0)throw new Error("invalid box size");if(o<0||o>1)throw new Error("invalid box reflection");const c=S();w(c),function(e,t,i){var n,r,s,o,a,f,d,c,h,l,u,_,g=i[0],p=i[1],m=i[2];t===e?(e[12]=t[0]*g+t[4]*p+t[8]*m+t[12],e[13]=t[1]*g+t[5]*p+t[9]*m+t[13],e[14]=t[2]*g+t[6]*p+t[10]*m+t[14],e[15]=t[3]*g+t[7]*p+t[11]*m+t[15]):(n=t[0],r=t[1],s=t[2],o=t[3],a=t[4],f=t[5],d=t[6],c=t[7],h=t[8],l=t[9],u=t[10],_=t[11],e[0]=n,e[1]=r,e[2]=s,e[3]=o,e[4]=a,e[5]=f,e[6]=d,e[7]=c,e[8]=h,e[9]=l,e[10]=u,e[11]=_,e[12]=n*g+a*p+h*m+t[12],e[13]=r*g+f*p+l*m+t[13],e[14]=s*g+d*p+u*m+t[14],e[15]=o*g+c*p+_*m+t[15])}(c,c,e),function(e,t,i){var n=Math.sin(i),r=Math.cos(i),s=t[0],o=t[1],a=t[2],f=t[3],d=t[8],c=t[9],h=t[10],l=t[11];t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=s*r-d*n,e[1]=o*r-c*n,e[2]=a*r-h*n,e[3]=f*r-l*n,e[8]=s*n+d*r,e[9]=o*n+c*r,e[10]=a*n+h*r,e[11]=f*n+l*r}(c,c,i),function(e,t,i){var n=Math.sin(i),r=Math.cos(i),s=t[0],o=t[1],a=t[2],f=t[3],d=t[4],c=t[5],h=t[6],l=t[7];t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=s*r+d*n,e[1]=o*r+c*n,e[2]=a*r+h*n,e[3]=f*r+l*n,e[4]=d*r-s*n,e[5]=c*r-o*n,e[6]=h*r-a*n,e[7]=l*r-f*n}(c,c,n),function(e,t,i){var n=Math.sin(i),r=Math.cos(i),s=t[4],o=t[5],a=t[6],f=t[7],d=t[8],c=t[9],h=t[10],l=t[11];t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=s*r+d*n,e[5]=o*r+c*n,e[6]=a*r+h*n,e[7]=f*r+l*n,e[8]=d*r-s*n,e[9]=c*r-o*n,e[10]=h*r-a*n,e[11]=l*r-f*n}(c,c,t),this._boxes.push({matrix:c,boxSize:D(r),color:D(s),reflectionFactor:o,chessboardEnabled:a,castShadowEnabled:f,receiveLightEnabled:d})}pushTriangle({v0:e,v1:t,v2:i,color:n,reflectionFactor:r,castShadowEnabled:s,receiveLightEnabled:o}){if(r<0||r>1)throw new Error("invalid triangle reflection");this._triangles.push({v0:D(e),v1:D(t),v2:D(i),color:D(n),reflectionFactor:r,castShadowEnabled:s,receiveLightEnabled:o})}pushSunLight({direction:e,intensity:t}){if(t<=0)throw new Error("intensity cannot be 0");if(0===(n=(i=e)[0],r=i[1],s=i[2],Math.hypot(n,r,s)))throw new Error("direction cannot be 0");var i,n,r,s;const o=I(D(e),e);this._sunLights.push({direction:o,intensity:t})}pushSpotLight({position:e,intensity:t,radius:i}){if(t<=0)throw new Error("intensity cannot be 0");if(i<=0)throw new Error("radius cannot be <= 0");this._spotLights.push({position:D(e),intensity:t,radius:i})}lookAt(e,t,i){L(this._camera.position,e);let n=X(A(),t,e);n=I(n,n),n=F(n,e,n),L(this._camera.target,n);const r=I(A(),i);L(this._camera.up,r)}render(){this._renderTexturePass(),this._renderRayTracingPass()}_renderTexturePass(){const e=Ge.getContext();e.viewport(0,0,this._canvasWidth,this._canvasHeight),e.clear(e.COLOR_BUFFER_BIT),this._textureShaderProgram.bind((e=>{if(e.setTextureUniform("u_texture",this._finalTexture,0),this._antiAliasing){const t=.005*(1-this._renderWidth/this._canvasWidth),i=.005*(1-this._renderHeight/this._canvasHeight);e.setFloat2Uniform("u_step",t,i)}else e.setFloat2Uniform("u_step",0,0);this._screenGeometry.render()}))}_renderRayTracingPass(){const e=Ge.getContext(),t=this._computeCameraFarCorners();this._rayTracerGeometry.allocateBuffer(1,t,t.length);const i=Math.floor(this._renderWidth),n=Math.floor(this._renderHeight);this._frameBuffer.bind((()=>{e.viewport(0,0,i,n),e.clear(e.COLOR_BUFFER_BIT),this._rayTracerShaderProgram.bind((t=>{t.setFloat3Uniform("u_cameraEye",this._camera.position[0],this._camera.position[1],this._camera.position[2]);{const i=[];t.setInteger1Uniform("u_spheresStart",0);for(const e of this._spheres)i.push(e.position[0],e.position[1],e.position[2]),i.push(e.radius),i.push(e.color[0],e.color[1],e.color[2]),i.push(e.reflectionFactor),i.push(e.refractionFactor),i.push(e.castShadowEnabled?1:0),i.push(e.receiveLightEnabled?1:0),i.push(e.chessboardEnabled?1:0);t.setInteger1Uniform("u_spheresStop",i.length),t.setInteger1Uniform("u_boxesStart",i.length);for(const e of this._boxes){for(let t=0;t<16;++t)i.push(e.matrix[t]);i.push(e.boxSize[0],e.boxSize[1],e.boxSize[2]),i.push(e.color[0],e.color[1],e.color[2]),i.push(e.reflectionFactor),i.push(e.castShadowEnabled?1:0),i.push(e.receiveLightEnabled?1:0),i.push(e.chessboardEnabled?1:0)}t.setInteger1Uniform("u_boxesStop",i.length),t.setInteger1Uniform("u_trianglesStart",i.length);for(const e of this._triangles)i.push(e.v0[0],e.v0[1],e.v0[2]),i.push(e.v1[0],e.v1[1],e.v1[2]),i.push(e.v2[0],e.v2[1],e.v2[2]),i.push(e.color[0],e.color[1],e.color[2]),i.push(e.reflectionFactor),i.push(e.castShadowEnabled?1:0),i.push(e.receiveLightEnabled?1:0);t.setInteger1Uniform("u_trianglesStop",i.length),e.activeTexture(e.TEXTURE0+0),this._sceneDataTexture.preBind((e=>{e.update(0,i)})),t.setInteger1Uniform("u_sceneTextureData",0),t.setInteger1Uniform("u_sceneTextureSize",i.length)}{const i=[];t.setInteger1Uniform("u_sunLightsStart",0);for(const e of this._sunLights)i.push(e.direction[0],e.direction[1],e.direction[2]),i.push(e.intensity);t.setInteger1Uniform("u_sunLightsStop",i.length),t.setInteger1Uniform("u_spotLightsStart",i.length);for(const e of this._spotLights)i.push(e.position[0],e.position[1],e.position[2]),i.push(e.radius),i.push(e.intensity);t.setInteger1Uniform("u_spotLightsStop",i.length),e.activeTexture(e.TEXTURE0+1),this._lightsDataTexture.preBind((e=>{e.update(0,i)})),t.setInteger1Uniform("u_lightsTextureData",1)}this._rayTracerGeometry.render()}))}))}reset(){this._sunLights.length=0,this._spotLights.length=0,this._spheres.length=0,this._boxes.length=0,this._triangles.length=0}setResolutionCoef(e){e===this._resolutionCoef||e<=0||e>1||(this._resolutionCoef=e,this._renderWidth=Math.floor(this._canvasWidth*this._resolutionCoef),this._renderHeight=Math.floor(this._canvasHeight*this._resolutionCoef),this._finalTexture.preBind((e=>{e.resize(this._renderWidth,this._renderHeight)})))}getResolutionCoef(){return this._resolutionCoef}setAntiAliasing(e){this._antiAliasing=e}getAntiAliasing(){return this._antiAliasing}getCurrentSize(){return[this._renderWidth,this._renderHeight]}_computeCameraFarCorners(){const e=X(A(),this._camera.target,this._camera.position),t=U(A(),e,this._camera.up),i=U(A(),t,e),n=.5*this._cameraFovy*Math.PI/180,r=1*Math.cos(n)/Math.sin(n),s=M(A(),e,z(r,r,r)),o=F(A(),this._camera.position,s),a=this._canvasWidth/this._canvasHeight,f=M(A(),t,z(a,a,a)),d=F(A(),o,i),c=P(A(),o,i),h=P(A(),d,f),l=P(A(),c,f),u=F(A(),d,f),_=F(A(),c,f);return[u[0],u[1],u[2],h[0],h[1],h[2],_[0],_[1],_[2],l[0],l[1],l[2]]}get canvasWidth(){return this._canvasWidth}get canvasHeight(){return this._canvasHeight}get renderWidth(){return this._renderWidth}get renderHeight(){return this._renderHeight}get camera(){return this._camera}get spheres(){return this._spheres}get boxes(){return this._boxes}get triangles(){return this._triangles}get sunLights(){return this._sunLights}get spotLights(){return this._spotLights}}const{WebGLContext:Ze}=ge,{Camera:Ke}=q,{TextRenderer:Qe,StackRenderers:Je}=Ie;class et{constructor(e){this._debugSceneCamera=new Ke,this._mainHudCamera=new Ke,this._def=e,this.resize(this._def.canvasDomElement.width,this._def.canvasDomElement.height),Ze.initialize(this._def.canvasDomElement),this._rayTracerRenderer=new qe({canvasWidth:this._def.canvasDomElement.width,canvasHeight:this._def.canvasDomElement.height,fovy:70}),this._textRenderer=new Qe,this._stackRenderers=new Je}initialize(){const e=Ze.getContext();e.pixelStorei(e.UNPACK_ALIGNMENT,1),e.disable(e.DEPTH_TEST),e.disable(e.BLEND),e.disable(e.CULL_FACE),e.depthFunc(e.NEVER),e.clearColor(0,0,0,1),e.clearDepth(1)}resize(e,t){this._debugSceneCamera.setViewportSize(e,t),this._debugSceneCamera.setAsPerspective({fovy:70,near:1,far:500}),this._mainHudCamera.setViewportSize(e,t);const i=.5*e,n=.5*t;this._mainHudCamera.setAsOrthogonal({left:-i,right:+i,top:-n,bottom:+n,near:-200,far:200}),this._mainHudCamera.setEye([i,n,1]),this._mainHudCamera.setTarget([i,n,0]),this._mainHudCamera.setUpAxis([0,1,0]),this._mainHudCamera.computeMatrices()}_pushWireFrameSphere(e){const t=.5257311121191336*e.radius,i=.8506508083520399*e.radius,n=[[-t,0,i],[t,0,i],[-t,0,-i],[t,0,-i],[0,i,t],[0,i,-t],[0,-i,t],[0,-i,-t],[i,t,0],[-i,t,0],[i,-t,0],[-i,-t,0]];for(let t=0;t<n.length;++t)n[t][0]+=e.position[0],n[t][1]+=e.position[1],n[t][2]+=e.position[2];const r=[[0,4,1],[0,9,4],[9,5,4],[4,5,8],[4,8,1],[8,10,1],[8,3,10],[5,3,8],[5,2,3],[2,7,3],[7,10,3],[7,6,10],[7,11,6],[11,0,6],[0,1,6],[6,1,10],[9,0,11],[9,11,2],[9,2,5],[7,2,11]];for(const t of r){const i=n[t[0]],r=n[t[1]],s=n[t[2]];this._stackRenderers.pushLine(i,r,e.color),this._stackRenderers.pushLine(r,s,e.color),this._stackRenderers.pushLine(s,i,e.color)}}_pushWireFrameBox(e){const t=[z(-e.boxSize[0],-e.boxSize[1],-e.boxSize[2]),z(+e.boxSize[0],-e.boxSize[1],-e.boxSize[2]),z(-e.boxSize[0],+e.boxSize[1],-e.boxSize[2]),z(+e.boxSize[0],+e.boxSize[1],-e.boxSize[2]),z(-e.boxSize[0],-e.boxSize[1],+e.boxSize[2]),z(+e.boxSize[0],-e.boxSize[1],+e.boxSize[2]),z(-e.boxSize[0],+e.boxSize[1],+e.boxSize[2]),z(+e.boxSize[0],+e.boxSize[1],+e.boxSize[2])],i=[];t.forEach((t=>{const n=z(0,0,0);!function(e,t,i){var n=t[0],r=t[1],s=t[2],o=i[3]*n+i[7]*r+i[11]*s+i[15];o=o||1,e[0]=(i[0]*n+i[4]*r+i[8]*s+i[12])/o,e[1]=(i[1]*n+i[5]*r+i[9]*s+i[13])/o,e[2]=(i[2]*n+i[6]*r+i[10]*s+i[14])/o}(n,t,e.matrix),i.push(n)})),[[0,1],[1,3],[3,2],[2,0],[4,5],[5,7],[7,6],[6,4],[0,4],[1,5],[3,7],[2,6]].forEach((t=>{this._stackRenderers.pushLine(i[t[0]],i[t[1]],e.color)}))}_pushWireFrameTriangle(e){this._stackRenderers.pushLine(e.v0,e.v1,e.color),this._stackRenderers.pushLine(e.v1,e.v2,e.color),this._stackRenderers.pushLine(e.v2,e.v0,e.color)}safeSceneWireFrame(e){this._debugSceneCamera.setEye(this._rayTracerRenderer.camera.position),this._debugSceneCamera.setTarget(this._rayTracerRenderer.camera.target),this._debugSceneCamera.setUpAxis(this._rayTracerRenderer.camera.up),this._debugSceneCamera.computeMatrices(),this._stackRenderers.safeRender(this._debugSceneCamera.getComposedMatrix(),e)}flushHudWireFrame(){this._stackRenderers.flush(this._mainHudCamera.getComposedMatrix())}flushHudText(){this._textRenderer.flush(this._mainHudCamera.getComposedMatrix())}setupDebugRenderer(){this._rayTracerRenderer.spheres.forEach((e=>this._pushWireFrameSphere(e))),this._rayTracerRenderer.boxes.forEach((e=>this._pushWireFrameBox(e))),this._rayTracerRenderer.triangles.forEach((e=>this._pushWireFrameTriangle(e)))}get rayTracerRenderer(){return this._rayTracerRenderer}get stackRenderers(){return this._stackRenderers}get textRenderer(){return this._textRenderer}}const tt=[];let it=0;const nt=[];let rt=0,st=0;class ot{reset(){tt.length=0,it=0,nt.length=0,rt=0,st=0}run(e,t){st+=t;{e.rayTracerRenderer.pushBox({position:[0,-4.5,0],angleX:0,angleY:0,angleZ:0,boxSize:[30,1,30],color:[.5,1,.5],reflectionFactor:.2,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0}),e.rayTracerRenderer.pushTriangle({v0:[5,5,1],v1:[10,10,1],v2:[10,5,1],color:[1,1,1],reflectionFactor:.1,castShadowEnabled:!0,receiveLightEnabled:!0}),e.rayTracerRenderer.pushBox({position:[-10,0,-10],angleX:0,angleY:0,angleZ:0,boxSize:[1,5,1],color:[1,1,1],reflectionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0}),e.rayTracerRenderer.pushBox({position:[10,0,-10],angleX:0,angleY:0,angleZ:0,boxSize:[1,5,1],color:[1,1,1],reflectionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0}),e.rayTracerRenderer.pushBox({position:[-10,0,10],angleX:0,angleY:0,angleZ:0,boxSize:[1,5,1],color:[1,1,1],reflectionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0}),e.rayTracerRenderer.pushBox({position:[10,0,10],angleX:0,angleY:0,angleZ:0,boxSize:[1,5,1],color:[1,1,1],reflectionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0}),e.rayTracerRenderer.pushBox({position:[5,0,10],angleX:0,angleY:0,angleZ:0,boxSize:[2,.5,1],color:[1,0,0],reflectionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0}),e.rayTracerRenderer.pushBox({position:[6,.5,10],angleX:0,angleY:0,angleZ:0,boxSize:[.75,.25,.5],color:[.5,.5,.5],reflectionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0}),e.rayTracerRenderer.pushBox({position:[4,-.25,11.5],angleX:0,angleY:0,angleZ:0,boxSize:[1,.25,.5],color:[1,1,0],reflectionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0}),e.rayTracerRenderer.pushBox({position:[4,-.25,8.5],angleX:0,angleY:0,angleZ:0,boxSize:[1,.25,.5],color:[1,1,0],reflectionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0}),e.rayTracerRenderer.pushBox({position:[4,1,10],angleX:0,angleY:0,angleZ:0,boxSize:[1,.5,.25],color:[1,1,0],reflectionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0}),e.rayTracerRenderer.pushSphere({position:[15,0,15],radius:1,color:[1,1,1],reflectionFactor:.5,refractionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0}),e.rayTracerRenderer.pushSphere({position:[5,0,5],radius:1,color:[1,1,1],reflectionFactor:.5,refractionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0});const i=0,n=0,r=0;e.rayTracerRenderer.pushBox({position:[0,0,0],angleX:i,angleY:n,angleZ:r,boxSize:[2,1,.5],color:[1,.5,.5],reflectionFactor:.8,chessboardEnabled:!0,receiveLightEnabled:!0,castShadowEnabled:!0}),e.rayTracerRenderer.pushBox({position:[0,2.5,0],angleX:i,angleY:n,angleZ:r,boxSize:[2,1,.5],color:[1,.5,.5],reflectionFactor:.8,chessboardEnabled:!0,receiveLightEnabled:!0,castShadowEnabled:!0});for(let t=0;t<8;++t){const i=t/8;e.rayTracerRenderer.pushSphere({position:[8*Math.sin(.5*st+2*Math.PI*i),1*Math.sin(.5*st+2*Math.PI*i)+1,8*Math.cos(.5*st+2*Math.PI*i)],radius:.5,color:[i,1-i,0],reflectionFactor:0,refractionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0})}e.rayTracerRenderer.pushSunLight({direction:[1,1,1],intensity:1});{const t=-.5*st,i=[7*Math.sin(t),4,7*Math.cos(t)],n=[7*Math.sin(t+.5*Math.PI),4,7*Math.cos(t+.5*Math.PI)];e.rayTracerRenderer.pushSphere({position:i,radius:.5,color:[1,1,1],reflectionFactor:0,refractionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!1,castShadowEnabled:!1}),e.rayTracerRenderer.pushSphere({position:n,radius:.5,color:[1,1,1],reflectionFactor:0,refractionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!1,castShadowEnabled:!1}),e.rayTracerRenderer.pushSpotLight({position:i,intensity:5,radius:10}),e.rayTracerRenderer.pushSpotLight({position:n,intensity:5,radius:10})}if(it>0&&(it-=t),it<=0)it=3,tt.push({pos:[-8,0,-5],vel:[0,0,0],life:.35,maxLife:.35}),rt=0;else if(it>1&&it<3&&(rt>0&&(rt-=t),rt<=0)){rt=1/16;const e=(e,t)=>Math.random()*(t-e)+e,t=it>2&&it<3?5:1;for(let i=0;i<t;++i){const t=[2*e(-1,1),4+2*e(-1,1),2*e(-1,1)];nt.push({pos:[-8,1,-5],vel:t,life:1,maxLife:1})}}for(let i=0;i<tt.length;){if(tt[i].life-=t,tt[i].life<=0){tt.splice(i,1);continue}const n=tt[i].life/tt[i].maxLife,r=Math.sin(n*Math.PI),s=2*r;if(s>0){const t=2*r,n=2*r;e.rayTracerRenderer.pushSphere({position:tt[i].pos,radius:s,color:[1,1,1],reflectionFactor:0,refractionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!1,castShadowEnabled:!1}),e.rayTracerRenderer.pushSpotLight({position:tt[i].pos,intensity:5*t,radius:5*n})}++i}{const i=z(1,.5,0),n=z(.2,.2,.2);let r=z(0,0,0);for(let s=0;s<nt.length;){if(nt[s].life-=t,nt[s].life<=0){nt.splice(s,1);continue}const{pos:o,vel:a}=nt[s];k(o,o,a,t);const f=nt[s].life/nt[s].maxLife,d=Math.sin(f*Math.PI);d>0&&(r=N(r,n,i,f),e.rayTracerRenderer.pushSphere({position:nt[s].pos,radius:d,color:r,reflectionFactor:0,refractionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0})),++s}}}}}const{GlobalMouseManager:at,GlobalKeyboardManager:ft,GlobalTouchManager:dt,GlobalVisibilityManager:ct,GlobalPointerLockManager:ht}=v,{WebGLContext:lt}=ge,{FreeFlyController:ut}=j;class _t{constructor(e){this._animationFrameHandle=0,this._currFrameMsecTime=Date.now(),this._frameProfiler=new E,this._continuousSecTime=0,this._perfAutoScalingEnabled=!0,this._framesUntilNextCheck=60,this._scene=new ot,this._canvasElement=e.canvasElement,this._def=e,this._freeFlyController=new ut({coordinates:["Z","X","Y"],position:[-10,13,15],theta:.85*Math.PI,phi:.15*-Math.PI,mouseSensibility:6,keyboardSensibility:.55*Math.PI,touchSensibility:4,movingSpeed:16}),ft.activate(),dt.activate(this._canvasElement),ct.activate(),ct.addVisibilityChange((e=>{!1===e?(this._def.logger.log("document visibility changed: hidden"),this.stop()):(this._def.logger.log("document visibility changed: visible"),this.start())})),ht.allowPointerLockedOnClickEvent(this._canvasElement),ht.addOnLockChange((()=>{ht.isPointerLocked(this._canvasElement)?(this._def.logger.log("The pointer lock status is now locked"),at.activate()):(this._def.logger.log("The pointer lock status is now unlocked"),at.deactivate(),ht.allowPointerLockedOnClickEvent(this._canvasElement))})),ht.addOnLockError((e=>{this._def.logger.log(`The pointer lock sent an error, event: "${JSON.stringify(e)}"`)})),this._renderer=new et({canvasDomElement:this._canvasElement}),this._renderer.initialize(),this._running=!1,this._errorGraphicContext=!1,this._def.resolution.addEventListener("input",(e=>{const t=this._def.resolution.value;this._setResolution(t),this._logResolution()})),this._def.anti_aliasing_enabled.addEventListener("click",(()=>{const e=!0===this._def.anti_aliasing_enabled.checked;this._renderer.rayTracerRenderer.setAntiAliasing(e),this._def.logger.log("Anti aliasing change: "+(!0===e?"enabled":"disabled"))})),this._setResolution(this._def.resolution.value),this._def.perfAutoScaling.addEventListener("input",(()=>{this._framesUntilNextCheck=60,this._perfAutoScalingEnabled=!0===this._def.perfAutoScaling.checked,this._def.logger.log("Performance auto scaler change: "+(!0===this._perfAutoScalingEnabled?"enabled":"disabled"))}))}init(){return e(this,void 0,void 0,(function*(){yield this._renderer.initialize()}))}resize(e,t,i){let n=e,r=t;i?(this._canvasElement.style.position="absolute",n=window.innerWidth,r=window.innerHeight):this._canvasElement.style.position="relative",this._canvasElement.style.left="0px",this._canvasElement.style.top="0px",this._canvasElement.style.width=`${n}px`,this._canvasElement.style.height=`${r}px`,this._canvasElement.width=n,this._canvasElement.height=r,this._renderer.resize(n,r)}start(){this.isRunning()||(this._running=!0,this._tick())}stop(){this.isRunning()&&(this._running=!1,window.clearTimeout(this._animationFrameHandle))}isRunning(){return this._running&&!this._errorGraphicContext}_tick(){const e=()=>{this._running&&!this._errorGraphicContext&&(this._animationFrameHandle=window.setTimeout(e,1e3/60),this._mainLoop())};e()}_mainLoop(){const e=Date.now(),t=e-this._currFrameMsecTime;this._currFrameMsecTime=e,this._frameProfiler.pushDelta(t),this._handlePerformanceAutoScaling(t);const i=t/1e3;this._continuousSecTime+=i,this._freeFlyController.update(i),at.resetDeltas(),this._continuousSecTime+=i,this._scene.run(this._renderer,i),this._renderScene(),this._renderHud()}_renderHud(){const e=lt.getContext();e.viewport(0,0,this._canvasElement.width,this._canvasElement.height),e.clear(e.DEPTH_BUFFER_BIT),e.enable(e.DEPTH_TEST),e.depthFunc(e.LESS);{const e=[27,260],t=[7,35];Pe([27,165],this._renderer.stackRenderers,this._renderer.textRenderer),Me(e,this._renderer.stackRenderers,this._renderer.textRenderer),Be(this._canvasElement,t,this._renderer.stackRenderers,this._renderer.textRenderer)}ke([10,this._canvasElement.height-60,0],[100,50],this._frameProfiler,this._renderer.stackRenderers,this._renderer.textRenderer,!0),this._renderer.flushHudWireFrame(),this._renderer.flushHudText(),this._renderer.rayTracerRenderer.reset()}_renderScene(){{const e=lt.getContext();e.disable(e.DEPTH_TEST)}this._renderer.rayTracerRenderer.lookAt(this._freeFlyController.getPosition(),this._freeFlyController.getTarget(),this._freeFlyController.getUpAxis()),this._renderer.rayTracerRenderer.render(),!0===this._def.debug_mode_enabled.checked&&this._renderer.safeSceneWireFrame((()=>{this._renderer.setupDebugRenderer();const e=[0,0,0];this._renderer.stackRenderers.pushLine(e,[100,0,0],[1,0,0]),this._renderer.stackRenderers.pushLine(e,[0,100,0],[0,1,0]),this._renderer.stackRenderers.pushLine(e,[0,0,100],[0,0,1])}))}_setResolution(e){const t=((e,t,i)=>Math.min(Math.max(e,0),9))(e),i=1/(10-t);this._renderer.rayTracerRenderer.setResolutionCoef(i)}_logResolution(){const e=this._renderer.rayTracerRenderer,t=e.getResolutionCoef(),i=e.getCurrentSize(),n=i[0]*i[1];this._def.logger.log(`resolution changed (1/${Math.ceil(1/t)}) => ${i[0]}x${i[1]} (${n}px)`)}_handlePerformanceAutoScaling(e){if(!0!==this._perfAutoScalingEnabled)return;if(e<=20)return void(this._framesUntilNextCheck=60);if(--this._framesUntilNextCheck,this._framesUntilNextCheck>0)return;this._def.logger.log("performance auto scaling: slow framerate, scaling down resolution");const t=this._def.resolution.value-1;t>=0&&t<=9&&(this._setResolution(t),this._logResolution(),this._def.resolution.value=t),this._framesUntilNextCheck=60}}let gt=null,pt=null;const mt=e=>{const t=document.querySelector(e);if(!t)throw new Error(`html element "${e}" not found`);return t};window.addEventListener("load",(()=>e(void 0,void 0,void 0,(function*(){gt=new Ue("loggerOutput"),gt.log("[SETUP] page loaded");const e=mt("#rendering-canvas"),t=mt("#auto-scaling-enabled"),i=mt("#resolution"),r=mt("#anti-aliasing-enabled"),s=mt("#debug-mode-enabled"),o=mt("#error-text");if(window.addEventListener("error",(f=>{if(pt){console.log("onPageError",f);try{pt.stop()}catch(f){}pt=null,a.deactivate(),d.deactivate(),m.deactivate(e),n.removeAllCallbacks(),g.removeAllCallbacks(),x.removeAllCallbacks(),x.deactivate(),o.style.width="800px",o.style.height="600px",o.innerHTML=f.message,e.style.display="none",o.style.display="block",t.disabled=!0,i.min=i.max=i.value=0,r.disabled=!0,s.disabled=!0,document.title+=" (ERR)"}})),!b())throw new Error("missing WebGL2 feature (unsupported)");pt=new _t({canvasElement:e,logger:gt,perfAutoScaling:t,resolution:i,anti_aliasing_enabled:r,debug_mode_enabled:s}),gt.log("[SETUP] Demo: initializing"),yield pt.init(),gt.log("[SETUP] Demo: initialized"),pt.start(),gt.log("[SETUP] Demo: running"),((e,t)=>{if(!x.isSupported())return;let i=-1;x.addVisibilityChange((e=>{e?i>=0&&(clearTimeout(i),i=-1):i=window.setTimeout(t,6e4)})),x.activate()})(0,(()=>{throw new Error("<br/><br/><br/>The page was inactive for too long<br/><br/>please reload")}))}))),!1);
