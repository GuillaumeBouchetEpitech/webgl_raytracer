"use strict";function e(e,t,i,r){return new(i||(i=Promise))((function(n,s){function a(e){try{c(r.next(e))}catch(e){s(e)}}function o(e){try{c(r.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,o)}c((r=r.apply(e,t||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const t=["requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen"],i=["fullscreenchange","webkitfullscreenchange","mozfullscreenchange","msfullscreenchange"],r=new class{constructor(){this._onFullScreenChangeCallbacks=[],this._isInitialized=!1}_initialize(){if(this._isInitialized)return;this._isInitialized=!0;const e=()=>{this._onFullScreenChangeCallbacks.forEach((e=>e()))};for(const t of i)document.addEventListener(t,e,!1)}isCompatible(e){for(const i of t)if(i in e)return!0;return!1}isFullScreen(e){return document.fullscreenElement===e}requestFullScreen(i){return e(this,void 0,void 0,(function*(){if(this.isFullScreen(i))return{success:!1,message:"element already in full screen"};this._initialize();for(const e of t)if(e in i)return i[e](),{success:!0,message:"request for full screen done"};return{success:!1,message:"unsupported request for full screen"}}))}addOnFullScreenChange(e){this._onFullScreenChangeCallbacks.push(e)}removeOnFullScreenChange(e){const t=this._onFullScreenChangeCallbacks.indexOf(e);t<0||this._onFullScreenChangeCallbacks.splice(t,1)}removeAllCallbacks(){this._onFullScreenChangeCallbacks.length=0}},n={Num0:48,Num1:49,Num2:50,Num3:51,Num4:52,Num5:53,Num6:54,Num7:55,Num8:56,Num9:57,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,Semicolon:186,Equal:187,Comma:188,Minus:189,Period:190,BackQuote:192,BracketLeft:219,Backslash:220,BracketRight:221,Quote:222,Shift:16,Ctrl:17,Alt:18,CapsLock:20,Tab:9,Enter:13,Pause:19,Escape:27,Space:32,PageUp:33,PageDown:34,End:35,Home:36,ArrowLeft:37,ArrowUp:38,ArrowRight:39,ArrowDown:40,PrintScreen:44,Insert:45,Delete:46,ContextMenu:93,ScrollLock:145,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,F13:124,F14:125,F15:126,F16:127,F17:128,F18:129,F19:130,F20:131,F21:132,F22:133,F23:134,F24:135,NumPad0:96,NumPad1:97,NumPad2:98,NumPad3:99,NumPad4:100,NumPad5:101,NumPad6:102,NumPad7:103,NumPad8:104,NumPad9:105,NumPadMultiply:106,NumPadAdd:107,NumPadSubtract:109,NumPadDecimal:110,NumPadDivide:111,NumLock:144,NumPadComma:194,NumPadEqual:12},s=e=>e>=n.A&&e<=n.Z,a=e=>e>=n.Num0&&e<=n.Num9||e>=n.NumPad0&&e<=n.NumPad9,o=new class{constructor(){this._pressedKeysSet=new Set,this._preventDefaultKeysSet=new Set,this._activated=!1,this._activated=!1,this._handleKeyDown=(e=>{const{keyCode:t}=e;this._onEvent&&this._onEvent(),this._preventDefaultKeysSet.has(t)&&e.preventDefault(),this._pressedKeysSet.add(t)}).bind(this),this._handleKeyUp=(e=>{const{keyCode:t}=e;this._onEvent&&this._onEvent(),this._preventDefaultKeysSet.has(t)&&e.preventDefault(),this._pressedKeysSet.delete(t)}).bind(this)}isPressed(...e){for(const t of e)if(this._pressedKeysSet.has(n[t]))return!0;return!1}preventDefault(e){this._preventDefaultKeysSet.add(n[e])}enableDefault(e){this._preventDefaultKeysSet.delete(n[e])}activate(){this._activated||(this._pressedKeysSet.clear(),document.addEventListener("keydown",this._handleKeyDown),document.addEventListener("keyup",this._handleKeyUp),this._activated=!0)}deactivate(){this._activated&&(this._pressedKeysSet.clear(),document.removeEventListener("keydown",this._handleKeyDown),document.removeEventListener("keyup",this._handleKeyUp),this._activated=!1)}onEvent(e){this._onEvent=e}},c={Left:0,Middle:1,Right:2},d=new class{constructor(){this._pressedButtonsSet=new Set,this._activated=!1,this._positionX=0,this._positionY=0,this._deltaX=0,this._deltaY=0,this._wheelDeltaY=0,this._activated=!1,this._handleMouseDown=(e=>{this._onEvent&&this._onEvent(),this._positionX=e.pageX,this._positionY=e.pageY,this._pressedButtonsSet.add(e.button)}).bind(this),this._handleMouseUp=(e=>{this._onEvent&&this._onEvent(),this._positionX=e.pageX,this._positionY=e.pageY,this._pressedButtonsSet.delete(e.button)}).bind(this),this._handleMouseMove=(e=>{this._onEvent&&this._onEvent(),this._positionX=e.pageX,this._positionY=e.pageY,this._deltaX+=e.movementX||e.mozMovementX||e.webkitMovementX||0,this._deltaY+=e.movementY||e.mozMovementY||e.webkitMovementY||0}).bind(this),this._handleMouseWheel=(e=>{this._onEvent&&this._onEvent(),this._wheelDeltaY+=e.deltaY||0}).bind(this)}activate(e){this._activated||(this._pressedButtonsSet.clear(),e.addEventListener("mousedown",this._handleMouseDown),e.addEventListener("mouseup",this._handleMouseUp),e.addEventListener("mousemove",this._handleMouseMove),e.addEventListener("wheel",this._handleMouseWheel),this._activated=!0)}deactivate(e){this._activated&&(this._pressedButtonsSet.clear(),e.removeEventListener("mousedown",this._handleMouseDown),e.removeEventListener("mouseup",this._handleMouseUp),e.removeEventListener("mousemove",this._handleMouseMove),e.removeEventListener("wheel",this._handleMouseWheel),this._activated=!1)}isButtonPressed(e){return this._pressedButtonsSet.has(c[e])}get positionX(){return this._positionX}get positionY(){return this._positionY}deltaX(){return this._deltaX}deltaY(){return this._deltaY}wheelDeltaY(){return this._wheelDeltaY}resetDeltas(){this._deltaX=0,this._deltaY=0,this._wheelDeltaY=0}onEvent(e){this._onEvent=e}},h=["requestPointerLock","mozRequestPointerLock","webkitRequestPointerLock"],f=["exitPointerLock","mozExitPointerLock","webkitExitPointerLock"],l=["pointerLockElement","mozPointerLockElement","webkitPointerLockElement"],u=[{methodName:"onpointerlockchange",propertyName:"pointerlockchange"},{methodName:"onmozpointerlockchange",propertyName:"mozpointerlockchange"},{methodName:"onwebkitpointerlockchange",propertyName:"webkitpointerlockchange"}],_=[{methodName:"onpointerlockerror",propertyName:"pointerlockerror"},{methodName:"onmozpointerlockerror",propertyName:"mozpointerlockerror"},{methodName:"onwebkitpointerlockerror",propertyName:"webkitpointerlockerror"}],m=new class{constructor(){this._onLockChangeCallbacks=[],this._onLockErrorCallbacks=[],this._timeSinceLastLockChange=0,this._isInitialized=!1}_initialize(){if(this._isInitialized)return;this._isInitialized=!0;const e=()=>{this._timeSinceLastLockChange=Date.now(),this._onLockChangeCallbacks.forEach((e=>e()))},t=e=>{this._timeSinceLastLockChange=Date.now(),this._onLockErrorCallbacks.forEach((t=>t(e)))};for(const t of u)if(t.methodName in document){document.addEventListener(t.propertyName,e,!1);break}for(const e of _)if(e.methodName in document){document.addEventListener(e.propertyName,t,!1);break}}canBePointerLocked(e){for(const t of h)if(t in e)return!0;return!1}isPointerLocked(e){for(const t of l)if(t in document)return document[t]===e;return!1}requestPointerLock(t){return e(this,void 0,void 0,(function*(){if(this.isPointerLocked(t))return{success:!1,message:"element already locked"};if(this._initialize(),this._timeSinceLastLockChange>0){const e=(Date.now()-this._timeSinceLastLockChange)/1e3;if(e<1.1)return{success:!1,message:`request for lock was too early, time to wait: ${e.toFixed(2)}sec`}}this._timeSinceLastLockChange=Date.now();for(const e of h)if(e in t){const i={unadjustedMovement:!1};try{yield t[e](i)}catch(e){return{success:!1,message:`request for lock was too early, time to wait: ${((Date.now()-this._timeSinceLastLockChange)/1e3).toFixed(2)}sec`}}return this._timeSinceLastLockChange=Date.now(),{success:!0,message:"request for lock done"}}return{success:!1,message:"unsupported request for lock"}}))}allowPointerLockedOnClickEvent(t){if(t===this._latestRequestHtmlElement)return;this._latestRequestHtmlElement=t;const i=()=>e(this,void 0,void 0,(function*(){t.removeEventListener("click",i);const e=yield this.requestPointerLock(t);this._latestRequestHtmlElement=void 0,e.success||this.allowPointerLockedOnClickEvent(t)}));t.addEventListener("click",i)}exitPointerLock(){for(const e of f)if(e in document){document[e]();break}}addOnLockChange(e){this._onLockChangeCallbacks.push(e)}removeOnLockChange(e){const t=this._onLockChangeCallbacks.indexOf(e);t<0||this._onLockChangeCallbacks.splice(t,1)}addOnLockError(e){this._onLockErrorCallbacks.push(e)}removeOnLockError(e){const t=this._onLockErrorCallbacks.indexOf(e);t<0||this._onLockErrorCallbacks.splice(t,1)}removeAllCallbacks(){this._onLockChangeCallbacks.length=0,this._onLockErrorCallbacks.length=0}};class p{constructor(e,t,i){this.createdAt=Date.now(),this.deltaX=0,this.deltaY=0,this.id=e,this.positionX=t,this.positionY=i}resetDelta(){this.deltaX=0,this.deltaY=0}}const g=new class{constructor(){this._activated=!1,this._allTouchDataMap=new Map,this._allCachedTouchDataArray=[],this._activated=!1,this._handleTouchStart=(e=>{e.preventDefault(),this._onEvent&&this._onEvent();for(let t=0;t<e.changedTouches.length;++t){const{identifier:i,pageX:r,pageY:n}=e.changedTouches[t],s=new p(i,r,n);this._allTouchDataMap.set(`${i}`,s),this._allCachedTouchDataArray.length=0}}).bind(this),this._handleTouchEnd=(e=>{e.preventDefault(),this._onEvent&&this._onEvent();for(let t=0;t<e.changedTouches.length;++t){const{identifier:i}=e.changedTouches[t];this._allTouchDataMap.delete(`${i}`),this._allCachedTouchDataArray.length=0}}).bind(this),this._handleTouchMove=(e=>{e.preventDefault(),this._onEvent&&this._onEvent();for(let t=0;t<e.changedTouches.length;++t){const{identifier:i,pageX:r,pageY:n}=e.changedTouches[t],s=this._allTouchDataMap.get(`${i}`);if(!s)continue;const a=r-s.positionX,o=n-s.positionY;s.deltaX+=a,s.deltaY+=o,s.positionX=r,s.positionY=n}}).bind(this)}isSupported(e){return"ontouchstart"in e}activate(e){this.isSupported(e)&&(this._activated||(this._allTouchDataMap.clear(),this._allCachedTouchDataArray.length=0,e.addEventListener("touchstart",this._handleTouchStart),e.addEventListener("touchend",this._handleTouchEnd),e.addEventListener("touchcancel",this._handleTouchEnd),e.addEventListener("touchmove",this._handleTouchMove,{passive:!1}),this._activated=!0))}deactivate(e){this._activated&&(this._allTouchDataMap.clear(),this._allCachedTouchDataArray.length=0,e.removeEventListener("touchstart",this._handleTouchStart),e.removeEventListener("touchend",this._handleTouchEnd),e.removeEventListener("touchcancel",this._handleTouchEnd),e.removeEventListener("touchmove",this._handleTouchMove),this._activated=!1)}_refreshCache(){0===this._allCachedTouchDataArray.length&&(this._allCachedTouchDataArray=[...this._allTouchDataMap.values()])}getTouchData(){return this._refreshCache(),this._allCachedTouchDataArray}resetDeltas(){this._refreshCache(),this._allCachedTouchDataArray.forEach((e=>e.resetDelta()))}onEvent(e){this._onEvent=e}},x=new class{constructor(){this._activated=!1,this._onVisibilityChangeCallbacks=[],this._handleVisibilityChange=(()=>{const e=this.isVisible();this._onVisibilityChangeCallbacks.forEach((t=>t(e)))}).bind(this)}activate(){this.isSupported()&&(this._activated||(document.addEventListener("visibilitychange",this._handleVisibilityChange,!1),this._activated=!0))}deactivate(){this._activated&&(document.removeEventListener("visibilitychange",this._handleVisibilityChange,!1),this._activated=!1)}isSupported(){return"onvisibilitychange"in document}isVisible(){return"visible"===document.visibilityState}addVisibilityChange(e){this._onVisibilityChangeCallbacks.push(e)}removeVisibilityChange(e){const t=this._onVisibilityChangeCallbacks.indexOf(e);t<0||this._onVisibilityChangeCallbacks.splice(t,1)}removeAllCallbacks(){this._onVisibilityChangeCallbacks.length=0}},b=()=>!!window.WebGL2RenderingContext;var v=Object.freeze({__proto__:null,AllKeyCodes:n,GlobalFullScreenManager:r,GlobalKeyboardManager:o,GlobalMouseManager:d,GlobalPointerLockManager:m,GlobalTouchManager:g,GlobalVisibilityManager:x,isAlphanumeric:e=>a(e)||s(e),isLetter:s,isNumber:a,isWebGL2Supported:b,isWebWorkerSupported:()=>!!window.Worker}),y=1e-6,T="undefined"!=typeof Float32Array?Float32Array:Array;function w(){var e=new T(16);return T!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function S(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function E(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function R(e,t,i){var r=t[0],n=t[1],s=t[2],a=t[3],o=t[4],c=t[5],d=t[6],h=t[7],f=t[8],l=t[9],u=t[10],_=t[11],m=t[12],p=t[13],g=t[14],x=t[15],b=i[0],v=i[1],y=i[2],T=i[3];return e[0]=b*r+v*o+y*f+T*m,e[1]=b*n+v*c+y*l+T*p,e[2]=b*s+v*d+y*u+T*g,e[3]=b*a+v*h+y*_+T*x,b=i[4],v=i[5],y=i[6],T=i[7],e[4]=b*r+v*o+y*f+T*m,e[5]=b*n+v*c+y*l+T*p,e[6]=b*s+v*d+y*u+T*g,e[7]=b*a+v*h+y*_+T*x,b=i[8],v=i[9],y=i[10],T=i[11],e[8]=b*r+v*o+y*f+T*m,e[9]=b*n+v*c+y*l+T*p,e[10]=b*s+v*d+y*u+T*g,e[11]=b*a+v*h+y*_+T*x,b=i[12],v=i[13],y=i[14],T=i[15],e[12]=b*r+v*o+y*f+T*m,e[13]=b*n+v*c+y*l+T*p,e[14]=b*s+v*d+y*u+T*g,e[15]=b*a+v*h+y*_+T*x,e}function A(e,t,i){var r,n,s,a,o,c,d,h,f,l,u,_,m=i[0],p=i[1],g=i[2];return t===e?(e[12]=t[0]*m+t[4]*p+t[8]*g+t[12],e[13]=t[1]*m+t[5]*p+t[9]*g+t[13],e[14]=t[2]*m+t[6]*p+t[10]*g+t[14],e[15]=t[3]*m+t[7]*p+t[11]*g+t[15]):(r=t[0],n=t[1],s=t[2],a=t[3],o=t[4],c=t[5],d=t[6],h=t[7],f=t[8],l=t[9],u=t[10],_=t[11],e[0]=r,e[1]=n,e[2]=s,e[3]=a,e[4]=o,e[5]=c,e[6]=d,e[7]=h,e[8]=f,e[9]=l,e[10]=u,e[11]=_,e[12]=r*m+o*p+f*g+t[12],e[13]=n*m+c*p+l*g+t[13],e[14]=s*m+d*p+u*g+t[14],e[15]=a*m+h*p+_*g+t[15]),e}function C(e,t){var i=t[0],r=t[1],n=t[2],s=t[3],a=i+i,o=r+r,c=n+n,d=i*a,h=r*a,f=r*o,l=n*a,u=n*o,_=n*c,m=s*a,p=s*o,g=s*c;return e[0]=1-f-_,e[1]=h+g,e[2]=l-p,e[3]=0,e[4]=h-g,e[5]=1-d-_,e[6]=u+m,e[7]=0,e[8]=l+p,e[9]=u-m,e[10]=1-d-f,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function D(){var e=new T(3);return T!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function P(e){var t=new T(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}function M(e,t,i){var r=new T(3);return r[0]=e,r[1]=t,r[2]=i,r}function k(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e}function I(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e}function z(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e}function F(e,t,i){return e[0]=t[0]*i[0],e[1]=t[1]*i[1],e[2]=t[2]*i[2],e}function B(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e}function L(e,t){var i=t[0],r=t[1],n=t[2],s=i*i+r*r+n*n;return s>0&&(s=1/Math.sqrt(s)),e[0]=t[0]*s,e[1]=t[1]*s,e[2]=t[2]*s,e}function N(e,t,i){var r=t[0],n=t[1],s=t[2],a=i[0],o=i[1],c=i[2];return e[0]=n*c-s*o,e[1]=s*a-r*c,e[2]=r*o-n*a,e}function U(e,t,i){var r=t[0],n=t[1],s=t[2],a=i[3]*r+i[7]*n+i[11]*s+i[15];return a=a||1,e[0]=(i[0]*r+i[4]*n+i[8]*s+i[12])/a,e[1]=(i[1]*r+i[5]*n+i[9]*s+i[13])/a,e[2]=(i[2]*r+i[6]*n+i[10]*s+i[14])/a,e}Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});var V,G=z;function O(){var e=new T(4);return T!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function W(e,t,i,r){var n=new T(4);return n[0]=e,n[1]=t,n[2]=i,n[3]=r,n}function X(e,t,i){var r=t[0],n=t[1],s=t[2],a=t[3];return e[0]=i[0]*r+i[4]*n+i[8]*s+i[12]*a,e[1]=i[1]*r+i[5]*n+i[9]*s+i[13]*a,e[2]=i[2]*r+i[6]*n+i[10]*s+i[14]*a,e[3]=i[3]*r+i[7]*n+i[11]*s+i[15]*a,e}function H(){var e=new T(4);return T!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}function Y(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}function $(e,t,i){i*=.5;var r=Math.sin(i);return e[0]=r*t[0],e[1]=r*t[1],e[2]=r*t[2],e[3]=Math.cos(i),e}function q(e,t){var i=new T(2);return i[0]=e,i[1]=t,i}D(),O(),D(),M(1,0,0),M(0,1,0),H(),H(),V=new T(9),T!=Float32Array&&(V[1]=0,V[2]=0,V[3]=0,V[5]=0,V[6]=0,V[7]=0),V[0]=1,V[4]=1,V[8]=1,function(){var e=new T(2);T!=Float32Array&&(e[0]=0,e[1]=0)}();const j=e=>e*Math.PI/180,K={X:0,Y:1,Z:2};var Z=Object.freeze({__proto__:null,FreeFlyController:class{constructor(e){this._isActivated=!1,this._theta=0,this._phi=0,this._touchWasActive=!1,this._touchStartTime=0,this._touchMoveForward=!1,this._position=M(0,0,0),this._target=M(0,0,0),this._forwardAxis=M(1,0,0),this._leftAxis=M(0,0,1),this._upAxis=M(0,1,0),this._move_forwardAxis=M(1,0,0),this._move_leftAxis=M(0,0,1),this._move_upAxis=M(0,1,0),this._mouseSensibility=e.mouseSensibility,this._keyboardSensibility=e.keyboardSensibility,this._touchSensibility=e.touchSensibility,this._movingSpeed=e.movingSpeed,k(this._position,e.position),this._axisIndices=[e.coordinates?K[e.coordinates[0]]:K.X,e.coordinates?K[e.coordinates[1]]:K.Y,e.coordinates?K[e.coordinates[2]]:K.Z],this._theta=e.theta,this._phi=e.phi}isActivated(){return this._isActivated}activate(){this._isActivated=!0,o.preventDefault("Z"),o.preventDefault("W"),o.preventDefault("S"),o.preventDefault("A"),o.preventDefault("Q"),o.preventDefault("D"),o.preventDefault("Shift"),o.preventDefault("C"),o.preventDefault("Space"),o.preventDefault("ArrowUp"),o.preventDefault("ArrowDown"),o.preventDefault("ArrowLeft"),o.preventDefault("ArrowRight")}deactivate(){this._isActivated=!1,o.enableDefault("Z"),o.enableDefault("W"),o.enableDefault("S"),o.enableDefault("A"),o.enableDefault("Q"),o.enableDefault("D"),o.enableDefault("Shift"),o.enableDefault("C"),o.enableDefault("Space"),o.enableDefault("ArrowUp"),o.enableDefault("ArrowDown"),o.enableDefault("ArrowLeft"),o.enableDefault("ArrowRight")}isInteractedWith(){return o.isPressed("Z","W","S","A","Q","D")||o.isPressed("Shift","C","Space")||o.isPressed("ArrowUp","ArrowDown","ArrowLeft","ArrowRight")}update(e,t=!1){let i=!1,r=!1,n=!1,s=!1,a=!1,c=!1,h=!1,f=0,l=0;{const t=d.deltaX()*this._mouseSensibility,i=d.deltaY()*this._mouseSensibility;f-=j(t)*e,l-=j(i)*e}const u=g.getTouchData().length>0;if(u){if(!this._touchWasActive){const e=Date.now();(e-this._touchStartTime)/1e3<.25?this._touchMoveForward=!0:this._touchStartTime=e}const t=g.getTouchData()[0],i=t.deltaX*this._touchSensibility,r=t.deltaY*this._touchSensibility;f-=j(i)*e,l-=j(r)*e}else this._touchMoveForward=!1;this._touchWasActive=u,this._touchMoveForward&&(i=!0),o.isPressed("Z","W")&&(i=!0),o.isPressed("S")&&(r=!0),o.isPressed("A","Q")&&(n=!0),o.isPressed("D")&&(s=!0),o.isPressed("Shift")&&(a=!0),t||(o.isPressed("C")&&(c=!0),o.isPressed("Space")&&(h=!0));const _=this._movingSpeed*(a?4:1)*e,m=this._keyboardSensibility*e;o.isPressed("ArrowUp")?l+=m:o.isPressed("ArrowDown")&&(l-=m),o.isPressed("ArrowLeft")?f+=m:o.isPressed("ArrowRight")&&(f-=m),this._theta+=f,this._phi+=l;const p=.5*Math.PI,x=.95*p;this._phi=Math.min(Math.max(this._phi,-x),+x);const b=Math.cos(this._theta),v=Math.sin(this._theta),[y,T,w]=this._axisIndices,S=Math.cos(this._phi+p);this._upAxis[y]=S*b,this._upAxis[T]=S*v,this._upAxis[w]=Math.sin(this._phi+p);const E=Math.cos(this._phi);this._forwardAxis[y]=E*b,this._forwardAxis[T]=E*v,this._forwardAxis[w]=Math.sin(this._phi),N(this._leftAxis,this._upAxis,this._forwardAxis),t?(this._move_forwardAxis[y]=b,this._move_forwardAxis[T]=v,this._move_forwardAxis[w]=0,this._move_leftAxis[y]=-v,this._move_leftAxis[T]=b,this._move_leftAxis[w]=0,this._move_upAxis[y]=0,this._move_upAxis[T]=0,this._move_upAxis[w]=1):(k(this._move_forwardAxis,this._forwardAxis),k(this._move_leftAxis,this._leftAxis),k(this._move_upAxis,this._upAxis));const R=M(0,0,0);B(R,this._move_forwardAxis,_);const A=M(0,0,0);B(A,this._move_leftAxis,_);const C=M(0,0,0);B(C,this._move_upAxis,_),i?I(this._position,this._position,R):r&&G(this._position,this._position,R),n?I(this._position,this._position,A):s&&G(this._position,this._position,A),h?I(this._position,this._position,C):c&&G(this._position,this._position,C),I(this._target,this._position,this._forwardAxis)}getPosition(){return this._position}setPosition(e){k(this._position,e),I(this._target,this._position,this._forwardAxis)}getTarget(){return this._target}getUpAxis(){return this._upAxis}getTheta(){return this._theta}getPhi(){return this._phi}getTouchMoveForward(){return this._touchMoveForward}}});const Q=e=>e>1?e-Math.floor(e):e,J=e=>(e*=2)<1?e:1-(e-=1),ee=(e,t,i)=>t+(i-t)*e;class te{constructor(){this._framesDelta=[],this._averageDelta=0,this._minDelta=0,this._maxDelta=0}pushDelta(e){this._framesDelta.length>=100&&this._framesDelta.shift(),this._framesDelta.push(e),this._minDelta=999999999,this._maxDelta=-999999999,this._averageDelta=0;for(const e of this._framesDelta)this._minDelta=Math.min(this._minDelta,e),this._maxDelta=Math.max(this._maxDelta,e),this._averageDelta+=e;this._averageDelta/=this._framesDelta.length}get framesDelta(){return this._framesDelta}get averageDelta(){return this._averageDelta}get minDelta(){return this._minDelta}get maxDelta(){return this._maxDelta}}var ie,re;!function(e){e[e.perspective=0]="perspective",e[e.orthogonal=1]="orthogonal"}(ie||(ie={})),function(e){e[e.Right=0]="Right",e[e.Left=1]="Left",e[e.Bottom=2]="Bottom",e[e.Top=3]="Top",e[e.Back=4]="Back",e[e.Front=5]="Front"}(re||(re={}));const ne=(e,t,i)=>{const r=O(),n=O(),s=[];return e.forEach((e=>{if(r[0]=e[0],r[1]=e[1],r[2]=e[2],r[3]=1,X(n,r,t),0===n[3])return null;n[3]=1/n[3],n[0]*=n[3],n[1]*=n[3],n[2]*=n[3],n[0]=(.5*n[0]+.5)*i[2]+i[0],n[1]=(.5*n[1]+.5)*i[3]+i[1],s.push(k(D(),n))})),s},se=(e,t,i)=>{const r=function(e,t){var i=t[0],r=t[1],n=t[2],s=t[3],a=t[4],o=t[5],c=t[6],d=t[7],h=t[8],f=t[9],l=t[10],u=t[11],_=t[12],m=t[13],p=t[14],g=t[15],x=i*o-r*a,b=i*c-n*a,v=i*d-s*a,y=r*c-n*o,T=r*d-s*o,w=n*d-s*c,S=h*m-f*_,E=h*p-l*_,R=h*g-u*_,A=f*p-l*m,C=f*g-u*m,D=l*g-u*p,P=x*D-b*C+v*A+y*R-T*E+w*S;return P?(P=1/P,e[0]=(o*D-c*C+d*A)*P,e[1]=(n*C-r*D-s*A)*P,e[2]=(m*w-p*T+g*y)*P,e[3]=(l*T-f*w-u*y)*P,e[4]=(c*R-a*D-d*E)*P,e[5]=(i*D-n*R+s*E)*P,e[6]=(p*v-_*w-g*b)*P,e[7]=(h*w-l*v+u*b)*P,e[8]=(a*C-o*R+d*S)*P,e[9]=(r*R-i*C-s*S)*P,e[10]=(_*T-m*v+g*x)*P,e[11]=(f*v-h*T-u*x)*P,e[12]=(o*E-a*A-c*S)*P,e[13]=(i*A-r*E+n*S)*P,e[14]=(m*b-_*y-p*x)*P,e[15]=(h*y-f*b+l*x)*P,e):null}(w(),t);return ae(e,r,i)},ae=(e,t,i)=>{const r=[],n=O();return e.forEach((e=>{n[0]=(e[0]-i[0])/i[2]*2-1,n[1]=(e[1]-i[1])/i[3]*2-1,n[2]=2*e[2]-1,n[3]=1,X(n,n,t),0!==n[3]&&(n[3]=1/n[3],n[0]*=n[3],n[1]*=n[3],n[2]*=n[3],r.push(k(D(),n)))})),r};var oe=Object.freeze({__proto__:null,Camera:class{constructor(){this._projectionType=ie.perspective,this._viewportPos=q(0,0),this._viewportSize=q(0,0),this._projectionMatrix=w(),this._viewMatrix=w(),this._composedMatrix=w(),this._eye=M(0,0,0),this._target=M(0,0,0),this._upAxis=M(0,0,0)}setAsPerspective(e){this._projectionType=ie.perspective;let t=e.aspectRatio;void 0===t&&(t=this._viewportSize[0]/this._viewportSize[1]),this._perspectiveData={fovy:e.fovy,aspectRatio:t,near:e.near,far:e.far}}setAsOrthogonal(e){this._projectionType=ie.orthogonal,this._orthogonalData=Object.assign({},e)}setViewportPos(e,t){this._viewportPos[0]=e,this._viewportPos[1]=t}getViewportPos(){return this._viewportPos}setViewportSize(e,t){this._viewportSize[0]=e,this._viewportSize[1]=t,this._projectionType!==ie.perspective&&this._perspectiveData&&(this._perspectiveData.aspectRatio=this._viewportSize[0]/this._viewportSize[1])}getViewportSize(){return this._viewportSize}lookAt(e,t,i){this.setEye(e),this.setTarget(t),this.setUpAxis(i)}setEye(e){k(this._eye,e)}setTarget(e){k(this._target,e)}setUpAxis(e){k(this._upAxis,e)}getEye(){return this._eye}getTarget(){return this._target}getUpAxis(){return this._upAxis}computeMatrices(){if(this._projectionType===ie.perspective){const{fovy:e,aspectRatio:t,near:i,far:r}=this._perspectiveData;!function(e,t,i,r,n){var s,a=1/Math.tan(t/2);e[0]=a/i,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=n&&n!==1/0?(s=1/(r-n),e[10]=(n+r)*s,e[14]=2*n*r*s):(e[10]=-1,e[14]=-2*r)}(this._projectionMatrix,j(e),t,i,r)}else if(this._projectionType===ie.orthogonal){const{left:e,right:t,top:i,bottom:r,near:n,far:s}=this._orthogonalData;!function(e,t,i,r,n,s,a){var o=1/(t-i),c=1/(r-n),d=1/(s-a);e[0]=-2*o,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*c,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*d,e[11]=0,e[12]=(t+i)*o,e[13]=(n+r)*c,e[14]=(a+s)*d,e[15]=1}(this._projectionMatrix,e,t,i,r,n,s)}!function(e,t,i,r){var n,s,a,o,c,d,h,f,l,u,_=t[0],m=t[1],p=t[2],g=r[0],x=r[1],b=r[2],v=i[0],T=i[1],w=i[2];Math.abs(_-v)<y&&Math.abs(m-T)<y&&Math.abs(p-w)<y?E(e):(h=_-v,f=m-T,l=p-w,n=x*(l*=u=1/Math.hypot(h,f,l))-b*(f*=u),s=b*(h*=u)-g*l,a=g*f-x*h,(u=Math.hypot(n,s,a))?(n*=u=1/u,s*=u,a*=u):(n=0,s=0,a=0),o=f*a-l*s,c=l*n-h*a,d=h*s-f*n,(u=Math.hypot(o,c,d))?(o*=u=1/u,c*=u,d*=u):(o=0,c=0,d=0),e[0]=n,e[1]=o,e[2]=h,e[3]=0,e[4]=s,e[5]=c,e[6]=f,e[7]=0,e[8]=a,e[9]=d,e[10]=l,e[11]=0,e[12]=-(n*_+s*m+a*p),e[13]=-(o*_+c*m+d*p),e[14]=-(h*_+f*m+l*p),e[15]=1)}(this._viewMatrix,this._eye,this._target,this._upAxis),this.computeComposedMatrix()}computeComposedMatrix(){R(this._composedMatrix,this._projectionMatrix,this._viewMatrix)}setProjectionMatrix(e){S(this._projectionMatrix,e)}setViewMatrix(e){S(this._viewMatrix,e)}setComposedMatrix(e){S(this._composedMatrix,e)}getProjectionMatrix(){return this._projectionMatrix}getViewMatrix(){return this._viewMatrix}getComposedMatrix(){return this._composedMatrix}getPerspectiveData(){if(this._projectionType!==ie.perspective)throw new Error("not a perspective projection");return this._perspectiveData}getOrthogonalData(){if(this._projectionType!==ie.orthogonal)throw new Error("not an orthogonal projection");return this._orthogonalData}},FrustumCulling:class{constructor(){this._frustum=new Float32Array(24)}_setPlane(e,t,i,r){const n=4*e;this._frustum[n+0]=t[0]+i[0]*r,this._frustum[n+1]=t[1]+i[1]*r,this._frustum[n+2]=t[2]+i[2]*r,this._frustum[n+3]=t[3]+i[3]*r;const s=Math.sqrt(this._frustum[n+0]*this._frustum[n+0]+this._frustum[n+1]*this._frustum[n+1]+this._frustum[n+2]*this._frustum[n+2]);0!==s&&(this._frustum[n+0]/=s,this._frustum[n+1]/=s,this._frustum[n+2]/=s,this._frustum[n+3]/=s)}calculateFrustum(e,t){const i=R(w(),e,t),r=W(i[0],i[4],i[8],i[12]),n=W(i[1],i[5],i[9],i[13]),s=W(i[2],i[6],i[10],i[14]),a=W(i[3],i[7],i[11],i[15]);this._setPlane(re.Right,a,r,-1),this._setPlane(re.Left,a,r,1),this._setPlane(re.Bottom,a,n,1),this._setPlane(re.Top,a,n,-1),this._setPlane(re.Back,a,s,-1),this._setPlane(re.Front,a,s,1)}sphereInFrustum(e,t,i,r){for(let n=0;n<6;++n){const s=4*n;if(this._frustum[s+0]*e+this._frustum[s+1]*t+this._frustum[s+2]*i+this._frustum[s+3]<=-r)return!1}return!0}pointInFrustum(e,t,i){return this.sphereInFrustum(e,t,i,0)}cubeInFrustumVec3(e,t){return this.cubeInFrustum(e[0],e[1],e[2],t)}cubeInFrustum(e,t,i,r){const n=.5*r,s=e-n,a=t-n,o=i-n,c=e+n,d=t+n,h=i+n;for(let e=0;e<6;++e){const t=4*e,i=this._frustum[t+0],r=this._frustum[t+1],n=this._frustum[t+2],f=this._frustum[t+3];if(!(i*s+r*a+n*o+f>0||i*c+r*a+n*o+f>0||i*s+r*d+n*o+f>0||i*c+r*d+n*o+f>0||i*s+r*a+n*h+f>0||i*c+r*a+n*h+f>0||i*s+r*d+n*h+f>0||i*c+r*d+n*h+f>0))return!1}return!0}},sceneToScreenCoordinates:(e,t,i,r)=>{const n=w();return R(n,i,t),ne(e,n,r)},sceneToScreenCoordsFromComposed:ne,screenToSceneCoordinates:(e,t,i,r)=>{const n=R(w(),i,t);return se(e,n,r)},screenToSceneCoordinatesFromComposed:se,screenToSceneCoordinatesFromInvComposed:ae});let ce=class e{static initialize(t){if(e._gl=t.getContext("webgl2",{alpha:!1,antialias:!1,depth:!0,failIfMajorPerformanceCaveat:!1,powerPreference:"high-performance",premultipliedAlpha:!0,preserveDrawingBuffer:!0,stencil:!1}),!e._gl)throw new Error("could not create webgl context");e._extensionLoseContext=e._gl.getExtension("WEBGL_lose_context"),e._gl.getExtension("EXT_color_buffer_float"),e._gl.getExtension("EXT_float_blend")}static setContext(t){return e._gl=t}static getContext(){if(!e._gl)throw new Error("webgl context not initialized");return e._gl}static getExtensionLoseContext(){return e._extensionLoseContext}static getExtensionLoseContextStrict(){if(!e._extensionLoseContext)throw new Error("lose context extension not available");return e._extensionLoseContext}};var de;ce._gl=null,ce._extensionLoseContext=null,function(e){e[e.positiveX=0]="positiveX",e[e.negativeX=1]="negativeX",e[e.positiveY=2]="positiveY",e[e.negativeY=3]="negativeY",e[e.positiveZ=4]="positiveZ",e[e.negativeZ=5]="negativeZ"}(de||(de={}));const he=e=>{const t=ce.getContext();switch(e){case de.positiveX:return t.TEXTURE_CUBE_MAP_POSITIVE_X;case de.negativeX:return t.TEXTURE_CUBE_MAP_NEGATIVE_X;case de.positiveY:return t.TEXTURE_CUBE_MAP_POSITIVE_Y;case de.negativeY:return t.TEXTURE_CUBE_MAP_NEGATIVE_Y;case de.positiveZ:return t.TEXTURE_CUBE_MAP_POSITIVE_Z;case de.negativeZ:return t.TEXTURE_CUBE_MAP_NEGATIVE_Z}};class fe{constructor(){this._width=0,this._height=0,this._minBufferSize=0,this._texture=null}initialize(e,t){if(e<1)throw new Error(`cube map: width is < 1, input: ${e}`);if(t<1)throw new Error(`cube map: height is < 1, input: ${t}`);const i=ce.getContext();this._texture=i.createTexture(),this._width=e,this._height=t,this._minBufferSize=this._width*this._height*4}dispose(){ce.getContext().deleteTexture(this._texture)}rawBind(){if(!this._texture)throw new Error("cube map: not initialized");const e=ce.getContext();e.bindTexture(e.TEXTURE_CUBE_MAP,this._texture)}bind(e){this.rawBind(),e(this),fe.unbind()}static unbind(){const e=ce.getContext();e.bindTexture(e.TEXTURE_CUBE_MAP,null)}loadFromMemory(e,t){if(!this._texture)throw new Error("cube map: not initialized");if(t.length<this._minBufferSize)throw new Error(`cube map: miss-matching pixels buffer size, input: ${t.length}`);const i=ce.getContext(),r=i.RGBA,n=i.RGBA,s=i.UNSIGNED_BYTE;i.texImage2D(he(e),0,r,this._width,this._height,0,n,s,t)}allocate(){const e=ce.getContext(),t=e.RGBA,i=e.RGBA,r=e.UNSIGNED_BYTE,n=new Uint8Array(this._width*this._height*4);[de.negativeX,de.negativeY,de.negativeZ,de.positiveX,de.positiveY,de.positiveZ].forEach((s=>{e.texImage2D(he(s),0,t,this._width,this._height,0,i,r,n)}))}complete(){const e=ce.getContext();e.generateMipmap(e.TEXTURE_CUBE_MAP),e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR)}getWidth(){if(!this._texture)throw new Error("cube map: not initialized");return this._width}getHeight(){if(!this._texture)throw new Error("cube map: not initialized");return this._height}getRawObject(){if(!this._texture)throw new Error("texture not initialized");return this._texture}}class le{constructor(){this._texture=null}initialize(e){if(this._texture)throw new Error("data texture already initialized");const t=ce.getContext();if(this._texture=t.createTexture(),!this._texture)throw new Error("data texture failed to be created");t.bindTexture(t.TEXTURE_2D,this._texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),this.allocate(e)}dispose(){ce.getContext().deleteTexture(this._texture)}allocate(e){if(!this._texture)throw new Error("data texture not initialized");const t=Array.isArray(e)?e.length:e;if(t<=0)throw new Error("texture: width must be positive");if(t>2048)throw new Error(`data texture max size is 2048 (input was ${t})`);const i=ce.getContext();i.bindTexture(i.TEXTURE_2D,this._texture),Array.isArray(e),this._buffer=new Float32Array(e);const r=i.R32F,n=t,s=i.RED,a=i.FLOAT;i.texImage2D(i.TEXTURE_2D,0,r,n,1,0,s,a,this._buffer)}update(e,t){if(!this._texture)throw new Error("data texture not initialized");if(!this._buffer)throw new Error("data texture update but not previously allocated");if(e+t.length>this._buffer.length)throw new Error(`data texture update but size is larger (start: ${e}, length: ${t.length}, max: ${this._buffer.length})`);const i=ce.getContext();i.bindTexture(i.TEXTURE_2D,this._texture);for(let e=0;e<t.length;++e)this._buffer[e]=t[e];const r=t.length,n=i.RED,s=i.FLOAT,a=e;i.texSubImage2D(i.TEXTURE_2D,0,a,0,r,1,n,s,this._buffer,0)}rawBind(){if(!this._texture)throw new Error("data texture not initialized");const e=ce.getContext();e.bindTexture(e.TEXTURE_2D,this._texture)}preBind(e){this.rawBind(),e(this)}bind(e){this.preBind(e),le.unbind()}static unbind(){const e=ce.getContext();e.bindTexture(e.TEXTURE_2D,null)}}let ue=class e{constructor(){this._texture=null}initialize(e=0){if(this._texture)throw new Error("data texture already initialized");const t=ce.getContext();if(this._texture=t.createTexture(),!this._texture)throw new Error("data texture failed to be created");t.bindTexture(t.TEXTURE_2D,this._texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),this.allocate(e)}dispose(){ce.getContext().deleteTexture(this._texture)}allocate(e){if(!this._texture)throw new Error("data texture not initialized");const t=Array.isArray(e)?e.length:Math.ceil(e/4);if(t<=0)throw new Error("texture: width must be positive");if(t>2048)throw new Error(`data texture max size is 2048 (input was ${t})`);const i=ce.getContext();if(i.bindTexture(i.TEXTURE_2D,this._texture),Array.isArray(e))this._buffer=new Float32Array(e.flat());else{if(e%4!=0)throw new Error(`data texture update buffer length is not a multiple of 4, length: ${e}.`);this._buffer=new Float32Array(e)}const r=i.RGBA32F,n=t,s=i.RGBA,a=i.FLOAT;i.texImage2D(i.TEXTURE_2D,0,r,n,1,0,s,a,this._buffer)}update(e,t){if(!this._texture)throw new Error("data texture not initialized");if(!this._buffer)throw new Error("data texture update but not previously allocated");if(e+t.length>this._buffer.length)throw new Error(`data texture update but size is larger (start: ${e}, length: ${t.length}, max: ${this._buffer.length})`);const i=ce.getContext();i.bindTexture(i.TEXTURE_2D,this._texture);for(let e=0;e<t.length;++e)this._buffer[4*e+0]=t[e][0],this._buffer[4*e+1]=t[e][1],this._buffer[4*e+2]=t[e][2],this._buffer[4*e+3]=t[e][3];this.updateFromBuffer(e,this._buffer)}updateFromBuffer(e,t){if(!this._texture)throw new Error("data texture not initialized");if(!this._buffer)throw new Error("data texture update but not previously allocated");if(e+t.length>this._buffer.length)throw new Error(`data texture update but size is larger (start: ${e}, length: ${t.length}, max: ${this._buffer.length})`);if(t.length%4!=0)throw new Error(`data texture update buffer length is not a multiple of 4, length: ${t.length}.`);const i=ce.getContext();i.bindTexture(i.TEXTURE_2D,this._texture);const r=t.length/4,n=i.RGBA,s=i.FLOAT,a=e;i.texSubImage2D(i.TEXTURE_2D,0,a,0,r,1,n,s,t,0)}rawBind(){if(!this._texture)throw new Error("data texture not initialized");const e=ce.getContext();e.bindTexture(e.TEXTURE_2D,this._texture)}preBind(e){this.rawBind(),e(this)}bind(t){this.preBind(t),e.unbind()}static unbind(){const e=ce.getContext();e.bindTexture(e.TEXTURE_2D,null)}};class _e{constructor(){this._texture=null}initialize(e=[]){if(this._texture)throw new Error("data texture already initialized");const t=ce.getContext();if(this._texture=t.createTexture(),!this._texture)throw new Error("data texture failed to be created");t.bindTexture(t.TEXTURE_2D,this._texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),this.allocate(e)}dispose(){ce.getContext().deleteTexture(this._texture)}allocate(e){if(!this._texture)throw new Error("data texture not initialized");if(e.length<=0)throw new Error("texture: width must be positive");const t=ce.getContext();t.bindTexture(t.TEXTURE_2D,this._texture),this._buffer=new Uint8Array(e.flat());const i=t.RGBA,r=e.length,n=t.RGBA,s=t.UNSIGNED_BYTE;t.texImage2D(t.TEXTURE_2D,0,i,r,1,0,n,s,this._buffer)}update(e,t){if(!this._texture)throw new Error("data texture not initialized");if(!this._buffer)throw new Error("data texture update but not previously allocated");if(e+t.length>this._buffer.length)throw new Error(`data texture update but size is larger (start: ${e}, length: ${t.length}, max: ${this._buffer.length})`);const i=ce.getContext();i.bindTexture(i.TEXTURE_2D,this._texture);for(let e=0;e<t.length;++e)this._buffer[4*e+0]=t[e][0],this._buffer[4*e+1]=t[e][1],this._buffer[4*e+2]=t[e][2],this._buffer[4*e+3]=t[e][3];const r=t.length,n=i.RGBA,s=i.UNSIGNED_BYTE,a=e;i.texSubImage2D(i.TEXTURE_2D,0,a,0,r,1,n,s,this._buffer,0)}rawBind(){if(!this._texture)throw new Error("data texture not initialized");const e=ce.getContext();e.bindTexture(e.TEXTURE_2D,this._texture)}preBind(e){this.rawBind(),e(this)}bind(e){this.preBind(e),_e.unbind()}static unbind(){const e=ce.getContext();e.bindTexture(e.TEXTURE_2D,null)}}let me=class e{constructor(){const e=ce.getContext().createFramebuffer();if(null===e)throw new Error("null frame buffer object");this._frameBuffer=e}dispose(){ce.getContext().deleteFramebuffer(this._frameBuffer)}rawBind(){const e=ce.getContext();e.bindFramebuffer(e.FRAMEBUFFER,this._frameBuffer)}bind(t){this.rawBind(),t(this),e.unbind()}static unbind(){const e=ce.getContext();e.bindFramebuffer(e.FRAMEBUFFER,null)}attachTexture(e){const t=ce.getContext();t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e.getRawObject(),0)}attachDepthTexture(e){const t=ce.getContext();t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,e.getRawObject(),0)}attachRenderBuffer(e){const t=ce.getContext();t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e.getRawObject())}attachCubeMap(e,t){const i=ce.getContext();i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,he(t),e.getRawObject(),0)}getPixels(e,t,i,r,n){const s=ce.getContext();s.readPixels(e,t,i,r,s.RGBA,s.UNSIGNED_BYTE,n)}};var pe;!function(e){e[e.float=0]="float",e[e.vec2f=1]="vec2f",e[e.vec3f=2]="vec3f",e[e.vec4f=3]="vec4f",e[e.mat3f=4]="mat3f",e[e.mat4f=5]="mat4f"}(pe||(pe={}));const ge=e=>{switch(e){case pe.float:return 1;case pe.vec2f:return 2;case pe.vec3f:return 3;case pe.vec4f:return 4;case pe.mat3f:return 9;case pe.mat4f:return 16}};var xe;!function(e){e[e.lines=0]="lines",e[e.lineStrip=1]="lineStrip",e[e.lineLoop=2]="lineLoop",e[e.triangles=3]="triangles",e[e.triangleStrip=4]="triangleStrip",e[e.triangleFan=5]="triangleFan"}(xe||(xe={}));const be=e=>e instanceof Float32Array?e:new Float32Array(e),ve=e=>{const t=ce.getContext();return"dynamic"===e?t.DYNAMIC_DRAW:"streaming"===e?t.STREAM_DRAW:t.STATIC_DRAW};class ye{constructor(e,t){this._primitiveStart=0,this._primitiveCount=0,this._instanceCount=0,this._isInstanced=!1;const i=ce.getContext();if(0===t.vbos.length)throw new Error("empty vbo definition");for(const i of t.vbos){if(0===i.attrs.length)throw new Error("empty vbo attribute definition");for(const t of i.attrs)if(!e.hasAttribute(t.name))throw new Error(`attribute not found, name="${t.name}"`)}switch(this._def=t,t.primitiveType){case xe.lines:this._primitiveType=i.LINES;break;case xe.lineStrip:this._primitiveType=i.LINE_STRIP;break;case xe.lineLoop:this._primitiveType=i.LINE_LOOP;break;case xe.triangles:this._primitiveType=i.TRIANGLES;break;case xe.triangleStrip:this._primitiveType=i.TRIANGLE_STRIP;break;case xe.triangleFan:this._primitiveType=i.TRIANGLE_FAN;break;default:throw new Error("primitive type not found")}const r=i.createVertexArray();if(!r)throw new Error("fail o create a vao unit");this._vao=r,i.bindVertexArray(this._vao),this._vbos=[];for(const t of this._def.vbos){const r=i.createBuffer();if(!r)throw new Error("fail o create a vbo unit");this._vbos.push({object:r,maxSize:0,mode:t.mode||"static"}),i.bindBuffer(i.ARRAY_BUFFER,r);let n=t.stride||0;if(!n){for(const e of t.attrs)switch(e.type){case pe.float:n+=1;break;case pe.vec2f:n+=2;break;case pe.vec3f:n+=3;break;case pe.vec4f:n+=4;break;case pe.mat3f:n+=9;break;case pe.mat4f:n+=16}n*=4}for(const r of t.attrs){let s=1,a=1;switch(r.type){case pe.float:s=1,a=1;break;case pe.vec2f:s=2,a=1;break;case pe.vec3f:s=3,a=1;break;case pe.vec4f:s=4,a=1;break;case pe.mat3f:s=3,a=3;break;case pe.mat4f:s=4,a=4}const o=e.getAttribute(r.name);for(let e=0;e<a;++e){const a=o+e,c=4*(r.index+e*s);i.enableVertexAttribArray(a),i.vertexAttribPointer(a,s,i.FLOAT,!1,n,c),!0===t.instanced&&(i.vertexAttribDivisor(a,1),this._isInstanced=!0)}}}i.bindVertexArray(null)}dispose(){const e=ce.getContext();for(const t of this._vbos)e.deleteBuffer(t.object);this._vbos.length=0,e.deleteVertexArray(this._vao)}setBufferSize(e,t){if(e<0||e>=this._vbos.length)throw new Error(`no vbo available to that index (input: ${e})`);if(t<=0)throw new Error(`vbo must be > 0 (input: ${t})`);const i=this._vbos[e];if(t<i.maxSize)return;i.maxSize=t;const r=ce.getContext();r.bindBuffer(r.ARRAY_BUFFER,i.object),r.bufferData(r.ARRAY_BUFFER,t,ve(i.mode)),r.bindBuffer(r.ARRAY_BUFFER,null)}setFloatBufferSize(e,t){this.setBufferSize(e,4*t)}allocateBuffer(e,t,i){if(e<0||e>=this._vbos.length)throw new Error(`no vbo available to that index (input: ${e}, total vbos: ${this._vbos.length})`);if(i<=0)throw new Error(`size must be > 0 (input: ${i})`);const r=this._vbos[e];if(i<=0)throw new Error(`vbo must be > 0 (input: ${i})`);r.maxSize=i;const n=be(t),s=ce.getContext();s.bindBuffer(s.ARRAY_BUFFER,r.object),s.bufferData(s.ARRAY_BUFFER,n,ve(r.mode),0,i),s.bindBuffer(s.ARRAY_BUFFER,null)}updateBuffer(e,t,i,r){if(e<0||e>=this._vbos.length)throw new Error(`no vbo available to that index (input: ${e}, total vbos: ${this._vbos.length})`);if(i<=0)throw new Error(`size must be > 0 (input: ${i})`);const n=this._vbos[e];if(void 0!==r){if(r<0)throw new Error(`offset must be >= 0 (input: ${r})`);const e=r+i;if(e>n.maxSize)throw new Error(`offset + size > to vbo max size (input: ${e}, max size: ${n.maxSize})`)}else if(i>n.maxSize)throw new Error(`size must be < to vbo max size (input: ${i}, max size: ${n.maxSize})`);const s=be(t),a=ce.getContext();a.bindBuffer(a.ARRAY_BUFFER,n.object),a.bufferSubData(a.ARRAY_BUFFER,null!=r?r:0,s.slice(0,i),0,i),a.bindBuffer(a.ARRAY_BUFFER,null)}render(){if(0==this._primitiveCount)return;if(this._isInstanced&&0==this._instanceCount)return;const e=ce.getContext();e.bindVertexArray(this._vao),!0===this._isInstanced?e.drawArraysInstanced(this._primitiveType,this._primitiveStart,this._primitiveCount,this._instanceCount):e.drawArrays(this._primitiveType,this._primitiveStart,this._primitiveCount),e.bindVertexArray(null)}setPrimitiveStart(e){this._primitiveStart=e}setPrimitiveCount(e){this._primitiveCount=e}setInstancedCount(e){this._instanceCount=e}}class Te{constructor(){this._def={vbos:[],primitiveType:xe.lines}}reset(){return this._def={vbos:[],primitiveType:xe.lines},this}getDef(){return this._def}setPrimitiveType(e){return this._def.primitiveType=xe[e],this}addVbo(){return this._def.vbos.push({attrs:[],instanced:!1}),this}setVboAsInstanced(){return this._getLastVbo().instanced=!0,this}setVboAsDynamic(){return this._getLastVbo().mode="dynamic",this}setVboAsStreaming(){return this._getLastVbo().mode="streaming",this}setStride(e){return this._getLastVbo().stride=e,this}addVboAttribute(e,t){const i=this._getLastVbo(),r=i.attrs.length>0?i.attrs[i.attrs.length-1]:null;return i.attrs.push({name:e,type:pe[t],index:r?r.index+ge(r.type):0}),this}_getLastVbo(){if(0===this._def.vbos.length)throw new Error("no VBO setup");return this._def.vbos[this._def.vbos.length-1]}}var we=Object.freeze({__proto__:null,get AttributeType(){return pe},BytesPerPixel:4,Geometry:ye,GeometryBuilder:Te,get PrimitiveType(){return xe}});class Se{constructor(){const e=ce.getContext().createRenderbuffer();if(null===e)throw new Error("null render buffer object");this._buffer=e}dispose(){ce.getContext().deleteRenderbuffer(this._buffer)}rawBind(){const e=ce.getContext();e.bindRenderbuffer(e.RENDERBUFFER,this._buffer)}preBind(e){this.rawBind(),e(this)}bind(e){this.preBind(e),Se.unbind()}static unbind(){const e=ce.getContext();e.bindRenderbuffer(e.RENDERBUFFER,null)}setSize(e,t,i){const r=ce.getContext();let n=r.DEPTH_COMPONENT32F;switch(e){case"depth16":case"depth24":n=r.DEPTH_COMPONENT16}r.renderbufferStorage(r.RENDERBUFFER,n,t,i)}getRawObject(){return this._buffer}}let Ee=class e{constructor(e,t){this._attributes=new Map,this._uniforms=new Map,this._name=e;const i=ce.getContext(),r=this._getShader(t.vertexSrc,i.VERTEX_SHADER),n=this._getShader(t.fragmentSrc,i.FRAGMENT_SHADER),s=i.createProgram();if(!s)throw new Error("could not create a shader program");if(i.attachShader(s,r),i.attachShader(s,n),i.linkProgram(s),i.deleteShader(r),i.deleteShader(n),!i.getProgramParameter(s,i.LINK_STATUS)){const e=i.getProgramInfoLog(s);throw new Error("Failed to initialized shaders, Error linking:"+e)}this._program=s,this.bind((()=>{this._getAttributes(t.attributes),this._getUniforms(t.uniforms)}))}dispose(){ce.getContext().deleteProgram(this._program)}bind(t){if(null!==e._isBound)throw new Error(`Double shader binding (bound: ${e._isBound._name}, binding: ${this._name})`);e._isBound=this,ce.getContext().useProgram(this._program),t(this),e.unbind()}static unbind(){ce.getContext().useProgram(null),e._isBound=null}isBound(){return e._isBound===this}hasAttribute(e){return this._attributes.has(e)}getAttribute(e){const t=this._attributes.get(e);if(void 0===t)throw new Error(`attribute not found: ${e}`);return t}getUniform(e){const t=this._uniforms.get(e);if(void 0===t)throw new Error(`uniform not found: ${e}`);return t}setTextureUniform(e,t,i){const r=ce.getContext();r.activeTexture(r.TEXTURE0+i),r.uniform1i(this.getUniform(e),i),t.rawBind()}setInteger1Uniform(e,t){ce.getContext().uniform1i(this.getUniform(e),t)}setInteger2Uniform(e,t,i){ce.getContext().uniform2i(this.getUniform(e),t,i)}setInteger3Uniform(e,t,i,r){ce.getContext().uniform3i(this.getUniform(e),t,i,r)}setFloat1Uniform(e,t){ce.getContext().uniform1f(this.getUniform(e),t)}setFloat2Uniform(e,t,i){ce.getContext().uniform2f(this.getUniform(e),t,i)}setFloat3Uniform(e,t,i,r){ce.getContext().uniform3f(this.getUniform(e),t,i,r)}setMatrix3Uniform(e,t){ce.getContext().uniformMatrix3fv(this.getUniform(e),!1,t)}setMatrix4Uniform(e,t){ce.getContext().uniformMatrix4fv(this.getUniform(e),!1,t)}_getAttributes(e){const t=ce.getContext();for(let i=0;i<e.length;++i){const r=t.getAttribLocation(this._program,e[i]);if(r<0)throw new Error(`attribute not found => ${e[i]}`);this._attributes.set(e[i],r)}}_getUniforms(e){const t=ce.getContext();for(let i=0;i<e.length;++i){const r=t.getUniformLocation(this._program,e[i]);if(null===r)throw new Error(`uniform not found => ${e[i]}`);this._uniforms.set(e[i],r)}}_getShader(e,t){const i=ce.getContext(),r=i.createShader(t);if(!r)throw new Error("could not create a shader");if(i.shaderSource(r,e),i.compileShader(r),!i.getShaderParameter(r,i.COMPILE_STATUS)){let e=i.getShaderInfoLog(r);throw e||(e="failed to compile a shader"),new Error(e)}return r}};var Re,Ae;Ee._isBound=null,function(e){e[e.pixelated=0]="pixelated",e[e.linear=1]="linear",e[e.mipmap=2]="mipmap"}(Re||(Re={})),function(e){e[e.noRepeat=0]="noRepeat",e[e.repeat=1]="repeat"}(Ae||(Ae={}));let Ce=class e{constructor(){this._width=0,this._height=0,this._texture=null}initialize(){if(this._texture)throw new Error("texture: already initialized");const e=ce.getContext();this._texture=e.createTexture()}rawBind(){if(!this._texture)throw new Error("texture: not initialized");const e=ce.getContext();e.bindTexture(e.TEXTURE_2D,this._texture)}preBind(e){this.rawBind(),e(this)}bind(t){this.preBind(t),e.unbind()}static unbind(){const e=ce.getContext();e.bindTexture(e.TEXTURE_2D,null)}loadFromImage(e,t=Re.pixelated,i=Ae.noRepeat){this._allocate(e.width,e.height,e,t,i)}loadFromMemory(e,t,i,r=Re.pixelated,n=Ae.noRepeat){this._allocate(e,t,i,r,n)}allocate(e,t,i=Re.pixelated,r=Ae.noRepeat){this._allocate(e,t,null,i,r)}allocateDepth(e,t,i=Re.pixelated,r=Ae.noRepeat){this._allocate(e,t,null,i,r,!0)}resize(e,t,i=Re.pixelated,r=Ae.noRepeat){this._allocate(e,t,null,i,r)}_allocate(e,t,i=null,r=Re.pixelated,n=Ae.noRepeat,s=!1){if(!this._texture)throw new Error("texture: not initialized");if(e<=0)throw new Error("texture: width must be positive");if(t<=0)throw new Error("texture: height must be positive");const a=ce.getContext();this._width=e,this._height=t;const o=s?a.DEPTH_COMPONENT32F:a.RGBA,c=s?a.DEPTH_COMPONENT:a.RGBA,d=s?a.FLOAT:a.UNSIGNED_BYTE;i instanceof HTMLImageElement?a.texImage2D(a.TEXTURE_2D,0,o,c,d,i):a.texImage2D(a.TEXTURE_2D,0,o,e,t,0,c,d,i),n===Ae.noRepeat?(a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE)):n===Ae.repeat&&(a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.REPEAT),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.REPEAT)),r===Re.pixelated?(a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST)):r===Re.linear?(a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR)):r===Re.mipmap&&(a.generateMipmap(a.TEXTURE_2D),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR_MIPMAP_LINEAR))}getWidth(){if(!this._texture)throw new Error("texture not initialized");return this._width}getHeight(){if(!this._texture)throw new Error("texture not initialized");return this._height}getRawObject(){if(!this._texture)throw new Error("texture not initialized");return this._texture}};class De{constructor(){this._width=0,this._height=0,this._texture=null}initialize(){if(this._texture)throw new Error("texture: already initialized");const e=ce.getContext();this._texture=e.createTexture()}dispose(){ce.getContext().deleteTexture(this._texture)}rawBind(){if(!this._texture)throw new Error("texture: not initialized");const e=ce.getContext();e.bindTexture(e.TEXTURE_2D_ARRAY,this._texture)}preBind(e){this.rawBind(),e(this)}bind(e){this.preBind(e),De.unbind()}static unbind(){const e=ce.getContext();e.bindTexture(e.TEXTURE_2D_ARRAY,null)}loadFromImage(e,t,i,r,n=Re.pixelated,s=Ae.noRepeat){this._allocate(e,t,i,r,n,s)}loadFromMemory(e,t,i,r,n=Re.pixelated,s=Ae.noRepeat){this._allocate(e,t,i,r,n,s)}_allocate(e,t,i,r=null,n=Re.pixelated,s=Ae.noRepeat){if(!this._texture)throw new Error("texture: not initialized");if(e<=0)throw new Error("texture: width must be positive");if(t<=0)throw new Error("texture: height must be positive");if(i<=0)throw new Error("texture: total layers must be positive");const a=ce.getContext();this._width=e,this._height=t;const o=a.RGBA,c=a.RGBA,d=a.UNSIGNED_BYTE;if(r instanceof HTMLImageElement)a.texImage3D(a.TEXTURE_2D_ARRAY,0,o,e,t,i,0,c,d,r);else{if(r){const n=e*t*i*4;if(r.length!==n)throw new Error(`wrong pixels buffer size for (3d) texture array, got ${r.length}/${n}`)}a.texImage3D(a.TEXTURE_2D_ARRAY,0,o,e,t,i,0,c,d,r)}s===Ae.noRepeat?(a.texParameteri(a.TEXTURE_2D_ARRAY,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D_ARRAY,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE)):s===Ae.repeat&&(a.texParameteri(a.TEXTURE_2D_ARRAY,a.TEXTURE_WRAP_S,a.REPEAT),a.texParameteri(a.TEXTURE_2D_ARRAY,a.TEXTURE_WRAP_T,a.REPEAT)),n===Re.pixelated?(a.texParameteri(a.TEXTURE_2D_ARRAY,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D_ARRAY,a.TEXTURE_MIN_FILTER,a.NEAREST)):n===Re.linear?(a.texParameteri(a.TEXTURE_2D_ARRAY,a.TEXTURE_MAG_FILTER,a.LINEAR),a.texParameteri(a.TEXTURE_2D_ARRAY,a.TEXTURE_MIN_FILTER,a.LINEAR)):n===Re.mipmap&&(a.generateMipmap(a.TEXTURE_2D_ARRAY),a.texParameteri(a.TEXTURE_2D_ARRAY,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D_ARRAY,a.TEXTURE_MIN_FILTER,a.LINEAR_MIPMAP_LINEAR))}getWidth(){if(!this._texture)throw new Error("texture not initialized");return this._width}getHeight(){if(!this._texture)throw new Error("texture not initialized");return this._height}getRawObject(){if(!this._texture)throw new Error("texture not initialized");return this._texture}}var Pe=Object.freeze({__proto__:null,CubeMap:fe,get CubeMapType(){return de},DataTexture:le,DataTextureVec4f32:ue,DataTextureVec4u8:_e,FenceSync:class{constructor(){}dispose(){this._sync&&(ce.getContext().deleteSync(this._sync),this._sync=void 0)}isStarted(){return void 0!==this._sync}start(){this._sync&&this.dispose();const e=ce.getContext(),t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);if(null===t)throw new Error("could not create a webgl fence");this._sync=t,e.flush(),e.finish()}isSignaled(){if(!this._sync)throw new Error("fence not started");const e=ce.getContext();return e.getSyncParameter(this._sync,e.SYNC_STATUS)===e.SIGNALED}wait(e){if(!this._sync)throw new Error("fence not started");const t=ce.getContext();switch(t.clientWaitSync(this._sync,0,e)){case t.TIMEOUT_EXPIRED:return"timed-out";case t.WAIT_FAILED:return console.warn("fence.wait -> should never get here"),this.dispose(),"done";case t.ALREADY_SIGNALED:case t.CONDITION_SATISFIED:default:return this.dispose(),"done"}}},FrameBuffer:me,GeometryWrapper:we,RenderBuffer:Se,ShaderProgram:Ee,Texture:Ce,TextureArray:De,get TextureFilter(){return Re},get TextureRepeat(){return Ae},WebGLContext:ce,checkError:()=>{const e=ce.getContext();switch(e.getError()){case e.INVALID_ENUM:throw new Error("gl.INVALID_ENUM\nAn unacceptable value is specified for an enumerated argument. The offending command is ignored and has no other side effect than to set the error flag.");case e.INVALID_VALUE:throw new Error("gl.INVALID_VALUE\nA numeric argument is out of range. The offending command is ignored and has no other side effect than to set the error flag.");case e.INVALID_OPERATION:throw new Error("gl.INVALID_OPERATION\nThe specified operation is not allowed in the current state. The offending command is ignored and has no other side effect than to set the error flag.");case e.INVALID_FRAMEBUFFER_OPERATION:throw new Error("gl.INVALID_FRAMEBUFFER_OPERATION\nThe framebuffer object is not complete. The offending command is ignored and has no other side effect than to set the error flag.");case e.OUT_OF_MEMORY:throw new Error("gl.OUT_OF_MEMORY\nThere is not enough memory left to execute the command. The state of the GL is undefined, except for the state of the error flags, after this error is recorded.");case e.CONTEXT_LOST_WEBGL:throw new Error("gl.CONTEXT_LOST_WEBGL\n If the WebGL context is lost, this error is returned on the first call to getError. Afterwards and until the context has been restored, it returns gl.NO_ERROR.")}},getCubeMapType:he}),Me="\n#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\n\nin vec3 a_vertex_position;\nin vec3 a_vertex_normal;\n\nin vec3 a_offset_center;\nin vec4 a_offset_orientation;\nin vec3 a_offset_color;\nin vec3 a_offset_scale;\n\nflat out vec4 v_color;\nout vec3 v_worldSpacePosition;\nout vec3 v_worldSpaceNormal;\n\n\nvec3 apply_quat_to_vec3(vec3 position, vec4 q)\n{\n  vec3 v = position.xyz;\n  return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\nvoid main(void)\n{\n\tvec3 worldSpacePosition = a_offset_center + apply_quat_to_vec3(a_vertex_position * a_offset_scale, a_offset_orientation);\n\tvec3 worldSpaceNormal = apply_quat_to_vec3(a_vertex_normal, a_offset_orientation);\n\n  gl_Position = u_composedMatrix * vec4(worldSpacePosition, 1.0);\n\n  v_color = vec4(a_offset_color, 1.0);\n  v_worldSpacePosition = worldSpacePosition;\n  v_worldSpaceNormal = worldSpaceNormal;\n}\n".trim(),ke="\n#version 300 es\n\nprecision lowp float;\n\nuniform vec3 u_lightPos;\n\nflat in vec4 v_color;\nin vec3 v_worldSpacePosition;\nin vec3 v_worldSpaceNormal;\n\nout vec4 o_color;\n\n//\n//\n//\n\nconst float k_ambiantCoef = 0.1;\n\nconst vec3 k_specColor = vec3(1.0, 1.0, 1.0);\n\nvec3 _getLightColor(vec4 currentColor)\n{\n  vec3 normal = normalize(v_worldSpaceNormal);\n  vec3 lightDir = normalize(u_lightPos - v_worldSpacePosition);\n\n  float diffuseCoef = max(dot(lightDir, v_worldSpaceNormal.xyz), 0.0);\n  float specularCoef = 0.0;\n\n  // if (diffuseCoef > 0.0 && v_skipSpecular < 0.5)\n  // {\n  //   // specular\n\n  //   vec3 reflectDir = reflect(-lightDir, normal);\n  //   vec3 viewDir = normalize(u_lightPos - v_worldSpacePosition);\n\n  //   float specAngle = max(dot(reflectDir, viewDir), 0.0);\n  //   specularCoef = pow(specAngle, 32.0);\n  // }\n\n  vec3 diffuseColor = currentColor.rgb * (k_ambiantCoef + diffuseCoef);\n  vec3 specularColor = k_specColor * specularCoef * currentColor.a;\n\n  return diffuseColor + specularColor;\n}\n\n//\n//\n//\n\nvoid main(void)\n{\n  o_color = vec4(_getLightColor(v_color), 1.0);\n}\n".trim(),Ie="\n#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\n\nin vec3 a_vertex_position;\n\nin vec3 a_offset_center;\nin vec4 a_offset_orientation;\nin vec3 a_offset_color;\nin vec3 a_offset_scale;\n\nflat out vec4 v_color;\n\nvec3 apply_quat_to_vec3(vec3 position, vec4 q)\n{\n  vec3 v = position.xyz;\n  return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\nvoid main(void)\n{\n\tvec3 worldSpacePosition = a_offset_center + apply_quat_to_vec3(a_vertex_position * a_offset_scale, a_offset_orientation);\n\n  gl_Position = u_composedMatrix * vec4(worldSpacePosition, 1.0);\n\n  v_color = vec4(a_offset_color, 1.0);\n}\n".trim(),ze="\n#version 300 es\n\nprecision lowp float;\n\nflat in vec4 v_color;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  o_color = vec4(v_color.rbg, 1.0);\n}\n".trim();class Fe{constructor(e,t){this._width=0,this._height=0,this._frameBuffer=new me,this._renderBuffer=new Se,this._colorTextures=[],this._currentIndex=0,this._colorTextures.push(new Ce),this._colorTextures.push(new Ce),this._colorTextures.forEach((e=>e.initialize())),this.resize(e,t)}resize(e,t){this._width=e,this._height=t,this._renderBuffer.bind((e=>{e.setSize("depth32f",this._width,this._height)})),this._colorTextures.forEach((e=>{e.bind((e=>{e.allocate(this._width,this._height)}))})),this._frameBuffer.bind((e=>{this._renderBuffer.bind((t=>{e.attachRenderBuffer(t)}))}))}captureScene(e){this._frameBuffer.bind((t=>{this._colorTextures[this._currentIndex].bind((e=>{t.attachTexture(e)}));const i=ce.getContext();i.viewport(0,0,this._width,this._height),i.clearColor(0,0,0,0),e()})),this._currentIndex=(this._currentIndex+1)%this._colorTextures.length}get colorTexture(){return this._colorTextures[this._currentIndex]}}var Be="\n#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\n\nin vec3  a_vertex_position;\nin vec2  a_vertex_texCoord;\n\nout vec2 v_texCoord;\n\nvoid main(void)\n{\n  v_texCoord = a_vertex_texCoord;\n  gl_Position = u_composedMatrix * vec4(a_vertex_position, 1.0);\n}\n\n".trim(),Le="\n#version 300 es\n\nprecision highp float;\n\nuniform sampler2D u_texture;\n\nin vec2 v_texCoord;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  o_color = texture(u_texture, v_texCoord);\n}\n".trim();class Ne{constructor(e,t){this._width=0,this._height=0,this._shader=new Ee("RenderHudTexture",{vertexSrc:Be,fragmentSrc:Le,attributes:["a_vertex_position","a_vertex_texCoord"],uniforms:["u_composedMatrix","u_texture"]});const i=new Te;i.reset().setPrimitiveType("triangleStrip").addVbo().addVboAttribute("a_vertex_position","vec3f").addVboAttribute("a_vertex_texCoord","vec2f"),this._geometry=new ye(this._shader,i.getDef()),this.resize(e,t)}resize(e,t){this._width=e,this._height=t;const i=[{pos:[0*this._width,0*this._height,-1],tex:[0,0]},{pos:[1*this._width,0*this._height,-1],tex:[1,0]},{pos:[0*this._width,1*this._height,-1],tex:[0,1]},{pos:[1*this._width,1*this._height,-1],tex:[1,1]}].map((e=>[e.pos[0],e.pos[1],e.pos[2],e.tex[0],e.tex[1]])).flat();this._geometry.allocateBuffer(0,i,i.length),this._geometry.setPrimitiveCount(i.length/5)}flush(e,t){this._shader.bind((i=>{i.setMatrix4Uniform("u_composedMatrix",e),i.setTextureUniform("u_texture",t,0),this._geometry.render()}))}}class Ue{constructor(e,t){this._sceneCapturer=new Fe(e,t),this._renderHudTexture=new Ne(e,t)}resize(e,t){this._sceneCapturer.resize(e,t),this._renderHudTexture.resize(e,t)}captureScene(e){this._sceneCapturer.captureScene(e)}renderHud(e){this._renderHudTexture.flush(e,this._sceneCapturer.colorTexture)}}var Ve="\n#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\n\nin vec3 a_vertex_position;\nin vec4 a_vertex_color;\n\nflat out vec4 v_color;\n\nvoid main(void)\n{\n  gl_Position = u_composedMatrix * vec4(a_vertex_position, 1.0);\n\n  v_color = a_vertex_color;\n}\n".trim(),Ge="\n#version 300 es\n\nprecision lowp float;\n\nflat in vec4 v_color;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  o_color = v_color;\n}\n".trim();class Oe{constructor(e,t){this._buffer=new Float32Array(14336),this._currentSize=0,this._shader=e;const i=Object.assign(Object.assign({},t),{primitiveType:xe.lines});this._geometry=new ye(e,i)}pushLine(e,t,i){if(this._currentSize+14>=this._buffer.length){if(!this._shader.isBound())return;this.flush()}const r=4==i.length?i[3]:1;this._buffer[this._currentSize+0]=e[0],this._buffer[this._currentSize+1]=e[1],this._buffer[this._currentSize+2]=e[2],this._buffer[this._currentSize+3]=i[0],this._buffer[this._currentSize+4]=i[1],this._buffer[this._currentSize+5]=i[2],this._buffer[this._currentSize+6]=r,this._currentSize+=7,this._buffer[this._currentSize+0]=t[0],this._buffer[this._currentSize+1]=t[1],this._buffer[this._currentSize+2]=t[2],this._buffer[this._currentSize+3]=i[0],this._buffer[this._currentSize+4]=i[1],this._buffer[this._currentSize+5]=i[2],this._buffer[this._currentSize+6]=r,this._currentSize+=7}canRender(){return this._currentSize>0}flush(){this.canRender()&&(this._geometry.allocateBuffer(0,this._buffer,this._currentSize),this._geometry.setPrimitiveCount(this._currentSize/7),this._geometry.render(),this.clear())}clear(){this._currentSize=0}}class We{constructor(e,t){this._buffer=new Float32Array(7168),this._currentSize=0,this._shader=e;const i=Object.assign(Object.assign({},t),{primitiveType:xe.triangles});this._geometry=new ye(e,i)}pushTriangle(e,t,i,r){if(this._currentSize+42>=this._buffer.length){if(!this._shader.isBound())return;this.flush()}const n=4==r.length?r[3]:1;this._buffer[this._currentSize+0]=e[0],this._buffer[this._currentSize+1]=e[1],this._buffer[this._currentSize+2]=e[2],this._buffer[this._currentSize+3]=r[0],this._buffer[this._currentSize+4]=r[1],this._buffer[this._currentSize+5]=r[2],this._buffer[this._currentSize+6]=n,this._currentSize+=7,this._buffer[this._currentSize+0]=t[0],this._buffer[this._currentSize+1]=t[1],this._buffer[this._currentSize+2]=t[2],this._buffer[this._currentSize+3]=r[0],this._buffer[this._currentSize+4]=r[1],this._buffer[this._currentSize+5]=r[2],this._buffer[this._currentSize+6]=n,this._currentSize+=7,this._buffer[this._currentSize+0]=i[0],this._buffer[this._currentSize+1]=i[1],this._buffer[this._currentSize+2]=i[2],this._buffer[this._currentSize+3]=r[0],this._buffer[this._currentSize+4]=r[1],this._buffer[this._currentSize+5]=r[2],this._buffer[this._currentSize+6]=n,this._currentSize+=7}pushLine(e,t,i,r){if(this._currentSize+42>=this._buffer.length)return;const n=t[0]-e[0],s=t[1]-e[1],a=Math.atan2(s,n)+.5*Math.PI,o=Math.cos(a)*i*.5,c=Math.sin(a)*i*.5;this.pushTriangle([e[0]-o,e[1]-c,e[2]],[t[0]-o,t[1]-c,t[2]],[t[0]+o,t[1]+c,t[2]],r),this.pushTriangle([e[0]-o,e[1]-c,e[2]],[t[0]+o,t[1]+c,t[2]],[e[0]+o,e[1]+c,e[2]],r)}pushRotatedLine(e,t,i,r,n){this.pushLine([e[0]-i*Math.cos(t),e[1]-i*Math.sin(t),e[2]],[e[0]+i*Math.cos(t),e[1]+i*Math.sin(t),e[2]],r,n)}pushOriginBoundRectangle(e,t,i){if(this._currentSize+42>=this._buffer.length)return;const r=[e[0]+t[0],e[1]+t[1]];this.pushTriangle([e[0],e[1],e[2]],[r[0],r[1],e[2]],[e[0],r[1],e[2]],i),this.pushTriangle([e[0],e[1],e[2]],[r[0],e[1],e[2]],[r[0],r[1],e[2]],i)}pushCenteredRectangle(e,t,i){const r=[e[0]-.5*t[0],e[1]-.5*t[1],e[2]];this.pushOriginBoundRectangle(r,t,i)}canRender(){return this._currentSize>0}flush(){this.canRender()&&(this._geometry.allocateBuffer(0,this._buffer,this._currentSize),this._geometry.setPrimitiveCount(this._currentSize/7),this._geometry.render(),this.clear())}clear(){this._currentSize=0}}var Xe="\n#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\n\nin vec2 a_vertex_position;\nin vec2 a_vertex_texCoord;\nin vec3 a_offset_position;\nin vec2 a_offset_texCoord;\nin vec3 a_offset_color;\nin float a_offset_scale;\n\nout vec2 v_texCoord;\nflat out vec3 v_color;\n\nvoid main(void)\n{\n  vec3 position = vec3(a_vertex_position, 0.0) * a_offset_scale + a_offset_position;\n\n  gl_Position = u_composedMatrix * vec4(position, 1.0);\n\n  v_texCoord = a_vertex_texCoord + a_offset_texCoord;\n  v_color = a_offset_color;\n}\n".trim(),He="\n#version 300 es\n\nprecision mediump float;\n\nuniform sampler2D u_texture;\n\nin vec2 v_texCoord;\nflat in vec3 v_color;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  vec4 textureColor = texture(u_texture, v_texCoord);\n  if (textureColor.a < 0.5)\n  {\n    discard;\n  }\n  else\n  {\n    o_color = vec4(v_color, textureColor.a);\n  }\n}\n".trim();const Ye=[16,6],$e=[1/Ye[0],1/Ye[1]],qe=[.2,.2,.2],je=[.2,.6,.2],Ke=(e,t,i)=>{const{center:r}=e;t.pushCenteredRectangle(M(r[0],r[1],-.3),e.size,[0,0,0]),t.pushCenteredRectangle(M(r[0],r[1],-.2),[e.size[0]-2,e.size[1]-2],e.color),e.text&&i.setTextScale(16).setTextAlign("centered","centered").pushText(e.text,r).setTextAlign("left","top"),e.lines&&e.lines.forEach((e=>{t.pushThickLine([r[0]+e.a[0],r[1]+e.a[1],0],[r[0]+e.b[0],r[1]+e.b[1],0],e.thickness,e.color)}))},Ze=(e,t,i)=>{Ke({center:[e[0],e[1]],size:[40,40],text:"A\nQ",color:o.isPressed("A","Q")?je:qe},t,i),Ke({center:[e[0]+45,e[1]],size:[40,40],text:"S",color:o.isPressed("S")?je:qe},t,i),Ke({center:[e[0]+45,e[1]+45],size:[40,40],text:"W\nZ",color:o.isPressed("W","Z")?je:qe},t,i),Ke({center:[e[0]+90,e[1]],size:[40,40],text:"D",color:o.isPressed("D")?je:qe},t,i)},Qe=(e,t,i)=>{Ke({center:[e[0],e[1]],size:[40,40],lines:[{a:[15,0],b:[-8,0],thickness:6,color:[1,1,1]},{a:[0,10],b:[-12,-2],thickness:6,color:[1,1,1]},{a:[0,-10],b:[-12,2],thickness:6,color:[1,1,1]}],color:o.isPressed("ArrowLeft")?je:qe},t,i),Ke({center:[e[0]+45,e[1]],size:[40,40],lines:[{a:[0,15],b:[0,-8],thickness:6,color:[1,1,1]},{a:[10,0],b:[-2,-12],thickness:6,color:[1,1,1]},{a:[-10,0],b:[2,-12],thickness:6,color:[1,1,1]}],color:o.isPressed("ArrowDown")?je:qe},t,i),Ke({center:[e[0]+45,e[1]+45],size:[40,40],lines:[{a:[0,-15],b:[0,8],thickness:6,color:[1,1,1]},{a:[10,0],b:[-2,12],thickness:6,color:[1,1,1]},{a:[-10,0],b:[2,12],thickness:6,color:[1,1,1]}],color:o.isPressed("ArrowUp")?je:qe},t,i),Ke({center:[e[0]+90,e[1]],size:[40,40],lines:[{a:[-15,0],b:[8,0],thickness:6,color:[1,1,1]},{a:[0,10],b:[12,-2],thickness:6,color:[1,1,1]},{a:[0,-10],b:[12,2],thickness:6,color:[1,1,1]}],color:o.isPressed("ArrowRight")?je:qe},t,i)},Je=(e,t,i,r)=>{g.isSupported(e)?Ke({center:[t[0]+115,t[1]],size:[230,60],text:"Touch Events\nSupported\n(double tap)",color:[0,.5,0]},i,r):Ke({center:[t[0]+115,t[1]],size:[230,60],text:"Touch Events\nNot Supported",color:[.5,0,0]},i,r),m.canBePointerLocked(e)?Ke({center:[t[0]+105,t[1]+70],size:[210,60],text:"Mouse\nSupported",color:[0,.5,0]},i,r):Ke({center:[t[0]+105,t[1]+70],size:[210,60],text:"Mouse Events\nNot Supported",color:[.5,0,0]},i,r)},et=(e,t,i,r,n,s=!1)=>{const a=5*Math.ceil(i.maxDelta/5);{r.pushOriginBoundRectangle(e,t,[0,0,0,.5]);const i=[[e[0]+0*t[0],e[1]+0*t[1],0],[e[0]+1*t[0],e[1]+0*t[1],0],[e[0]+1*t[0],e[1]+1*t[1],0],[e[0]+0*t[0],e[1]+1*t[1],0]];r.pushLine(i[0],i[1],[1,1,1]),r.pushLine(i[1],i[2],[1,1,1]),r.pushLine(i[2],i[3],[1,1,1]),r.pushLine(i[3],i[0],[1,1,1])}for(let i=5;i<a;i+=5){const n=i/a,s=[e[0]+0,e[1]+t[1]*n,0],o=[e[0]+t[0],e[1]+t[1]*n,0];r.pushLine(s,o,[.5,.5,.5])}if(i.framesDelta.length>=2){const n=t[0]/i.framesDelta.length;let s=i.framesDelta[0],o=0,c=t[1]*s/a;for(let d=1;d<i.framesDelta.length;++d){const h=i.framesDelta[d],f=d*n,l=t[1]*h/a,u=[e[0]+o,e[1]+c,0],_=[e[0]+f,e[1]+l,0];r.pushLine(u,_,[1,1,1]),s=h,o=f,c=l}}{const r=14,a=.5*r,o=i.averageDelta,c=i.maxDelta,d=i.minDelta;let h=`~${o.toFixed(0)}ms`,f=`<${c}ms`,l=`>${d}ms`;if(!0===s){const e=e=>e<999?e.toFixed(0):"???";h+=`\n~${e(1e3/o)}fps`,f+=`\n<${e(1e3/c)}fps`,l+=`\n>${e(1e3/d)}fps`}n.setTextScale(r).setTextAlign("left","top").setTextColor(1,1,.75).pushText(h,[e[0]+7,e[1]-8]).setTextAlign("left","centered").setTextColor(1,.75,.75).pushText(f,[e[0]+t[0]+a,e[1]+t[1]-1*a]).setTextColor(.75,1,.75).pushText(l,[e[0]+t[0]+a,e[1]+1*a]).setTextColor(1,1,1)}};var tt=Object.freeze({__proto__:null,addArrowStrokesWidgets:Qe,addKeyStrokesWidgets:Ze,addKeysTouchesWidgets:Je,renderFpsMeter:et}),it=Object.freeze({__proto__:null,GeometryRenderer:class{constructor(){this._buffer=new Float32Array(14336),this._currentSize=0,this._shader=new Ee("GeometryRenderer",{vertexSrc:Me,fragmentSrc:ke,attributes:["a_vertex_position","a_vertex_normal","a_offset_center","a_offset_orientation","a_offset_color","a_offset_scale"],uniforms:["u_composedMatrix","u_lightPos"]});const e=new Te;e.reset().setPrimitiveType("triangles").addVbo().addVboAttribute("a_vertex_position","vec3f").addVboAttribute("a_vertex_normal","vec3f").addVbo().setVboAsStreaming().setVboAsInstanced().addVboAttribute("a_offset_center","vec3f").addVboAttribute("a_offset_orientation","vec4f").addVboAttribute("a_offset_color","vec3f").addVboAttribute("a_offset_scale","vec3f"),this._geometry=new ye(this._shader,e.getDef()),this._geometry.setFloatBufferSize(1,14336)}setGeometryVertices(e){const t=new Float32Array([...e.map((e=>[...e.pos,...e.normal])).flat()]);this._geometry.allocateBuffer(0,t,t.length),this._geometry.setPrimitiveCount(t.length/6)}push(e,t,i,r){if(this._currentSize+13>=this._buffer.length){if(!this._shader.isBound())return;this._flush()}this._buffer[this._currentSize++]=e[0],this._buffer[this._currentSize++]=e[1],this._buffer[this._currentSize++]=e[2],this._buffer[this._currentSize++]=t[0],this._buffer[this._currentSize++]=t[1],this._buffer[this._currentSize++]=t[2],this._buffer[this._currentSize++]=t[3],this._buffer[this._currentSize++]=i[0],this._buffer[this._currentSize++]=i[1],this._buffer[this._currentSize++]=i[2],this._buffer[this._currentSize++]=r[0],this._buffer[this._currentSize++]=r[1],this._buffer[this._currentSize++]=r[2]}flush(e){this.canRender()&&this._shader.bind((t=>{t.setMatrix4Uniform("u_composedMatrix",e.getComposedMatrix());const i=e.getEye();t.setFloat3Uniform("u_lightPos",i[0],i[1],i[2]),this._flush()}))}safeRender(e,t){this._shader.bind((i=>{i.setMatrix4Uniform("u_composedMatrix",e.getComposedMatrix());const r=e.getEye();i.setFloat3Uniform("u_lightPos",r[0],r[1],r[2]),t(),this._flush()}))}_flush(){this._geometry.updateBuffer(1,this._buffer,this._currentSize,0),this._geometry.setInstancedCount(this._currentSize/13),this._geometry.render(),this.clear()}canRender(){return this._currentSize>0}clear(){this._currentSize=0}},GeometryRendererFlat:class{constructor(){this._buffer=new Float32Array(14336),this._currentSize=0,this._shader=new Ee("GeometryRendererFlat",{vertexSrc:Ie,fragmentSrc:ze,attributes:["a_vertex_position","a_offset_center","a_offset_orientation","a_offset_color","a_offset_scale"],uniforms:["u_composedMatrix"]});const e=new Te;e.reset().setPrimitiveType("triangles").addVbo().addVboAttribute("a_vertex_position","vec3f").addVbo().setVboAsStreaming().setVboAsInstanced().addVboAttribute("a_offset_center","vec3f").addVboAttribute("a_offset_orientation","vec4f").addVboAttribute("a_offset_color","vec3f").addVboAttribute("a_offset_scale","vec3f"),this._geometry=new ye(this._shader,e.getDef()),this._geometry.setFloatBufferSize(1,14336)}setGeometryVertices(e){const t=new Float32Array([...e.map((e=>[...e.pos])).flat()]);this._geometry.allocateBuffer(0,t,t.length),this._geometry.setPrimitiveCount(t.length/3)}push(e,t,i,r){if(this._currentSize+13>=this._buffer.length){if(!this._shader.isBound())return;this._flush()}this._buffer[this._currentSize++]=e[0],this._buffer[this._currentSize++]=e[1],this._buffer[this._currentSize++]=e[2],this._buffer[this._currentSize++]=t[0],this._buffer[this._currentSize++]=t[1],this._buffer[this._currentSize++]=t[2],this._buffer[this._currentSize++]=t[3],this._buffer[this._currentSize++]=i[0],this._buffer[this._currentSize++]=i[1],this._buffer[this._currentSize++]=i[2],this._buffer[this._currentSize++]=r[0],this._buffer[this._currentSize++]=r[1],this._buffer[this._currentSize++]=r[2]}flush(e){this.canRender()&&this._shader.bind((t=>{t.setMatrix4Uniform("u_composedMatrix",e.getComposedMatrix()),this._flush()}))}safeRender(e,t){this._shader.bind((i=>{i.setMatrix4Uniform("u_composedMatrix",e.getComposedMatrix()),t(),this._flush()}))}_flush(){this._geometry.updateBuffer(1,this._buffer,this._currentSize,0),this._geometry.setInstancedCount(this._currentSize/13),this._geometry.render(),this.clear()}canRender(){return this._currentSize>0}clear(){this._currentSize=0}},MultiBuffersRendering:Ue,StackRenderers:class{constructor(){this._shader=new Ee("StackRenderers",{vertexSrc:Ve,fragmentSrc:Ge,attributes:["a_vertex_position","a_vertex_color"],uniforms:["u_composedMatrix"]});const e=new Te;e.reset().setPrimitiveType("lines").addVbo().setVboAsDynamic().addVboAttribute("a_vertex_position","vec3f").addVboAttribute("a_vertex_color","vec4f"),this._wireFramesStackRenderer=new Oe(this._shader,e.getDef()),this._trianglesStackRenderer=new We(this._shader,e.getDef())}pushLine(e,t,i){this._wireFramesStackRenderer.pushLine(e,t,i)}pushCross(e,t,i){const r=[[e[0]-t,e[1],e[2]],[e[0]+t,e[1],e[2]],[e[0],e[1]-t,e[2]],[e[0],e[1]+t,e[2]],[e[0],e[1],e[2]-t],[e[0],e[1],e[2]+t]],n=[0,1,2,3,4,5];for(let e=0;e<n.length;e+=2){const t=r[e+0],n=r[e+1];this._wireFramesStackRenderer.pushLine(t,n,i)}}pushThickLine(e,t,i,r){this._trianglesStackRenderer.pushLine(e,t,i,r)}pushRotatedLine(e,t,i,r,n){this._trianglesStackRenderer.pushRotatedLine(e,t,i,r,n)}pushOriginBoundRectangle(e,t,i){this._trianglesStackRenderer.pushOriginBoundRectangle(e,t,i)}pushCenteredRectangle(e,t,i){this._trianglesStackRenderer.pushCenteredRectangle(e,t,i)}pushTriangle(e,t,i,r){this._trianglesStackRenderer.pushTriangle(e,t,i,r)}pushQuad(e,t,i){this.pushTriangle([e[0]+0*t[0],e[1]+0*t[1],e[2]],[e[0]+1*t[0],e[1]+1*t[1],e[2]],[e[0]+1*t[0],e[1]+0*t[1],e[2]],i),this.pushTriangle([e[0]+0*t[0],e[1]+0*t[1],e[2]],[e[0]+1*t[0],e[1]+1*t[1],e[2]],[e[0]+0*t[0],e[1]+1*t[1],e[2]],i)}flush(e){(this._wireFramesStackRenderer.canRender()||this._trianglesStackRenderer.canRender())&&this._shader.bind((t=>{t.setMatrix4Uniform("u_composedMatrix",e),this._wireFramesStackRenderer.flush(),this._trianglesStackRenderer.flush()}))}safeRender(e,t){this._shader.bind((i=>{i.setMatrix4Uniform("u_composedMatrix",e),t(),this._wireFramesStackRenderer.flush(),this._trianglesStackRenderer.flush()}))}clear(){this._wireFramesStackRenderer.clear(),this._trianglesStackRenderer.clear()}},TextRenderer:class{constructor(){this._texture=new Ce,this._buffer=new Float32Array(36864),this._currentSize=0,this._textScale=14,this._textColor=[1,1,1],this._horizontalTextAlign="left",this._verticalTextAlign="top",this._shader=new Ee("TextRenderer",{vertexSrc:Xe,fragmentSrc:He,attributes:["a_vertex_position","a_vertex_texCoord","a_offset_position","a_offset_texCoord","a_offset_color","a_offset_scale"],uniforms:["u_composedMatrix","u_texture"]});const e=new Te;e.reset().setPrimitiveType("triangles").addVbo().addVboAttribute("a_vertex_position","vec2f").addVboAttribute("a_vertex_texCoord","vec2f").setStride(16).addVbo().setVboAsDynamic().setVboAsInstanced().addVboAttribute("a_offset_position","vec3f").addVboAttribute("a_offset_texCoord","vec2f").addVboAttribute("a_offset_color","vec3f").addVboAttribute("a_offset_scale","float").setStride(36),this._geometry=new ye(this._shader,e.getDef());const t=[{position:[.5,-.5],texCoord:[1*$e[0],1*$e[1]]},{position:[-.5,-.5],texCoord:[0*$e[0],1*$e[1]]},{position:[.5,.5],texCoord:[1*$e[0],0*$e[1]]},{position:[-.5,.5],texCoord:[0*$e[0],0*$e[1]]}],i=[1,0,2,1,2,3],r=[];for(const e of i){const i=t[e];r.push(i.position[0],i.position[1],i.texCoord[0],i.texCoord[1])}this._geometry.allocateBuffer(0,r,r.length),this._geometry.setPrimitiveCount(r.length/4),this._texCoordMap=new Map([[" ",[0*$e[0],0*$e[1]]],["!",[1*$e[0],0*$e[1]]],['"',[2*$e[0],0*$e[1]]],["#",[3*$e[0],0*$e[1]]],["$",[4*$e[0],0*$e[1]]],["%",[5*$e[0],0*$e[1]]],["&",[6*$e[0],0*$e[1]]],["'",[7*$e[0],0*$e[1]]],["(",[8*$e[0],0*$e[1]]],[")",[9*$e[0],0*$e[1]]],["*",[10*$e[0],0*$e[1]]],["+",[11*$e[0],0*$e[1]]],[",",[12*$e[0],0*$e[1]]],["-",[13*$e[0],0*$e[1]]],[".",[14*$e[0],0*$e[1]]],["/",[15*$e[0],0*$e[1]]],["0",[0*$e[0],1*$e[1]]],["1",[1*$e[0],1*$e[1]]],["2",[2*$e[0],1*$e[1]]],["3",[3*$e[0],1*$e[1]]],["4",[4*$e[0],1*$e[1]]],["5",[5*$e[0],1*$e[1]]],["6",[6*$e[0],1*$e[1]]],["7",[7*$e[0],1*$e[1]]],["8",[8*$e[0],1*$e[1]]],["9",[9*$e[0],1*$e[1]]],[":",[10*$e[0],1*$e[1]]],[";",[11*$e[0],1*$e[1]]],["<",[12*$e[0],1*$e[1]]],["=",[13*$e[0],1*$e[1]]],[">",[14*$e[0],1*$e[1]]],["?",[15*$e[0],1*$e[1]]],["@",[0*$e[0],2*$e[1]]],["A",[1*$e[0],2*$e[1]]],["B",[2*$e[0],2*$e[1]]],["C",[3*$e[0],2*$e[1]]],["D",[4*$e[0],2*$e[1]]],["E",[5*$e[0],2*$e[1]]],["F",[6*$e[0],2*$e[1]]],["G",[7*$e[0],2*$e[1]]],["H",[8*$e[0],2*$e[1]]],["I",[9*$e[0],2*$e[1]]],["J",[10*$e[0],2*$e[1]]],["K",[11*$e[0],2*$e[1]]],["L",[12*$e[0],2*$e[1]]],["M",[13*$e[0],2*$e[1]]],["N",[14*$e[0],2*$e[1]]],["O",[15*$e[0],2*$e[1]]],["P",[0*$e[0],3*$e[1]]],["Q",[1*$e[0],3*$e[1]]],["R",[2*$e[0],3*$e[1]]],["S",[3*$e[0],3*$e[1]]],["T",[4*$e[0],3*$e[1]]],["U",[5*$e[0],3*$e[1]]],["V",[6*$e[0],3*$e[1]]],["W",[7*$e[0],3*$e[1]]],["X",[8*$e[0],3*$e[1]]],["Y",[9*$e[0],3*$e[1]]],["Z",[10*$e[0],3*$e[1]]],["[",[11*$e[0],3*$e[1]]],["\\",[12*$e[0],3*$e[1]]],["]",[13*$e[0],3*$e[1]]],["^",[14*$e[0],3*$e[1]]],["_",[15*$e[0],3*$e[1]]],["`",[0*$e[0],4*$e[1]]],["a",[1*$e[0],4*$e[1]]],["b",[2*$e[0],4*$e[1]]],["c",[3*$e[0],4*$e[1]]],["d",[4*$e[0],4*$e[1]]],["e",[5*$e[0],4*$e[1]]],["f",[6*$e[0],4*$e[1]]],["g",[7*$e[0],4*$e[1]]],["h",[8*$e[0],4*$e[1]]],["i",[9*$e[0],4*$e[1]]],["j",[10*$e[0],4*$e[1]]],["k",[11*$e[0],4*$e[1]]],["l",[12*$e[0],4*$e[1]]],["m",[13*$e[0],4*$e[1]]],["n",[14*$e[0],4*$e[1]]],["o",[15*$e[0],4*$e[1]]],["p",[0*$e[0],5*$e[1]]],["q",[1*$e[0],5*$e[1]]],["r",[2*$e[0],5*$e[1]]],["s",[3*$e[0],5*$e[1]]],["t",[4*$e[0],5*$e[1]]],["u",[5*$e[0],5*$e[1]]],["v",[6*$e[0],5*$e[1]]],["w",[7*$e[0],5*$e[1]]],["x",[8*$e[0],5*$e[1]]],["y",[9*$e[0],5*$e[1]]],["z",[10*$e[0],5*$e[1]]],["{",[11*$e[0],5*$e[1]]],["|",[12*$e[0],5*$e[1]]],["}",[13*$e[0],5*$e[1]]],["~",[14*$e[0],5*$e[1]]]]);const n=new Uint8Array(98304);{let e=0;for(let t=0;t<5818;t+=2){let i=parseInt(`${"7e7e28fd03fd07fe04fe0aff02ff7e4dfd0cfd03fd07fe04fe0aff02ff1afc0dfd10fc08fc0ffe55ff15fb0bfd03fd07fe04fe08f707fd04ff07fe02fe0cfd0ffd0cfd0aff03fe03ff0afe44fe15fb0bfd03fd04f204f607fd03fe07fe02fe0cfd0efd0efd0aff02fe02ff0bfe43fd15fb0cfe03fe05f204fe01ff02ff0afd02fd07fe02fe0bfd0efd10fd0afa0cfe42fd16fb1bfe04fe07fe01ff02ff0efd09fc1cfd12fd09fa0cfe41fd17fb1bfe04fe07f70bfd0afc04ff17fd12fd06f405f616f61cfd19fd1cfe04fe08f709fd0bfb02fe17fd12fd06f405f616f61bfd1afd1cfe04fe0aff02ff01fe08fd0bfe02fa17fd12fd09fa0cfe3efd37f207ff02ff01fe07fd02fd07fe03fc19fd10fd0afa0cfe3dfd38f204f607fe03fd07fe03fd1bfd0efd0aff02fe02ff0bfe0cfd1dfd0dfd1dfd1cfe04fe07f708ff04fd07fe02fb1bfd0cfd0aff03fe03ff0afe0cfd1dfd0cfd1efd1cfe04fe0aff02ff1afb02fe1bfc08fc0ffe1cfd1dfd0bfd1ffd1cfe04fe0aff02ff7afd7e7e7e7e7e7e0efd17fd10fc0af80bfe0bf909f90dfd08f609fb08f506f808f82cfd19fd0df807fd04fd0afe0afd03fd07fd03fd0bfc08fd0ffd0bfd05fd05fd04fd06fd04fd2afd1bfd0bfc02fc06fd03fc09fd0afd04fd06fd04fd09fb08fd0efd0cfd05fd05fd04fd06fd04fd09fd0cfd0efd1dfd0afe05fd06fd02fb06fa11fd0dfd08fe01fd08fd0dfd0dfd05fd05fd04fd06fd04fd09fd0cfd0dfd0af409fd10fd06fd02fb06fa10fd0dfd08fe02fd08fd0dfd15fd05fb02fd06fd04fd09fd0cfd0cfd0bf40afd0efd07fd01fe01fd09fd0ffd0bfb08fe03fd08f808f70efd08fa08f626fd23fd0cfd08fd01fe01fd09fd0efd0cfb08f606f707f60cfd09fa09f726fd23fd0bfd09fb02fd09fd0dfd10fd07f60cfc06fd04fd0bfd08fd02fb0dfd09fd0cfd0cfd0bf40afd0cfd09fb02fd09fd0cfd12fd0bfd0ffd06fd04fd0afd09fd04fd0dfd09fd0cfd0dfd0af409fd19fc03fd09fd0bfd03fd06fd04fd0bfd08fd04fd06fd04fd09fd0afd04fd0cfd0afd0cfd0efd1dfd1afd04fd09fd0afd04fd06fd03fd0cfd08fd03fd07fd04fd09fd0afd04fd0bfd19fd10fd1bfd0ffd0af807f707f607f90bf907f909f80afd0bf809fb2efd19fd10fd7e51fd17fd11fd7e7e7e7e13f87e78fd05fd08fc09f709f907f808f606f608f907fd03fd07f90df905fc03fd06fb0bfd05fd05fd05fd08fb08fd05fd07fa09fd03fd07fd03fd07fd02fd08fd04fe07fd04fe07fd03fd06fd03fd09fd11fd08fd03fd07fd0cfc03fc05fd05fd07fd01fd07fd05fd06fd02fd08fd03fd06fd04fd07fd03fd07fd05ff07fd05ff06fd04fd06fd03fd09fd11fd08fd02fd08fd0cfb01fb05fc04fd06fd03fd06fd05fd05fd04fd07fd03fd06fd0efd03fd07fd0dfd0cfd04fd06fd03fd09fd11fd08fd01fd09fd0cf505fb03fd05fd05fd05fd02fa05fd04fd07fd03fd06fd0efd03fd07fd03fe08fd03fe07fd0dfd03fd09fd11fd08fa0afd0cf505fa02fd05fd05fd05fd02fa05fd04fd07f807fd0efd03fd07f808f807fd0df709fd11fd08fb0bfd0cfd01fd01fd05fd01fd01fd05fd05fd05fd02fa05fd04fd07f807fd0efd03fd07f808f807fd0df709fd11fd08fb0bfd0cfd02ff02fd05fd02fa05fd05fd05fd02fa05f607fd03fd06fd0efd03fd07fd03fe08fd03fe07fd02fb06fd03fd09fd0bfd03fd08fa0afd0cfd05fd05fd03fb05fd05fd05fd0dfd04fd07fd03fd06fd0efd03fd07fd0dfd0cfd04fd06fd03fd09fd0bfd03fd08fd01fd09fd05ff06fd05fd05fd04fc05fd05fd05fd0dfd04fd07fd03fd06fd04fd07fd03fd07fd05ff07fd0cfd04fd06fd03fd09fd0bfd03fd08fd02fd08fd04fe06fd05fd05fd05fd06fd03fd06fd0dfd04fd07fd03fd07fd03fd07fd02fd08fd04fe07fd0dfd03fd06fd03fd09fd0bfd03fd08fd03fd07fd03fd06fd05fd05fd05fd07fd01fd07fd0dfd04fd06f709f907f808f606fb0df806fd03fd07f90af908fc03fd06f606fd05fd05fd05fd08fb0af87e7e7e7e7e7e7e68fe1af70afb08f708f807f505fd03fd07fd03fd07fd05fd05fd03fd07fd03fd07f608f907ff11f90afc1afd03fd07fc01fc07fd03fd06fd04fd06fe02fd02fe05fd03fd07fd03fd07fd05fd05fd03fd07fd03fd07fd04fd08fd0bfe14fd09fa19fd03fd07fd03fd07fd03fd06fd04fd06ff03fd03ff05fd03fd07fd03fd07fd05fd05fd03fd07fd03fd07fe05fd08fd0bfd13fd08fd02fd18fd03fd06fd05fd06fd03fd06fd04fd0afd09fd03fd07fd03fd07fd05fd06fd01fd08fd03fd07ff05fd09fd0cfd12fd07fd04fd17fd03fd06fd05fd06fd03fd06fd11fd09fd03fd07fd03fd07fd05fd07fb09fd03fd0cfd0afd0dfd11fd28f807fd05fd06f808f90cfd09fd03fd07fd03fd07fd02ff02fd08fd0bfd01fd0cfd0bfd0efd10fd28f807fd05fd06f809f90bfd09fd03fd07fd03fd07fd02ff02fd08fd0cfb0cfd0cfd0ffd0ffd28fd0cfd03fb06fd02fd0efd0afd09fd03fd07fd03fd07fd02ff02fd07fb0cfd0cfd0dfd10fd0efd28fd0cfd02fa06fd03fd06fd04fd0afd09fd03fd07fd03fd08f707fd01fd0bfd0bfd05ff08fd11fd0dfd28fd0df707fd03fd06fd04fd0afd09fd03fd08fd01fd09fc01fc06fd03fd0afd0afd05fe08fd12fd0cfd28fd0df707fd03fd06fd04fd0afd09fd03fd09fb0bfd01fd07fd03fd0afd0afd04fd08fd13fd0bfd27fb12fd06fc03fd07f809f908f90bfd0cfd01fd07fd03fd08f908f608f910fd06f93cfa7e54f07e72f07e7e7e7e0bfd1dfc21fb19fb18fc10fd0ffd07fc0dfa39fd1efd22fd19fd01fd18fd10fd0ffd08fd10fd3bfd1cfd22fd19fd01fd18fd10fd0ffd08fd10fd3bfd1cfd22fd19fd1cfd2dfd10fd4af909f808f909f808f90afd0cfb02fe07fd01fc08fa0cfa08fd03fd0afd09f606f809f91efd08fd03fd06fd03fd07fd03fd07fd03fd07f808fd03fd08fc02fd0afd0ffd08fd02fd0bfd09fd02ff02fd05fd03fd07fd03fd1dfd08fd03fd06fd03fd07fd03fd07fd03fd07f808fd03fd08fc02fd0afd0ffd08fd01fd0cfd09fd02ff02fd05fd03fd07fd03fd18f808fd03fd06fd0dfd03fd07f709fd0bfd03fd08fd03fd0afd0ffd08fa0dfd09fd02ff02fd05fd03fd07fd03fd17fd03fd08fd03fd06fd0dfd03fd07fd0ffd0bfd03fd08fd03fd0afd0ffd08fd01fd0cfd09fd02ff02fd05fd03fd07fd03fd17fd03fd08fd03fd06fd03fd07fd03fd07fd03fd09fd0cf808fd03fd0afd0ffd08fd02fd0bfd09fd02ff02fd05fd03fd07fd03fd17fd03fd08fd03fd06fd03fd07fd03fd07fd03fd09fd0df908fd03fd0afd0ffd08fd03fd0afd09fd02ff02fd05fd03fd07fd03fd18fb02fe06fe02fb08f909fb02fe07f908f90ffd07fc03fd07f706fd03fd07fc03fd07f706fd05fd05fd03fd08f978fd03fd27fd03fd7e4af92afa7e7e7e7e7e7e18fa09fc09fa1efe4eff6efd0dfc0dfd1cfc4cfe6efd0dfc0dfd1bfa4afd6efd0dfc0dfd1afd02fd07fe02fb07fb02fe07fc02fd08f908f707fd03fd07fd03fd07fd05fd05fd02fd09fd03fd06f80afd0efc0efd08fb03fd05fd04fd07fd03fd05fd03fd09f706fd04fe09fd0bfd03fd07fd03fd07fd05fd05fd02fd09fd03fd06fe03fd08fd24fd05fd01fd02fd05fe06fe07fd03fd05fd03fd09fc02fd06fd04fe09fd0bfd03fd07fd03fd07fd05fd06fa0afd03fd06ff03fd09fd24fd05fd02fd01fd05fe06fe07fd03fd05fd03fd09fd0dfb0cfd0bfd03fd07fd03fd07fd02ff02fd07fc0bfd03fd09fd0cfd0efc0efd07fd03fb06fe06fe07fd03fd05fd03fd09fd0ffb0afd0bfd03fd07fd03fd07fd02ff02fd07fc0bfd03fd08fd0efd0dfc0dfd19fe06fe07fd03fd05fd03fd09fd0cfe04fd09fd01fd07fd03fd08fd01fd09fc01fc07fa0bf908fd03ff0bfd0dfc0dfd19fe06fe07f807f809fd0cfe04fd09fd01fd07fd03fd09fb0bfd01fd07fd02fd0bfb08fd03fe0bfd0dfc0dfd19f607fd11fd08fb0cf90bfb09fb02fe09fd0cfd01fd07fd02fd0dfd08f80cfa09fc09fa1af607fd11fd7cfd69fb0ffb77fa".substring(t,t+2)}000000`,16)>>24,r=0;i<0&&(i=-i,r=255);for(let t=0;t<i;++t)n[4*e+0]=r,n[4*e+1]=r,n[4*e+2]=r,n[4*e+3]=r,++e}}this._texture.initialize(),this._texture.bind((e=>{e.loadFromMemory(256,96,n)}))}setTextAlign(e,t){return this._horizontalTextAlign=e,this._verticalTextAlign=t,this}setTextScale(e){return this._textScale=e,this}setTextColor(e,t,i){return this._textColor[0]=e,this._textColor[1]=t,this._textColor[2]=i,this}pushText(e,t){if(0===e.length)return this;if(this._textScale<=0)return this;const i=[0];for(let t=0;t<e.length;++t)"\n"==e[t]?i.push(0):i[i.length-1]+=1;if(0===i.length)return this;let r=0;const n=[0,0],s=.5*this._textScale;switch(this._horizontalTextAlign){case"left":n[0]=t[0];break;case"centered":n[0]=t[0]-i[r]*s+s;break;case"right":n[0]=t[0]-i[r]*this._textScale+this._textScale}switch(this._verticalTextAlign){case"top":n[1]=t[1];break;case"centered":n[1]=t[1]+i.length*s-s;break;case"bottom":n[1]=t[1]-(i.length-1)*this._textScale}for(let a=0;a<e.length;++a){const o=e[a];if("\n"==o){switch(r+=1,this._horizontalTextAlign){case"left":n[0]=t[0];break;case"centered":n[0]=t[0]-i[r]*s+s;break;case"right":n[0]=t[0]-i[r]*this._textScale+this._textScale}n[1]-=this._textScale}else this._pushLetter(o,n),n[0]+=this._textScale}return this}_pushLetter(e,t){if(this._currentSize+90>=this._buffer.length)return;const i=this._texCoordMap.get(e);if(!i)throw new Error(`fail to find a letter, letter=${e}`);for(let e=-1;e<=1;++e)for(let r=-1;r<=1;++r)this._buffer[this._currentSize++]=t[0]+2*r,this._buffer[this._currentSize++]=t[1]+2*e,this._buffer[this._currentSize++]=-.1,this._buffer[this._currentSize++]=i[0],this._buffer[this._currentSize++]=i[1],this._buffer[this._currentSize++]=0,this._buffer[this._currentSize++]=0,this._buffer[this._currentSize++]=0,this._buffer[this._currentSize++]=this._textScale;this._buffer[this._currentSize++]=t[0],this._buffer[this._currentSize++]=t[1],this._buffer[this._currentSize++]=0,this._buffer[this._currentSize++]=i[0],this._buffer[this._currentSize++]=i[1],this._buffer[this._currentSize++]=this._textColor[0],this._buffer[this._currentSize++]=this._textColor[1],this._buffer[this._currentSize++]=this._textColor[2],this._buffer[this._currentSize++]=this._textScale}flush(e){return 0===this._currentSize||(this._shader.bind((t=>{t.setMatrix4Uniform("u_composedMatrix",e),t.setTextureUniform("u_texture",this._texture,0),this._geometry.allocateBuffer(1,this._buffer,this._currentSize),this._geometry.setInstancedCount(this._currentSize/9),this._geometry.render()})),Ce.unbind(),this.clear()),this}clear(){return this._currentSize=0,this}},widgets:tt});class rt{constructor(e){if(this._lines=[],this._maxLines=30,this._textAreaElement=document.getElementById(e),!this._textAreaElement)throw new Error(`DOM elements not found, id=${e}`);this._textAreaElement.value=""}log(...e){if(0===e.length)return;const t=Array.prototype.slice.call(e).join(" ");console.log(t),this._pushText(t)}error(...e){if(0===e.length)return;const t=Array.prototype.slice.call(e).join(" ");console.error(t),this._pushText(`[ERR] - ${t}`)}_pushText(e){this._lines.push(e),this._lines.length>this._maxLines&&this._lines.splice(0,this._lines.length-this._maxLines),this._textAreaElement.value=`${this._lines.join("\n")}\n`,this._textAreaElement.scrollTop=this._textAreaElement.scrollHeight}peekLast(){if(this._lines.length>0)return this._lines[this._lines.length-1]}popLast(){this._lines.length>0&&this._lines.splice(this._lines.length-1,1)}}function nt(e,t,i,r){return new(i||(i=Promise))((function(n,s){function a(e){try{c(r.next(e))}catch(e){s(e)}}function o(e){try{c(r.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,o)}c((r=r.apply(e,t||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;class st{static load(e){return nt(this,void 0,void 0,(function*(){yield st.loadJsPart(e.jsUrl),yield st.loadWasmPart(e.wasmUrl)}))}static loadJsPart(e){return nt(this,void 0,void 0,(function*(){var t;yield(t=e,new Promise(((e,i)=>{const r=document.createElement("script");r.src=t,r.addEventListener("load",e),r.addEventListener("error",i),document.head.appendChild(r)})))}))}static loadWasmPart(e){return nt(this,void 0,void 0,(function*(){st._wasmModule=yield FrankenPhysLoader({locateFile:t=>`${e}/${t}`})}))}static get(){if(!this._wasmModule)throw new Error("FrankenPhys wasm module not loaded");return this._wasmModule}}class at{constructor(){this._listenersMap=new Map}isEventListenedTo(e){const t=this._listenersMap.get(e);return!!t&&t.length>0}addEventListener(e,t){let i=this._listenersMap.get(e);if(i||(i=[],this._listenersMap.set(e,i)),-1!==i.indexOf(t))throw new Error(`duplicated event listener, type=${e}`);i.push(t)}on(e,t){this.addEventListener(e,t)}hasEventListener(e,t){const i=this._listenersMap.get(e);return void 0!==i&&-1!==i.indexOf(t)}removeEventListener(e,t){const i=this._listenersMap.get(e);if(void 0===i)return;const r=i.indexOf(t);if(-1===r)throw new Error(`unknown event listener, type=${e}`);i.splice(r,1)}dispatchEvent(e){const t=this._listenersMap.get(e.type);if(void 0===t)return;const i=t.slice(0);for(let t=0;t<i.length;++t)i[t].call(this,e)}}class ot{static set(e){return nt(this,void 0,void 0,(function*(){ot._wasmModule=e}))}static get(){if(!this._wasmModule)throw new Error("FrankenPhys wasm module not loaded");return this._wasmModule}}var ct="undefined"!=typeof Float32Array?Float32Array:Array;function dt(){var e=new ct(3);return ct!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function ht(e,t,i){var r=new ct(3);return r[0]=e,r[1]=t,r[2]=i,r}function ft(e,t,i,r){var n=new ct(4);return n[0]=e,n[1]=t,n[2]=i,n[3]=r,n}function lt(){var e=new ct(4);return ct!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)}),dt(),function(){var e=new ct(4);ct!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0)}(),dt(),ht(1,0,0),ht(0,1,0),lt(),lt(),function(){var e=new ct(9);ct!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[5]=0,e[6]=0,e[7]=0),e[0]=1,e[4]=1,e[8]=1}(),function(){var e=new ct(2);ct!=Float32Array&&(e[0]=0,e[1]=0)}();const ut=(e,t)=>{const i=ot.get(),r=new i.btVector3(t.from[0],t.from[1],t.from[2]),n=new i.btVector3(t.to[0],t.to[1],t.to[2]),s=new i.btTransform;s.setIdentity(),s.setOrigin(r);const a=new i.btTransform;a.setIdentity(),a.setOrigin(n);const o=new i.ClosestConvexResultCallback(r,n);o.set_m_collisionFilterGroup(t.collisionFilterGroup),o.set_m_collisionFilterMask(t.collisionFilterMask);const c=new i.btSphereShape(t.radius);if(e.convexSweepTest(c,s,a,o,0),!o.hasHit())return i.destroy(r),i.destroy(n),i.destroy(o),i.destroy(c),i.destroy(s),void i.destroy(a);const d=o.get_m_hitPointWorld(),h=o.get_m_hitNormalWorld(),f=o.get_m_closestHitFraction(),l=ht(d.x(),d.y(),d.z()),u=ht(h.x(),h.y(),h.z());return i.destroy(h),i.destroy(d),i.destroy(r),i.destroy(n),i.destroy(o),i.destroy(c),i.destroy(s),i.destroy(a),{fraction:f,impact:l,normal:u}};class _t extends at{constructor(e,t){super(),this._isAlive=!0;const i=ot.get();this._customShape=t;const r=new i.btVector3;this._customShape.shape.calculateLocalInertia(e.mass,r);const n=new i.btRigidBodyConstructionInfo(e.mass,null,this._customShape.shape,r);this._rawRigidBody=new i.btRigidBody(n),this.setPositionAndRotation(e.position,e.orientation),i.destroy(r),i.destroy(n)}dispose(){ot.get().destroy(this._rawRigidBody),this._customShape.cleanup(),this._rawRigidBody=null,this._isAlive=!1}isAlive(){return this._isAlive}setPositionAndRotation(e,t){const i=ot.get(),r=new i.btVector3(e[0],e[1],e[2]),n=new i.btQuaternion(t[0],t[1],t[2],t[3]),s=new i.btTransform(n,r);this._rawRigidBody.setWorldTransform(s),i.destroy(s),i.destroy(r),i.destroy(n)}setPosition(e,t,i){const r=ot.get(),n=this.getRotation(),s=new r.btVector3(e,t,i),a=new r.btQuaternion(n[0],n[1],n[2],n[3]),o=new r.btTransform(a,s);this._rawRigidBody.setWorldTransform(o),r.destroy(o),r.destroy(s),r.destroy(a)}setRotation(e,t,i,r){const n=ot.get(),s=this.getPosition(),a=new n.btVector3(s[0],s[1],s[2]),o=new n.btQuaternion(e,t,i,r),c=new n.btTransform(o,a);this._rawRigidBody.setWorldTransform(c),n.destroy(c),n.destroy(a),n.destroy(o)}getPositionAndRotation(e,t){const i=ot.get(),r=this._rawRigidBody.getWorldTransform(),n=r.getOrigin(),s=r.getRotation();e[0]=n.x(),e[1]=n.y(),e[2]=n.z(),t[0]=s.x(),t[1]=s.y(),t[2]=s.z(),t[3]=s.w(),i.destroy(s),i.destroy(n),i.destroy(r)}getPosition(){const e=ot.get(),t=this._rawRigidBody.getWorldTransform(),i=t.getOrigin(),r=ht(i.x(),i.y(),i.z());return e.destroy(i),e.destroy(t),r}getRotation(){const e=ot.get(),t=this._rawRigidBody.getWorldTransform(),i=t.getRotation(),r=ft(i.x(),i.y(),i.z(),i.w());return e.destroy(i),e.destroy(t),r}getLinearVelocity(){const e=ot.get(),t=this._rawRigidBody.getLinearVelocity(),i=ht(t.x(),t.y(),t.z());return e.destroy(t),i}getAngularVelocity(){const e=ot.get(),t=this._rawRigidBody.getAngularVelocity(),i=ht(t.x(),t.y(),t.z());return e.destroy(t),i}setLinearVelocity(e,t,i){const r=ot.get(),n=new r.btVector3(e,t,i);this._rawRigidBody.setLinearVelocity(n),r.destroy(n)}setAngularVelocity(e,t,i){const r=ot.get(),n=new r.btVector3(e,t,i);this._rawRigidBody.setAngularVelocity(n),r.destroy(n)}setLinearFactor(e,t,i){const r=ot.get(),n=new r.btVector3(e,t,i);this._rawRigidBody.setLinearFactor(n),r.destroy(n)}setAngularFactor(e,t,i){const r=ot.get(),n=new r.btVector3(e,t,i);this._rawRigidBody.setAngularFactor(n),r.destroy(n)}applyCentralForce(e,t,i){const r=ot.get(),n=new r.btVector3(e,t,i);this._rawRigidBody.applyCentralForce(n),r.destroy(n)}applyCentralImpulse(e,t,i){const r=ot.get(),n=new r.btVector3(e,t,i);this._rawRigidBody.applyCentralImpulse(n),r.destroy(n)}setDamping(e,t=0){this._rawRigidBody.setDamping(e,t)}setCcdMotionThreshold(e){this._rawRigidBody.setCcdMotionThreshold(e)}setCcdSweptSphereRadius(e){this._rawRigidBody.setCcdSweptSphereRadius(e)}setRestitution(e){this._rawRigidBody.setRestitution(e)}setFriction(e){this._rawRigidBody.setFriction(e)}setRollingFriction(e){this._rawRigidBody.setRollingFriction(e)}setGravity(e,t,i){const r=ot.get(),n=new r.btVector3(e,t,i);this._rawRigidBody.setGravity(n),r.destroy(n)}isStaticObject(){return this._rawRigidBody.isStaticObject()}isKinematicObject(){return this._rawRigidBody.isKinematicObject()}isStaticOrKinematicObject(){return this._rawRigidBody.isStaticOrKinematicObject()}isActive(){return this.isStaticOrKinematicObject()||this._rawRigidBody.isActive()}enableDeactivation(){this._rawRigidBody.activate(!0)}disableDeactivation(){this._rawRigidBody.setActivationState(4)}cannotDeactivate(){return this.isStaticOrKinematicObject()||4==this._rawRigidBody.getActivationState()}canDeactivate(){return!this.cannotDeactivate()}}class mt{constructor(e,t,i){const r=ot.get();this._chassisBody=t,this._vehicleTuning=new r.btVehicleTuning,this._defaultVehicleRaycaster=new r.btDefaultVehicleRaycaster(e),this._rawVehicle=new r.btRaycastVehicle(this._vehicleTuning,t._rawRigidBody,this._defaultVehicleRaycaster),this._rawVehicle.setCoordinateSystem(i.coordinateSystem[0],i.coordinateSystem[1],i.coordinateSystem[2]);const n=new r.btVector3(i.groundDirection[0],i.groundDirection[1],i.groundDirection[2]),s=new r.btVector3(i.rotationAxis[0],i.rotationAxis[1],i.rotationAxis[2]),a=new r.btVector3;for(let e=0;e<i.wheels.length;++e){const t=i.wheels[e];a.setValue(t.connectionPoint[0],t.connectionPoint[1],t.connectionPoint[2]);const r=this._rawVehicle.addWheel(a,n,s,i.suspensionRestLength,i.wheelRadius,this._vehicleTuning,t.isFrontWheel);r.set_m_suspensionStiffness(i.suspensionStiffness),r.set_m_wheelsDampingRelaxation(i.wheelsDampingRelaxation),r.set_m_wheelsDampingCompression(i.wheelsDampingCompression),r.set_m_frictionSlip(i.wheelFriction),r.set_m_rollInfluence(i.rollInfluence)}r.destroy(a),r.destroy(n),r.destroy(s)}dispose(){const e=ot.get();e.destroy(this._rawVehicle),e.destroy(this._defaultVehicleRaycaster),e.destroy(this._vehicleTuning)}getChassisBody(){return this._chassisBody}setSteeringValue(e,t){this._rawVehicle.setSteeringValue(t,e)}applyEngineForce(e,t){this._rawVehicle.applyEngineForce(t,e)}setBrake(e,t){this._rawVehicle.setBrake(t,e)}getWheeTransforms(){const e=ot.get(),t=[],i=this._rawVehicle.getNumWheels();for(let r=0;r<i;++r){this._rawVehicle.updateWheelTransform(r,!0);const i=this._rawVehicle.getWheelTransformWS(r),n=i.getOrigin(),s=i.getRotation();t.push({position:ht(n.x(),n.y(),n.z()),rotation:ft(s.x(),s.y(),s.z(),s.w())}),e.destroy(s),e.destroy(n),e.destroy(i)}return t}}class pt{constructor(e){this._bodyA=e.bodyA,this._bodyB=e.bodyB;const t=ot.get(),i=e.bodyA._rawRigidBody,r=e.bodyB._rawRigidBody,n=new t.btQuaternion(0,0,1,0),s=new t.btVector3(e.frameA[0],e.frameA[1],e.frameA[2]),a=new t.btTransform(n,s),o=new t.btVector3(e.frameB[0],e.frameB[1],e.frameB[2]),c=new t.btTransform(n,o);this._rawConstraint=new t.btGeneric6DofSpringConstraint(i,r,a,c,e.useReferenceFrameA),this._rawConstraint.enableSpring(0,!1),this._rawConstraint.enableSpring(1,!1),this._rawConstraint.enableSpring(2,!1),this._rawConstraint.setStiffness(0,1),this._rawConstraint.setStiffness(1,1),this._rawConstraint.setStiffness(2,1),this._rawConstraint.setDamping(0,1),this._rawConstraint.setDamping(1,1),this._rawConstraint.setDamping(2,1),t.destroy(a),t.destroy(c),t.destroy(s),t.destroy(o),t.destroy(n)}dispose(){ot.get().destroy(this._rawConstraint)}setLinearLowerLimit(e){const t=ot.get(),i=new t.btVector3(e[0],e[1],e[2]);this._rawConstraint.setLinearLowerLimit(i),t.destroy(i)}setLinearUpperLimit(e){const t=ot.get(),i=new t.btVector3(e[0],e[1],e[2]);this._rawConstraint.setLinearUpperLimit(i),t.destroy(i)}setAngularLowerLimit(e){const t=ot.get(),i=new t.btVector3(e[0],e[1],e[2]);this._rawConstraint.setAngularLowerLimit(i),t.destroy(i)}setAngularUpperLimit(e){const t=ot.get(),i=new t.btVector3(e[0],e[1],e[2]);this._rawConstraint.setAngularUpperLimit(i),t.destroy(i)}}class gt{constructor(e){this._bodyA=e.bodyA,this._bodyB=e.bodyB;const t=ot.get(),i=e.bodyA._rawRigidBody,r=e.bodyB._rawRigidBody,n=new t.btVector3(e.pivotInA[0],e.pivotInA[1],e.pivotInA[2]),s=new t.btVector3(e.pivotInB[0],e.pivotInB[1],e.pivotInB[2]),a=new t.btVector3(e.axisInA[0],e.axisInA[1],e.axisInA[2]),o=new t.btVector3(e.axisInB[0],e.axisInB[1],e.axisInB[2]);this._rawConstraint=new t.btHingeConstraint(i,r,n,s,a,o,e.useReferenceFrameA),t.destroy(n),t.destroy(s),t.destroy(a),t.destroy(o)}dispose(){ot.get().destroy(this._rawConstraint)}setLimit(e,t,i,r,n){this._rawConstraint.setLimit(e,t,i,r,n)}enableAngularMotor(e,t,i){this._rawConstraint.enableAngularMotor(e,t,i)}enableMotor(e){this._rawConstraint.enableMotor(e)}setMaxMotorImpulse(e){this._rawConstraint.setMaxMotorImpulse(e)}setMotorTarget(e,t){this._rawConstraint.setMotorTarget(e,t)}}const xt=(e,t,i)=>{const r=ot.get(),n=new r.btVector3(i.from[0],i.from[1],i.from[2]),s=new r.btVector3(i.to[0],i.to[1],i.to[2]),a=new r.ClosestRayResultCallback(n,s);if(a.set_m_collisionFilterGroup(i.collisionFilterGroup),a.set_m_collisionFilterMask(i.collisionFilterMask),e.rayTest(n,s,a),!a.hasHit())return r.destroy(n),r.destroy(s),void r.destroy(a);const o=t.get(a.get_m_collisionObject().ptr);if(!o)return r.destroy(n),r.destroy(s),void r.destroy(a);const c=a.get_m_hitNormalWorld(),d=a.get_m_hitPointWorld(),h=ht(d.x(),d.y(),d.z()),f=ht(c.x(),c.y(),c.z());return r.destroy(c),r.destroy(d),r.destroy(n),r.destroy(s),r.destroy(a),{object:o,fraction:a.get_m_closestHitFraction(),impact:h,normal:f}};var bt;!function(e){e[e.DBG_NoDebug=0]="DBG_NoDebug",e[e.DBG_DrawWireframe=1]="DBG_DrawWireframe",e[e.DBG_DrawAabb=2]="DBG_DrawAabb",e[e.DBG_DrawFeaturesText=4]="DBG_DrawFeaturesText",e[e.DBG_DrawContactPoints=8]="DBG_DrawContactPoints",e[e.DBG_NoDeactivation=16]="DBG_NoDeactivation",e[e.DBG_NoHelpText=32]="DBG_NoHelpText",e[e.DBG_DrawText=64]="DBG_DrawText",e[e.DBG_ProfileTimings=128]="DBG_ProfileTimings",e[e.DBG_EnableSatComparison=256]="DBG_EnableSatComparison",e[e.DBG_DisableBulletLCP=512]="DBG_DisableBulletLCP",e[e.DBG_EnableCCD=1024]="DBG_EnableCCD",e[e.DBG_DrawConstraints=2048]="DBG_DrawConstraints",e[e.DBG_DrawConstraintLimits=4096]="DBG_DrawConstraintLimits",e[e.DBG_FastWireframe=8192]="DBG_FastWireframe",e[e.DBG_DrawNormals=16384]="DBG_DrawNormals",e[e.DBG_DrawFrames=32768]="DBG_DrawFrames"}(bt||(bt={}));var vt=st,yt=Object.freeze({__proto__:null,ConcretePhysicBody:_t,ConcretePhysicVehicle:mt,ContactEventHandler:at,get DebugDrawFlags(){return bt},PhysicWorld:class extends at{constructor(){super(),this._bodyMap=new Map,this._vehicleMap=new Map,this._constraintMap=new Map,this._allConstraints=[],this._constraintMap2=new Map,this._allConstraints2=[];const e=ot.get();this._collisionConf=new e.btDefaultCollisionConfiguration,this._dispatcher=new e.btCollisionDispatcher(this._collisionConf),this._broadPhase=new e.btDbvtBroadphase,this._solver=new e.btSequentialImpulseConstraintSolver,this._rawDynamicsWorld=new e.btjsDynamicsWorld(this._dispatcher,this._broadPhase,this._solver,this._collisionConf),this._rawDynamicsWorld.setGravity(new e.btVector3(0,0,-10)),this._initCollisionEvents()}dispose(){const e=ot.get();this._allConstraints.forEach((e=>e.dispose())),this._allConstraints.length=0,this._constraintMap.clear(),this._allConstraints2.forEach((e=>e.dispose())),this._allConstraints2.length=0,this._constraintMap2.clear(),[...this._vehicleMap.values()].forEach((e=>e.dispose())),this._vehicleMap.clear(),[...this._bodyMap.values()].forEach((e=>e.dispose())),this._bodyMap.clear(),e.destroy(this._rawDynamicsWorld),e.destroy(this._solver),e.destroy(this._broadPhase),e.destroy(this._dispatcher),e.destroy(this._collisionConf)}createRigidBody(e){const t=this._getShape(e.shape,e.mass>0),i=new _t(e,t);return this._rawDynamicsWorld.addRigidBody(i._rawRigidBody,-1,-1),this._bodyMap.set(i._rawRigidBody.ptr,i),i}_getShape(e,t){const i=ot.get();switch(e.type){case"box":{const t=new i.btVector3;t.setValue(.5*e.size[0],.5*e.size[1],.5*e.size[2]);const r=new i.btBoxShape(t);return i.destroy(t),{shape:r,cleanup:()=>i.destroy(r)}}case"sphere":{const t=new i.btSphereShape(e.radius);return{shape:t,cleanup:()=>i.destroy(t)}}case"cylinder":{const t=new i.btVector3(e.radius,e.radius,e.length),r=new i.btCylinderShape(t);return{shape:r,cleanup:()=>{i.destroy(r),i.destroy(t)}}}case"capsule":{const t=new i.btCapsuleShape(e.radius,e.length);return{shape:t,cleanup:()=>i.destroy(t)}}case"mesh":{const r=new i.btTriangleMesh,n=new i.btVector3,s=new i.btVector3,a=new i.btVector3;if(e.triangles.forEach((([e,t,i])=>{n.setValue(e[0],e[1],e[2]),s.setValue(t[0],t[1],t[2]),a.setValue(i[0],i[1],i[2]),r.addTriangle(n,s,a)})),i.destroy(n),i.destroy(s),i.destroy(a),t){const e=new i.btGImpactMeshShape(r),t=this._rawDynamicsWorld.createCompoundFromGimpactShape(e,0);return{shape:t,cleanup:()=>{i.destroy(t),i.destroy(e),i.destroy(r)}}}const o=new i.btBvhTriangleMeshShape(r,!0);return{shape:o,cleanup:()=>{i.destroy(o),i.destroy(r)}}}case"compound":{const r=new i.btCompoundShape,n=[],s=new i.btVector3,a=new i.btQuaternion(0,0,1,0),o=new i.btTransform;for(const{shape:i,position:c,orientation:d}of e.shapes){const e=this._getShape(i,t);n.push(e),s.setValue(c[0],c[1],c[2]),a.setValue(d[0],d[1],d[2],d[3]),o.setOrigin(s),o.setRotation(a),r.addChildShape(o,e.shape)}return i.destroy(s),i.destroy(a),i.destroy(o),{shape:r,cleanup:()=>{i.destroy(r);for(const e of n)i.destroy(e)}}}}}destroyRigidBody(e){const t=e._rawRigidBody,i=t.ptr;this._rawDynamicsWorld.removeRigidBody(t),this._bodyMap.delete(i),e.dispose();const r=this._constraintMap.get(i);if(r)for(const e of r)this.destroyGeneric6DofConstraint(e);const n=this._constraintMap2.get(i);if(n)for(const e of n)this.destroyHingeConstraint(e)}createVehicle(e){const t=this.createRigidBody(e.chassisDef),i=new mt(this._rawDynamicsWorld,t,e);return this._rawDynamicsWorld.addAction(i._rawVehicle),this._vehicleMap.set(i.ptr,i),i}destroyVehicle(e){this.destroyRigidBody(e._chassisBody),this._rawDynamicsWorld.removeAction(e._rawVehicle),this._vehicleMap.delete(e.ptr),e.dispose()}createGeneric6DofConstraint(e){const t=new pt(e),i=e.bodyA._rawRigidBody.ptr;let r=this._constraintMap.get(i);r||(r=[],this._constraintMap.set(i,r)),r.push(t);const n=e.bodyB._rawRigidBody.ptr;let s=this._constraintMap.get(n);return s||(s=[],this._constraintMap.set(i,s)),s.push(t),this._allConstraints.push(t),this._rawDynamicsWorld.addConstraint(t._rawConstraint,!0),t}destroyGeneric6DofConstraint(e){const t=e;this._rawDynamicsWorld.removeConstraint(t._rawConstraint);const i=this._constraintMap.get(t._bodyA._rawRigidBody.ptr);if(i){const e=i.indexOf(t);e>=0&&i.splice(e,0)}const r=this._constraintMap.get(t._bodyB._rawRigidBody.ptr);if(r){const e=r.indexOf(t);e>=0&&r.splice(e,0)}const n=this._allConstraints.indexOf(t);n>=0&&this._allConstraints.splice(n,0),t.dispose()}createHingeConstraint(e){const t=new gt(e),i=e.bodyA._rawRigidBody.ptr;let r=this._constraintMap2.get(i);r||(r=[],this._constraintMap2.set(i,r)),r.push(t);const n=e.bodyB._rawRigidBody.ptr;let s=this._constraintMap2.get(n);return s||(s=[],this._constraintMap2.set(i,s)),s.push(t),this._allConstraints2.push(t),this._rawDynamicsWorld.addConstraint(t._rawConstraint,!0),t}destroyHingeConstraint(e){const t=e;this._rawDynamicsWorld.removeConstraint(t._rawConstraint);const i=this._constraintMap2.get(t._bodyA._rawRigidBody.ptr);if(i){const e=i.indexOf(t);e>=0&&i.splice(e,0)}const r=this._constraintMap2.get(t._bodyB._rawRigidBody.ptr);if(r){const e=r.indexOf(t);e>=0&&r.splice(e,0)}const n=this._allConstraints2.indexOf(t);n>=0&&this._allConstraints2.splice(n,0),t.dispose()}rayCast(e,t){return xt(this._rawDynamicsWorld,this._bodyMap,{from:e,to:t,collisionFilterGroup:-1,collisionFilterMask:-1})}convexSweep(e,t,i){return ut(this._rawDynamicsWorld,{from:e,to:t,collisionFilterGroup:-1,collisionFilterMask:-1,radius:i})}_initCollisionEvents(){const e=e=>{const t=e.data.getBodyA(),i=e.data.getBodyB(),r=this._bodyMap.get(t.ptr),n=this._bodyMap.get(i.ptr);if(!r||!n)return;const s=e.type,a=(this.isEventListenedTo(s)?1:0)|(r.isEventListenedTo(s)?2:0)|(n.isEventListenedTo(s)?4:0);if(0==a)return;const o=e.data.getId(),c=e.data.getPosition(),d=e.data.getNormalB(),h={x:c.x(),y:c.y(),z:c.z()},f={x:d.x(),y:d.y(),z:d.z()};1&a&&this.dispatchEvent({type:s,data:{contactId:o,rigidBodyA:r,rigidBodyB:n,position:ht(h.x,h.y,h.z),normalB:ht(f.x,f.y,f.z)}}),2&a&&r.dispatchEvent({type:s,data:{contactId:o,other:n,position:ht(h.x,h.y,h.z),normalB:ht(-f.x,-f.y,-f.z)}}),4&a&&n.dispatchEvent({type:s,data:{contactId:o,other:r,position:ht(h.x,h.y,h.z),normalB:ht(f.x,f.y,f.z)}})},t=ot.get();t.on("beginContact",e),t.on("updateContact",e),t.on("endContact",e),t.on("ccdContact",e),t.listenToContactCallbacks()}stepSimulation(e,t=3,i=1/60){this._rawDynamicsWorld.stepSimulation(e,t,i)}setGravity(e,t,i){const r=ot.get(),n=new r.btVector3(e,t,i);this._rawDynamicsWorld.setGravity(n),r.destroy(n)}setDebugWireframeCallback(e){const t=ot.get().addFunction(e,"vfffffffff");this._rawDynamicsWorld.setDebugWireframeCallback(t)}setDebugWireframeFeaturesFlag(e){this._rawDynamicsWorld.setDebugWireframeFeaturesFlag(e)}debugDrawWorld(){this._rawDynamicsWorld.debugDrawWorld()}},WasmModuleHolder:ot,convexSweep:ut,rayCast:xt}),Tt="\n#version 300 es\n\nprecision highp float;\n\nin vec2 a_vertexPosition;\nin vec3 a_plotPosition;\n\nout vec3 v_position;\n\nvoid main(void)\n{\n  gl_Position = vec4(a_vertexPosition, 1.0, 1.0);\n\n  v_position = a_plotPosition;\n}\n".trim(),wt='\n#version 300 es\n\nprecision highp int;\nprecision highp float;\n\n//\n//\n//\n\n// Indices of refractionFactor\nconst float Air = 1.0;\nconst float Glass = 1.51714;\n\n// Air to glass ratio of the indices of refractionFactor (Eta)\nconst float Eta = Air / Glass;\n\n// // see http://en.wikipedia.org/wiki/Refractive_index Reflectivity\n// const float R0 = ((Air - Glass) * (Air - Glass)) / ((Air + Glass) * (Air + Glass));\n\n//\n//\n//\n\nuniform vec3        u_cameraEye;\nuniform int         u_useBvh;\n\n//\n\nuniform highp sampler2D   u_sceneTextureData;\nuniform int               u_sceneTextureSize;\n\nuniform highp sampler2D   u_materialsTextureData;\n\n//\n\nuniform highp sampler2D   u_lightsTextureData;\nuniform int               u_lightsTextureSize;\n\n//\n\nuniform highp sampler2D   u_bvhDataTexture;\n\n//\n//\n//\n\nin vec3  v_position;\n\nout vec4 o_color;\n\n//\n\nconst float     g_ambientLightIntensity = 0.15;\n\nconst vec3      g_backgroundColor = vec3(0.1);\n\n//\n\nstruct RayValues\n{\n  vec3 origin;\n  vec3 direction;\n};\n\nstruct RayResult\n{\n  bool hasHit;\n  float distance;\n  vec3 position;\n  vec3 normal;\n  vec4 color;\n  float reflectionFactor;\n  float refractionFactor;\n  bool lightEnabled;\n  vec3 txPos;\n  int shapeIndex;\n  int materialIndex;\n};\n\nstruct LightResult {\n  float intensity;\n  vec3 color;\n};\n\n\nstruct StackData\n{\n  bool used;\n  RayValues ray;\n  RayResult result;\n  int reflectionIndex;\n  int refractionIndex;\n};\n\nstruct LightStackData\n{\n  bool used;\n  RayValues ray;\n  RayResult result;\n  LightResult lightResult;\n};\n\n//\n//\n//\n//\n//\n\nvec3 apply_quat_to_vec3(vec3 position, vec4 q)\n{\n  vec3 v = position.xyz;\n  return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\nmat3 quat_to_mat3(vec4 q)\n{\n\n  // multiply by sqrt(2) to get rid of all the 2.0 factors in the matrix\n  q *= 1.414214;\n\n  float xx = q.x * q.x;\n  float xy = q.x * q.y;\n  float xz = q.x * q.z;\n  float xw = q.x * q.w;\n\n  float yy = q.y * q.y;\n  float yz = q.y * q.z;\n  float yw = q.y * q.w;\n\n  float zz = q.z * q.z;\n  float zw = q.z * q.w;\n\n  return mat3(\n    1.0 - yy - zz,\n    xy + zw,\n    xz - yw,\n\n    xy - zw,\n    1.0 - xx - zz,\n    yz + xw,\n\n    xz + yw,\n    yz - xw,\n    1.0 - xx - yy\n  );\n}\n//\n//\n//\n//\n//\n\nbool intersectSphere(RayValues ray, float radius, out float outDistance, out vec3 normal)\n{\n  float nearValue = 0.001; // TODO: hardcoded\n  float farValue = 100.0; // TODO: hardcoded\n\n  float b = dot(ray.origin, ray.direction);\n  float c = dot(ray.origin, ray.origin) - radius * radius;\n  float h = b * b - c;\n  if (h < 0.0) {\n    return false;\n  }\n\n  h = sqrt(h);\n\n  float d1 = -b - h;\n  if (d1 >= nearValue && d1 <= farValue)\n  {\n    normal = normalize(ray.origin + ray.direction * d1);\n    outDistance = d1;\n    return true;\n  }\n\n  float d2 = -b + h;\n  if (d2 >= nearValue && d2 <= farValue)\n  {\n    normal = normalize(ray.origin + ray.direction * d2);\n    outDistance = d2;\n    return true;\n  }\n\n  return false;\n}\n\nbool intersectBox(RayValues ray, vec3 boxSize, out float outDistance, out vec3 normal)\n{\n  float nearValue = 0.001; // TODO: hardcoded\n  float farValue = 100.0; // TODO: hardcoded\n\n  //\n  //\n  // sad hack: fix a shadow related bug\n\n  // if (ray.origin.x == 0.0) ray.origin.x = -1e-8;\n  // if (ray.origin.y == 0.0) ray.origin.y = -1e-8;\n  // if (ray.origin.z == 0.0) ray.origin.z = -1e-8;\n\n  if (ray.direction.x == 0.0) ray.direction.x = -1e-8;\n  if (ray.direction.y == 0.0) ray.direction.y = -1e-8;\n  if (ray.direction.z == 0.0) ray.direction.z = -1e-8;\n\n  // sad hack: fix a shadow related bug\n  //\n  //\n\n  vec3 m = sign(ray.direction) / max(abs(ray.direction), 1e-8);\n  vec3 n = m * ray.origin;\n  vec3 k = abs(m) * boxSize;\n\n  vec3 t1 = -n - k;\n  vec3 t2 = -n + k;\n\n  float tN = max(max(t1.x, t1.y), t1.z);\n  float tF = min(min(t2.x, t2.y), t2.z);\n\n  if (tN > tF || tF <= 0.0) {\n    return false;\n  }\n\n  if (tN >= nearValue && tN <= farValue)\n  {\n    normal = normalize(-sign(ray.direction) * step(t1.yzx, t1.xyz) * step(t1.zxy, t1.xyz));\n    outDistance = tN;\n    return true;\n  }\n\n  if (tF >= nearValue && tF <= farValue)\n  {\n    normal = normalize(-sign(ray.direction) * step(t1.yzx, t1.xyz) * step(t1.zxy, t1.xyz));\n    outDistance = tF;\n    return true;\n  }\n\n  return false;\n}\n\nbool intersectTriangle(RayValues ray, vec3 v0, vec3 v1, vec3 v2, out float outDistance, out vec3 normal)\n{\n  float nearValue = 0.001; // TODO: hardcoded\n  float farValue = 100.0; // TODO: hardcoded\n\n  vec3 v1v0 = v1 - v0;\n  vec3 v2v0 = v2 - v0;\n  vec3 rov0 = ray.origin - v0;\n\n  vec3 n = cross(v1v0, v2v0);\n  vec3 q = cross(rov0, ray.direction);\n  float d = 1.0 / dot(ray.direction, n);\n  float u = d * dot(-q, v2v0);\n  float v = d * dot(q, v1v0);\n  float t = d * dot(-n, rov0);\n\n  if (u < 0.0 || v < 0.0 || (u + v) > 1.0 || t < nearValue || t > farValue) {\n    return false;\n  }\n\n  normal = normalize(-n);\n  outDistance = t;\n  return true;\n}\n\n// float intersectPlane(RayValues ray, vec3 normal, float offset)\n// {\n//     return -(dot(ray.origin, normal) + offset) / dot(ray.direction, normal);\n// }\n\n// float intersectPlane2(RayValues ray, vec3 normal, float offset)\n// {\n//     float nearValue = 0.001; // TODO: hardcoded\n//     float farValue = 1000.0; // TODO: hardcoded\n\n//     float a = dot(ray.direction, normal);\n//     float d = -(dot(ray.origin, normal) + offset) / a;\n\n//     if (a > 0.0 || d < nearValue || d > farValue)\n//         return -1.0;\n\n//     return d;\n// }\n\n// float diskIntersect(RayValues ray, vec3 center, vec3 normal, float radius)\n// {\n//     vec3  o = ray.origin - center;\n//     float t = -dot(normal, o) / dot(ray.direction, normal);\n//     vec3  q = o + ray.direction * t;\n//     return (dot(q, q) < radius * radius) ? t : -1.0;\n// }\n\n//\n//\n//\n//\n//\n\n//\n//\n//\n//\n//\n\n//\n//\n//\n//\n//\n\nvoid intersectSceneOneShape(\n  int shapeIndex,\n  RayValues ray,\n  inout RayResult outBestResult,\n  bool shadowMode\n) {\n  RayValues tmpRay;\n  vec3 normal;\n  float currDistance = 0.0;\n\n  vec4 shTexel0 = texelFetch(u_sceneTextureData, ivec2(shapeIndex + 0, 0), 0);\n\n  int materialIndex = int(shTexel0.g);\n\n  if (shadowMode == true)\n  {\n    vec4 matTexel0 = texelFetch(u_materialsTextureData, ivec2(materialIndex * 2 + 0, 0), 0);\n\n    bool castShadowEnabled = (int(matTexel0.g) == 1);\n    if (castShadowEnabled == false) {\n      return; // this shape does not cast a shadow -> skip\n    }\n  }\n\n  vec4 shTexel1 = texelFetch(u_sceneTextureData, ivec2(shapeIndex + 1, 0), 0);\n  vec4 shTexel2 = texelFetch(u_sceneTextureData, ivec2(shapeIndex + 2, 0), 0);\n\n  int shapeType = int(shTexel0.r);\n\n  switch (shapeType) {\n    case 1: {\n\n      //\n      // Sphere shape\n      //\n\n      vec3 center = vec3(shTexel0.b, shTexel0.a, shTexel1.r);\n      float radius = shTexel2.g;\n\n      vec4 orientation = vec4(\n        shTexel1.g,\n        shTexel1.b,\n        shTexel1.a,\n        shTexel2.r\n      );\n      mat3 normalMatrix = quat_to_mat3(orientation);\n      mat3 inverseNormalMatrix = inverse(normalMatrix);\n\n      // convert ray from world space to sphere space\n      tmpRay.origin = (inverseNormalMatrix * (ray.origin - center));\n      tmpRay.direction = (inverseNormalMatrix * ray.direction);\n\n      if (\n        !intersectSphere(tmpRay, radius, currDistance, normal) ||\n        (outBestResult.distance > 0.0 && currDistance > outBestResult.distance)\n      ) {\n        return;\n      }\n\n      // convert normal from box space to world space\n      normal = normalMatrix * normal;\n\n      outBestResult.position = ray.origin + currDistance * ray.direction;\n\n      // the multiplication by 0.999 will remove graphic artifact\n      // vec3 txPos = (inverseNormalMatrix * 0.999) * (center - outBestResult.position);\n      vec3 txPos = inverseNormalMatrix * (center - outBestResult.position);\n      outBestResult.txPos = txPos;\n\n      break;\n    }\n\n    case 2: {\n\n      //\n      // Box shape\n      //\n\n      vec3 center = vec3(shTexel0.b, shTexel0.a, shTexel1.r);\n      vec3 boxSize = shTexel2.gba;\n\n      vec4 orientation = vec4(\n        shTexel1.g,\n        shTexel1.b,\n        shTexel1.a,\n        shTexel2.r\n      );\n      mat3 normalMatrix = quat_to_mat3(orientation);\n      mat3 inverseNormalMatrix = inverse(normalMatrix);\n\n      // convert ray from world space to sphere space\n      tmpRay.origin = (inverseNormalMatrix * (ray.origin - center));\n      tmpRay.direction = (inverseNormalMatrix * ray.direction);\n\n      if (\n        !intersectBox(tmpRay, boxSize, currDistance, normal) ||\n        (outBestResult.distance > 0.0 && currDistance > outBestResult.distance)\n      ) {\n        return;\n      }\n\n      // convert normal from box space to world space\n      normal = normalMatrix * normal;\n\n      outBestResult.position = ray.origin + currDistance * ray.direction;\n\n      // the multiplication by 0.999 will remove graphic artifact\n      vec3 txPos = (inverseNormalMatrix * 0.999) * (center - outBestResult.position);\n      outBestResult.txPos = txPos;\n\n      break;\n    }\n    case 3: {\n\n      //\n      // Triangle shape\n      //\n\n      tmpRay.origin = ray.origin;\n      tmpRay.direction = ray.direction;\n\n      vec3 v0 = vec3(shTexel0.b, shTexel0.a, shTexel1.r);\n      vec3 v1 = shTexel1.gba;\n      vec3 v2 = shTexel2.rgb;\n\n      if (\n        !intersectTriangle(tmpRay, v0, v1, v2, currDistance, normal) ||\n        (outBestResult.distance > 0.0 && currDistance > outBestResult.distance)\n      ) {\n        return;\n      }\n\n      outBestResult.position = ray.origin + currDistance * ray.direction;\n\n      outBestResult.txPos = vec3(0.0); // TODO?\n      // outBestResult.txPos = vec3(1.0); // TODO?\n      // outBestResult.txPos = normal;\n\n      break;\n    }\n  }\n\n  outBestResult.hasHit = true;\n  outBestResult.distance = currDistance;\n  outBestResult.normal = normal;\n  outBestResult.shapeIndex = shapeIndex;\n  outBestResult.materialIndex = materialIndex;\n}\n\n\nbool rayIntersectBvhAABB(RayValues ray, vec3 bvhMin, vec3 bvhMax)\n{\n  vec3 valA = (bvhMin - ray.origin) / ray.direction;\n  vec3 valB = (bvhMax - ray.origin) / ray.direction;\n  vec3 minVal = min(valA, valB);\n  vec3 maxVal = max(valA, valB);\n\n  float max_minVal = max(minVal.x, max(minVal.y, minVal.z));\n  float min_maxVal = min(maxVal.x, min(maxVal.y, maxVal.z));\n\n  return max_minVal < min_maxVal;\n}\n\nbool intersectScene(\n  RayValues ray,\n  out RayResult outBestResult,\n  bool shadowMode,\n  int toIgnoreShapeIndex\n) {\n  outBestResult.hasHit = false;\n  outBestResult.distance = -1.0;\n\n  if (u_sceneTextureSize == 0)\n  {\n    return false;\n  }\n\n  if (u_useBvh == 0)\n  {\n\n    // no BVH optimization -> brute force all the shapes\n    for (int shapeIndex = 0; shapeIndex < u_sceneTextureSize; shapeIndex += 3) {\n      if (shapeIndex != toIgnoreShapeIndex) {\n        intersectSceneOneShape(shapeIndex, ray, outBestResult, shadowMode);\n      }\n    }\n\n  }\n  else\n  {\n\n    // use BVH optimization -> traverse the nodes and their associated AABB\n    // -> this should reduce the total number intersections execute\n\n    const int maxBvhStack = 16;\n    int bvhStack[maxBvhStack];\n\n    bvhStack[0] = 0; // BVH root node index\n    int top = 0;\n\n    while (top >= 0)\n    {\n\n      // pop stack\n      int bv_idx = bvhStack[top];\n      top -= 1;\n\n      vec4 rootNodeTexel0 = texelFetch(u_bvhDataTexture, ivec2(bv_idx * 3 + 0, 0), 0);\n      vec4 rootNodeTexel1 = texelFetch(u_bvhDataTexture, ivec2(bv_idx * 3 + 1, 0), 0);\n\n      vec3 aabbMin = rootNodeTexel0.rgb;\n      vec3 aabbMax = vec3(rootNodeTexel0.a, rootNodeTexel1.r, rootNodeTexel1.g);\n\n      if (!rayIntersectBvhAABB(ray, aabbMin, aabbMax)) {\n        continue;\n      }\n\n      //\n\n      int leftNodeIndex = int(rootNodeTexel1.b);\n      if (leftNodeIndex >= 0) {\n        // push left bvh node index on to the stack\n        top += 1;\n        bvhStack[top] = leftNodeIndex;\n      }\n\n      int rightNodeIndex = int(rootNodeTexel1.a);\n      if (rightNodeIndex >= 0) {\n        // push right bvh node index on to the stack\n        top += 1;\n        bvhStack[top] = rightNodeIndex;\n      }\n\n      //\n\n      vec4 rootNodeTexel2 = texelFetch(u_bvhDataTexture, ivec2(bv_idx * 3 + 2, 0), 0);\n\n      int leftLEafShapeIndex = int(rootNodeTexel2.r);\n      if (\n        leftLEafShapeIndex >= 0 &&\n        leftLEafShapeIndex != toIgnoreShapeIndex\n      ) {\n        intersectSceneOneShape(leftLEafShapeIndex * 3, ray, outBestResult, shadowMode);\n      }\n\n      int rightLeafShapeIndex = int(rootNodeTexel2.g);\n      if (\n        rightLeafShapeIndex >= 0 &&\n        rightLeafShapeIndex != toIgnoreShapeIndex\n      ) {\n        intersectSceneOneShape(rightLeafShapeIndex * 3, ray, outBestResult, shadowMode);\n      }\n\n      //\n\n    }\n\n  }\n\n  return outBestResult.hasHit;\n}\n\n//\n//\n//\n//\n//\n\n//\n//\n//\n//\n//\n\n//\n//\n//\n//\n//\n\nvoid lightAt(\n  vec3 impactPosition,\n  vec3 impactNormal,\n  vec3 viewer,\n  out LightResult lightResult\n) {\n\n  lightResult.intensity = g_ambientLightIntensity;\n  lightResult.color = vec3(1.0);\n\n  //\n  // handle spot lights\n  //\n\n  const int maxLightStackSize = 5;\n  LightStackData _lightStack[maxLightStackSize];\n\n  vec3 lightDir = vec3(1.0);\n  float currLightIntensity = 1.0;\n  vec3 currLightColor = vec3(1.0);\n\n  for (int lightIndex = 0; lightIndex < u_lightsTextureSize; lightIndex += 2)\n  {\n\n    vec4 texel0 = texelFetch(u_lightsTextureData, ivec2(lightIndex + 0, 0), 0);\n    vec3 lightPos = texel0.rgb;\n    float lightRadius = texel0.a;\n\n    vec3 lightToImpactVec3 = lightPos - impactPosition;\n\n    // is it out of the spot light effect radius?\n    float lightToImpactDistance = length(lightToImpactVec3);\n    if (lightToImpactDistance > lightRadius)\n    {\n      // out of range, do not apply this light\n      continue;\n    }\n\n    // normalize lightDir\n    lightDir.x = lightToImpactVec3.x / lightToImpactDistance;\n    lightDir.y = lightToImpactVec3.y / lightToImpactDistance;\n    lightDir.z = lightToImpactVec3.z / lightToImpactDistance;\n\n    vec4 texel1 = texelFetch(u_lightsTextureData, ivec2(lightIndex + 1, 0), 0);\n    float localIntensity = texel1.r;\n\n    currLightIntensity = localIntensity * (1.0 - lightToImpactDistance / lightRadius);\n\n    // initialize stack\n    for (int ii = 0; ii < maxLightStackSize; ++ii)\n    {\n      _lightStack[ii].used = false;\n      _lightStack[ii].ray.direction = lightDir;\n      _lightStack[ii].result.color = vec4(1.0);\n      _lightStack[ii].result.reflectionFactor = 1.0;\n      _lightStack[ii].result.refractionFactor = 1.0;\n      _lightStack[ii].result.materialIndex = -1;\n      _lightStack[ii].result.lightEnabled = false;\n      _lightStack[ii].lightResult.intensity = 1.0;\n      _lightStack[ii].lightResult.color = vec3(1.0);\n    }\n\n    // initialize first stack element\n    _lightStack[0].used = true;\n    _lightStack[0].ray.origin = impactPosition;\n\n    int previousShapeIndex = -1;\n\n    bool lightIsBlocked = false;\n\n    int lightStackWriteIndex = 0;\n\n    //\n    // Accumulating this shape\'s light stack\n    //\n\n    int lightStackReadIndex = 0;\n    for (; lightStackReadIndex < maxLightStackSize; ++lightStackReadIndex)\n    {\n      // intersect object\n      // if reflection/refraction push to stack\n      // repeat\n\n      if (!_lightStack[lightStackReadIndex].used)\n      {\n        // nothing to process anymore\n        break;\n      }\n\n      _lightStack[lightStackReadIndex].result.hasHit = intersectScene(\n        _lightStack[lightStackReadIndex].ray,\n        _lightStack[lightStackReadIndex].result,\n        true,\n        previousShapeIndex\n      );\n\n      if (\n        // we got no collision -> light not blocked\n        !_lightStack[lightStackReadIndex].result.hasHit ||\n        // we got collision -> checking if the impact is behind the light\n        _lightStack[lightStackReadIndex].result.distance > distance(_lightStack[lightStackReadIndex].ray.origin, lightPos)\n      ) {\n        // ignore the light\n        lightIsBlocked = false;\n        break;\n      }\n\n      previousShapeIndex = _lightStack[lightStackReadIndex].result.shapeIndex;\n\n      int materialIndex = _lightStack[lightStackReadIndex].result.materialIndex;\n\n      // light ray is blocked, skip this light... unless? (<- chessboard/refraction material check)\n      vec4 matTexel0 = texelFetch(u_materialsTextureData, ivec2(materialIndex * 2 + 0, 0), 0);\n      vec4 matTexel1 = texelFetch(u_materialsTextureData, ivec2(materialIndex * 2 + 1, 0), 0);\n\n      int materialType = int(matTexel0.r);\n\n      // chessboard alternative material\n      if (materialType == 1)\n      {\n        int subMaterialIndex = 0;\n\n        vec3 txPos = _lightStack[lightStackReadIndex].result.txPos;\n        if (\n          (fract(txPos.x * matTexel1.t) > 0.5)\n          != (fract(txPos.y * matTexel1.g) > 0.5)\n          != (fract(txPos.z * matTexel1.b) > 0.5)\n        ) {\n          subMaterialIndex = int(matTexel0.a);\n        } else {\n          subMaterialIndex = int(matTexel0.b);\n        }\n\n        matTexel0 = texelFetch(u_materialsTextureData, ivec2(subMaterialIndex * 2 + 0, 0), 0);\n        matTexel1 = texelFetch(u_materialsTextureData, ivec2(subMaterialIndex * 2 + 1, 0), 0);\n      }\n\n      float refractionFactor = matTexel0.a;\n\n      if (refractionFactor <= 0.01)\n      {\n        // no refraction/transparency -> light ray is blocked -> ignore the light\n        lightIsBlocked = true;\n        break;\n      }\n\n      vec3 shapeColor = matTexel1.gba;\n\n      _lightStack[lightStackReadIndex].lightResult.intensity = refractionFactor;\n      _lightStack[lightStackReadIndex].lightResult.color = shapeColor.xyz;\n\n      //\n      // handle refraction/transparency\n      //\n\n      if (lightStackWriteIndex + 1 >= maxLightStackSize)\n      {\n        // no more stack space left -> stop now\n        break;\n      }\n\n      lightStackWriteIndex += 1;\n\n      _lightStack[lightStackWriteIndex].used = true;\n      _lightStack[lightStackWriteIndex].ray.origin = _lightStack[lightStackReadIndex].result.position;\n\n    } // for (int ii = 0; ii < maxLightStackSize; ++ii)\n\n    if (lightIsBlocked)\n    {\n      // light ray is blocked by a (solid enough) shape -> ignore the light\n      continue;\n    }\n\n    //\n    // Unrolling this shape\'s accumulated light stack\n    //\n\n    // combine all light(s) color\n    // -> from last element to first element\n    // -> here we start from where we stopped during the accumulation phase\n    // for (lightStackReadIndex = lightStackWriteIndex; lightStackReadIndex >= 0; --lightStackReadIndex)\n    for (lightStackReadIndex = maxLightStackSize - 1; lightStackReadIndex >= 0; --lightStackReadIndex)\n    {\n      if (_lightStack[lightStackReadIndex].used == false)\n      {\n        continue;\n      }\n\n      // used stack element\n      currLightColor *= _lightStack[lightStackReadIndex].lightResult.color.xyz;\n      currLightIntensity *= _lightStack[lightStackReadIndex].lightResult.intensity;\n    }\n\n    //\n    //\n    //\n\n    //\n    // the (custom?) light logic\n    // -> TODO: find the name of this method...\n    //\n\n    float finalIntensity = 0.0;\n\n    // diffuse light\n    finalIntensity += 1.0 * dot(lightDir, impactNormal);\n\n    // specular light\n    vec3 reflectionFactor = reflect(-lightDir, impactNormal);\n    finalIntensity += 0.6 * pow(max(dot(reflectionFactor, viewer), 0.0), 30.0);\n\n    finalIntensity *= currLightIntensity;\n\n    //\n    // blend with the current result\n    //\n\n    float maxIntensity = max(lightResult.intensity, finalIntensity);\n    float normalizedRatio = 1.0 / maxIntensity;\n\n    float oldBlendRatio = normalizedRatio * max(lightResult.intensity, g_ambientLightIntensity);\n    float newBlendRatio = normalizedRatio * max(finalIntensity, g_ambientLightIntensity);\n\n    lightResult.color = lightResult.color * oldBlendRatio + currLightColor * newBlendRatio;\n    lightResult.intensity = maxIntensity;\n\n  } // for (int index = 0; index < u_lightsTextureSize; index += 2)\n}\n\n//\n//\n//\n//\n//\n\n//\n//\n//\n//\n//\n\n//\n//\n//\n//\n//\n\nvoid main()\n{\n  //\n  //\n  // initial ray\n\n  vec3 rayDir = normalize(v_position - u_cameraEye); // camera direction\n  vec3 finalPixelColor = g_backgroundColor;\n\n  // need a scene stack size of minimum 7 for a reflective AND refractive sphere\n  const int maxSceneStackSize = 7;\n  StackData _sceneStack[maxSceneStackSize];\n\n  // initialize stack\n  for (int ii = 0; ii < maxSceneStackSize; ++ii)\n  {\n    _sceneStack[ii].used = false;\n    _sceneStack[ii].result.reflectionFactor = 0.0;\n    _sceneStack[ii].result.refractionFactor = 0.0;\n    _sceneStack[ii].result.materialIndex = -1;\n    _sceneStack[ii].result.lightEnabled = false;\n    _sceneStack[ii].reflectionIndex = -1;\n    _sceneStack[ii].refractionIndex = -1;\n  }\n\n  // initialize first stack element\n  _sceneStack[0].used = true;\n  _sceneStack[0].ray = RayValues(u_cameraEye, rayDir);\n  _sceneStack[0].result.position = u_cameraEye;\n  _sceneStack[0].result.reflectionFactor = 1.0;\n  _sceneStack[0].result.refractionFactor = 1.0;\n  _sceneStack[0].result.lightEnabled = true;\n  _sceneStack[0].reflectionIndex = -1;\n  _sceneStack[0].refractionIndex = -1;\n\n  int sceneStackWriteIndex = 0;\n\n  //\n  // Accumulating this fragment\'s scene stack\n  //\n\n  int sceneStackReadIndex = 0;\n  for (; sceneStackReadIndex < maxSceneStackSize; ++sceneStackReadIndex)\n  {\n    // intersect object\n    // if reflection/refraction push to stack & set index\n    // repeat\n\n    // if (!_sceneStack[sceneStackReadIndex].used)\n    // {\n    //   // nothing to process anymore\n    //   break;\n    // }\n\n    _sceneStack[sceneStackReadIndex].result.hasHit = intersectScene(\n      _sceneStack[sceneStackReadIndex].ray,\n      _sceneStack[sceneStackReadIndex].result,\n      false,\n      -1\n    );\n\n    if (!_sceneStack[sceneStackReadIndex].result.hasHit)\n    {\n      continue;\n    }\n\n    //\n    // material handling\n    //\n\n    int materialIndex = _sceneStack[sceneStackReadIndex].result.materialIndex;\n\n    vec4 matTexel0 = texelFetch(u_materialsTextureData, ivec2(materialIndex * 2 + 0, 0), 0);\n    vec4 matTexel1 = texelFetch(u_materialsTextureData, ivec2(materialIndex * 2 + 1, 0), 0);\n\n    int materialType = int(matTexel0.r);\n\n    _sceneStack[sceneStackReadIndex].result.hasHit = true;\n\n    if (materialType == 1)\n    {\n      int subMaterialIndex = 0;\n\n      vec3 txPos = _sceneStack[sceneStackReadIndex].result.txPos;\n      if (\n        (fract(txPos.x * matTexel1.r) > 0.5)\n        == (fract(txPos.y * matTexel1.g) > 0.5)\n        == (fract(txPos.z * matTexel1.b) > 0.5)\n      ) {\n        subMaterialIndex = int(matTexel0.a);\n      } else {\n        subMaterialIndex = int(matTexel0.b);\n      }\n\n      matTexel0 = texelFetch(u_materialsTextureData, ivec2(subMaterialIndex * 2 + 0, 0), 0);\n      matTexel1 = texelFetch(u_materialsTextureData, ivec2(subMaterialIndex * 2 + 1, 0), 0);\n    }\n\n    vec3 color = matTexel1.gba;\n    float reflectionFactor = matTexel0.b;\n    float refractionFactor = matTexel0.a;\n\n    _sceneStack[sceneStackReadIndex].result.color = vec4(color, 0.5);\n    _sceneStack[sceneStackReadIndex].result.reflectionFactor = reflectionFactor;\n    _sceneStack[sceneStackReadIndex].result.refractionFactor = refractionFactor;\n\n    bool lightEnabled = (matTexel1.r != 0.0);\n    _sceneStack[sceneStackReadIndex].result.lightEnabled = lightEnabled;\n\n    //\n    // Light handling\n    //\n\n    LightResult lightResult;\n    lightResult.intensity = 1.0;\n    lightResult.color = vec3(1.0);\n\n    if (_sceneStack[sceneStackReadIndex].result.lightEnabled)\n    {\n      lightAt(\n        _sceneStack[sceneStackReadIndex].result.position,\n        _sceneStack[sceneStackReadIndex].result.normal,\n        -_sceneStack[sceneStackReadIndex].ray.direction,\n        lightResult\n      );\n    }\n\n    // update the result color\n    // -> this is to handle the refracted/transparent shape\'s shadows\n    // -> this will iterate over multiple potential refracted/transparent shapes\n    // ---\x3e ex1: a yellow then red refracted/transparent shape -> red shadow\n    _sceneStack[sceneStackReadIndex].result.color.xyz *= lightResult.color * lightResult.intensity;\n\n    if (\n      _sceneStack[sceneStackReadIndex].result.lightEnabled &&\n      lightResult.intensity <= 0.0\n    ) {\n      // not lit -> skip refraction/reflection\n      continue;\n    }\n\n    //\n    // reflection/refraction here\n    //\n\n    //\n    // refraction here\n    //\n\n    if (\n      // first check if more stack space is left\n      sceneStackWriteIndex + 1 < maxSceneStackSize &&\n      _sceneStack[sceneStackReadIndex].result.refractionFactor > 0.0\n    ) {\n      // push new refraction iteration to the stack\n      sceneStackWriteIndex += 1;\n\n      _sceneStack[sceneStackWriteIndex].used = true;\n      _sceneStack[sceneStackWriteIndex].ray.origin = _sceneStack[sceneStackReadIndex].result.position;\n      _sceneStack[sceneStackWriteIndex].ray.direction = refract(_sceneStack[sceneStackReadIndex].ray.direction, _sceneStack[sceneStackReadIndex].result.normal, Eta);\n\n      // here add 0.01 of the normal to the new origin\n      // -> this get properly "inside" the intersected shape\n      // ---\x3e this avoid intersecting twice the "same shape" at the "same spot"\n      _sceneStack[sceneStackWriteIndex].ray.origin += _sceneStack[sceneStackReadIndex].ray.direction * 0.01;\n\n      // set the new "child stack element" to its "parent stack element"\n      _sceneStack[sceneStackReadIndex].refractionIndex = sceneStackWriteIndex;\n    }\n\n    //\n    // reflection here\n    //\n\n    if (\n      // first check if more stack space is left\n      sceneStackWriteIndex + 1 < maxSceneStackSize &&\n      _sceneStack[sceneStackReadIndex].result.reflectionFactor > 0.0\n    ) {\n      // push new reflection iteration to the stack\n      sceneStackWriteIndex += 1;\n\n      _sceneStack[sceneStackWriteIndex].used = true;\n      _sceneStack[sceneStackWriteIndex].ray.origin = _sceneStack[sceneStackReadIndex].result.position;\n      _sceneStack[sceneStackWriteIndex].ray.direction = reflect(_sceneStack[sceneStackReadIndex].ray.direction, _sceneStack[sceneStackReadIndex].result.normal);\n\n      // set the new "child stack element" to its "parent stack element"\n      _sceneStack[sceneStackReadIndex].reflectionIndex = sceneStackWriteIndex;\n    }\n\n  }\n\n  //\n  // Unrolling this fragment\'s accumulated scene stack\n  //\n\n  // combine all colors\n  // -> from last element to first element\n  // -> here we start from where we stopped during the accumulation phase\n  for (sceneStackReadIndex = sceneStackWriteIndex; sceneStackReadIndex >= 0; --sceneStackReadIndex)\n  // for (sceneStackReadIndex = maxSceneStackSize - 1; sceneStackReadIndex >= 0; --sceneStackReadIndex)\n  {\n    // if (!_sceneStack[sceneStackReadIndex].used) {\n    //   continue;\n    // }\n\n    // handle any connected reflection\n    int reflectionIndex = _sceneStack[sceneStackReadIndex].reflectionIndex;\n    if (reflectionIndex != -1)\n    {\n      _sceneStack[sceneStackReadIndex].result.color.xyz =\n        _sceneStack[sceneStackReadIndex].result.color.xyz * (1.0 - _sceneStack[sceneStackReadIndex].result.reflectionFactor) +\n        _sceneStack[reflectionIndex].result.color.xyz * _sceneStack[sceneStackReadIndex].result.reflectionFactor;\n    }\n\n    // handle any connected refraction\n    int refractionIndex = _sceneStack[sceneStackReadIndex].refractionIndex;\n    if (refractionIndex != -1)\n    {\n      _sceneStack[sceneStackReadIndex].result.color.xyz =\n        _sceneStack[sceneStackReadIndex].result.color.xyz * (1.0 - _sceneStack[sceneStackReadIndex].result.refractionFactor) +\n        _sceneStack[refractionIndex].result.color.xyz * _sceneStack[sceneStackReadIndex].result.refractionFactor;\n    }\n  }\n\n  if (_sceneStack[0].result.hasHit) {\n    finalPixelColor = _sceneStack[0].result.color.xyz;\n  }\n\n  //\n  // Final Output\n  //\n\n  o_color = vec4(finalPixelColor, 1.0);\n\n}\n'.trim();const St=.01,Et=(e,t,i,r)=>{const n=[[t[0],t[1],t[2]],[i[0],t[1],t[2]],[t[0],i[1],t[2]],[i[0],i[1],t[2]],[t[0],t[1],i[2]],[i[0],t[1],i[2]],[t[0],i[1],i[2]],[i[0],i[1],i[2]]],s=[[0,1],[1,3],[3,2],[2,0],[4,5],[5,7],[7,6],[6,4],[0,4],[1,5],[2,6],[3,7]];for(const t of s)e.pushLine(n[t[0]],n[t[1]],r)};class Rt{static buildBvhGraph(e,t,i){Rt.s_index=0;const r=new Rt(e,t);return r.subDivide(i),r}constructor(e,t){this._index=-1,this._min=D(),this._max=D(),this._index=Rt.s_index,Rt.s_index+=1,k(this._min,e),k(this._max,t)}subDivide(e){if(e.length<=2)return this._leftLeaf=e[0],void(this._rightLeaf=e[1]);const t=Math.abs(this._max[0]-this._min[0]),i=Math.abs(this._max[1]-this._min[1]),r=Math.abs(this._max[2]-this._min[2]),n=Math.max(t,i,r);n===t?this._splitAcross(0,e):n===i?this._splitAcross(1,e):this._splitAcross(2,e)}_splitAcross(e,t){const i=[...t].sort(((t,i)=>(t.min[e]+t.max[e])/2-(i.min[e]+i.max[e])/2)),r=i.length/2,n=i.length,s=i.slice(0,r),a=i.slice(r,n);if(s.length>0){const e=M(Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER),t=M(Number.MIN_SAFE_INTEGER,Number.MIN_SAFE_INTEGER,Number.MIN_SAFE_INTEGER);s.forEach((i=>{e[0]=Math.min(e[0],i.min[0]),e[1]=Math.min(e[1],i.min[1]),e[2]=Math.min(e[2],i.min[2]),t[0]=Math.max(t[0],i.max[0]),t[1]=Math.max(t[1],i.max[1]),t[2]=Math.max(t[2],i.max[2])})),this._leftNode=new Rt(e,t)}if(a.length>0){const e=M(Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER),t=M(Number.MIN_SAFE_INTEGER,Number.MIN_SAFE_INTEGER,Number.MIN_SAFE_INTEGER);a.forEach((i=>{e[0]=Math.min(e[0],i.min[0]),e[1]=Math.min(e[1],i.min[1]),e[2]=Math.min(e[2],i.min[2]),t[0]=Math.max(t[0],i.max[0]),t[1]=Math.max(t[1],i.max[1]),t[2]=Math.max(t[2],i.max[2])})),this._rightNode=new Rt(e,t)}this._leftNode&&this._leftNode.subDivide(s),this._rightNode&&this._rightNode.subDivide(a)}render(e,t){Et(e,this._min,this._max,t),this._leftNode&&(this._leftNode.render(e,[0,.5,0]),e.pushLine([this._max[0]+.1,this._max[1]+.1,this._max[2]+.1],[this._leftNode._max[0]+.1,this._leftNode._max[1]+.1,this._leftNode._max[2]+.1],[1,0,1])),this._rightNode&&(this._rightNode.render(e,[0,0,.5]),e.pushLine([this._max[0]+.1,this._max[1]+.1,this._max[2]+.1],[this._rightNode._max[0]+.1,this._rightNode._max[1]+.1,this._rightNode._max[2]+.1],[1,0,1])),this._leftLeaf&&(Et(e,this._leftLeaf.min,this._leftLeaf.max,[.5,.5,0]),e.pushLine([this._max[0]+.1,this._max[1]+.1,this._max[2]+.1],[this._leftLeaf.max[0]+.1,this._leftLeaf.max[1]+.1,this._leftLeaf.max[2]+.1],[1,0,0])),this._rightLeaf&&(Et(e,this._rightLeaf.min,this._rightLeaf.max,[.5,.5,0]),e.pushLine([this._max[0]+.1,this._max[1]+.1,this._max[2]+.1],[this._rightLeaf.max[0]+.1,this._rightLeaf.max[1]+.1,this._rightLeaf.max[2]+.1],[1,0,0]))}}Rt.s_index=0;class At{constructor(){this._allShapes=[]}reset(){this._allShapes.length=0,this._rootNode=void 0}synchronize(e,t,i){this.reset();let r=0;for(const t of e){const e=M(Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER),i=M(Number.MIN_SAFE_INTEGER,Number.MIN_SAFE_INTEGER,Number.MIN_SAFE_INTEGER);e[0]=Math.min(e[0],t.position[0]-t.radius),e[1]=Math.min(e[1],t.position[1]-t.radius),e[2]=Math.min(e[2],t.position[2]-t.radius),i[0]=Math.max(i[0],t.position[0]+t.radius),i[1]=Math.max(i[1],t.position[1]+t.radius),i[2]=Math.max(i[2],t.position[2]+t.radius),i[0]-e[0]<St&&(i[0]+=St),i[1]-e[1]<St&&(i[1]+=St),i[2]-e[2]<St&&(i[2]+=St),this._allShapes.push({index:r++,type:"sphere",shape:t,min:e,max:i})}for(const e of t){const t=M(Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER),i=M(Number.MIN_SAFE_INTEGER,Number.MIN_SAFE_INTEGER,Number.MIN_SAFE_INTEGER);[M(-e.boxSize[0],-e.boxSize[1],-e.boxSize[2]),M(+e.boxSize[0],-e.boxSize[1],-e.boxSize[2]),M(-e.boxSize[0],+e.boxSize[1],-e.boxSize[2]),M(+e.boxSize[0],+e.boxSize[1],-e.boxSize[2]),M(-e.boxSize[0],-e.boxSize[1],+e.boxSize[2]),M(+e.boxSize[0],-e.boxSize[1],+e.boxSize[2]),M(-e.boxSize[0],+e.boxSize[1],+e.boxSize[2]),M(+e.boxSize[0],+e.boxSize[1],+e.boxSize[2])].forEach((r=>{const n=M(0,0,0),s=E(w());A(s,s,e.position),R(s,s,C(w(),e.orientation)),U(n,r,s),t[0]=Math.min(t[0],n[0]),t[1]=Math.min(t[1],n[1]),t[2]=Math.min(t[2],n[2]),i[0]=Math.max(i[0],n[0]),i[1]=Math.max(i[1],n[1]),i[2]=Math.max(i[2],n[2])})),i[0]-t[0]<St&&(i[0]+=St),i[1]-t[1]<St&&(i[1]+=St),i[2]-t[2]<St&&(i[2]+=St),this._allShapes.push({index:r++,type:"box",shape:e,min:t,max:i})}for(const e of i){const t=M(Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER),i=M(Number.MIN_SAFE_INTEGER,Number.MIN_SAFE_INTEGER,Number.MIN_SAFE_INTEGER);t[0]=Math.min(t[0],e.v0[0]),t[1]=Math.min(t[1],e.v0[1]),t[2]=Math.min(t[2],e.v0[2]),i[0]=Math.max(i[0],e.v0[0]),i[1]=Math.max(i[1],e.v0[1]),i[2]=Math.max(i[2],e.v0[2]),t[0]=Math.min(t[0],e.v1[0]),t[1]=Math.min(t[1],e.v1[1]),t[2]=Math.min(t[2],e.v1[2]),i[0]=Math.max(i[0],e.v1[0]),i[1]=Math.max(i[1],e.v1[1]),i[2]=Math.max(i[2],e.v1[2]),t[0]=Math.min(t[0],e.v2[0]),t[1]=Math.min(t[1],e.v2[1]),t[2]=Math.min(t[2],e.v2[2]),i[0]=Math.max(i[0],e.v2[0]),i[1]=Math.max(i[1],e.v2[1]),i[2]=Math.max(i[2],e.v2[2]),i[0]-t[0]<St&&(i[0]+=St),i[1]-t[1]<St&&(i[1]+=St),i[2]-t[2]<St&&(i[2]+=St),this._allShapes.push({index:r++,type:"triangle",shape:e,min:t,max:i})}const n=M(Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER),s=M(Number.MIN_SAFE_INTEGER,Number.MIN_SAFE_INTEGER,Number.MIN_SAFE_INTEGER);for(const e of this._allShapes)n[0]=Math.min(n[0],e.min[0]),n[1]=Math.min(n[1],e.min[1]),n[2]=Math.min(n[2],e.min[2]),s[0]=Math.max(s[0],e.max[0]),s[1]=Math.max(s[1],e.max[1]),s[2]=Math.max(s[2],e.max[2]);this._rootNode=Rt.buildBvhGraph(n,s,this._allShapes)}fillDataTexture(e){var t,i,r,n,s,a,o,c;if(!this._rootNode)return;const d=[],h=e=>{d.push(e),e._leftNode&&h(e._leftNode),e._rightNode&&h(e._rightNode)};h(this._rootNode),d.sort(((e,t)=>e._index-t._index));for(const h of d)e.push(h._min[0],h._min[1],h._min[2],h._max[0]),e.push(h._max[1],h._max[2],(null!==(i=null===(t=h._leftNode)||void 0===t?void 0:t._index)&&void 0!==i?i:-2)+.5,(null!==(n=null===(r=h._rightNode)||void 0===r?void 0:r._index)&&void 0!==n?n:-2)+.5),e.push((null!==(a=null===(s=h._leftLeaf)||void 0===s?void 0:s.index)&&void 0!==a?a:-2)+.5,(null!==(c=null===(o=h._rightLeaf)||void 0===o?void 0:o.index)&&void 0!==c?c:-2)+.5,0,0)}renderDebugWireframe(e){if(this._rootNode){this._rootNode.render(e,[.5,0,0]);for(const t of this._allShapes)Et(e,t.min,t.max,[1,1,0])}}}const Ct=2048;class Dt{constructor(e,t){this._dataValues=new Float32Array(Ct),this._currentIndex=0,this._textureUniformName=e,this._lengthUniformName=t,this._dataTexture=new ue,this._dataTexture.initialize(Ct)}push(e,t,i,r){if(this._currentIndex>=Ct)throw new Error("not more space left in the GpuDataTexture, max length is 2048.");this._dataValues[4*this._currentIndex+0]=e,this._dataValues[4*this._currentIndex+1]=t,this._dataValues[4*this._currentIndex+2]=i,this._dataValues[4*this._currentIndex+3]=r,this._currentIndex+=1}clear(){this._currentIndex=0}syncGpuDataLength(e){if(void 0===this._lengthUniformName)throw new Error("not length uniform name specified for that GpuDataTexture.");e.setInteger1Uniform(this._lengthUniformName,this._currentIndex)}syncGpuData(){this._dataTexture.preBind((e=>{e.updateFromBuffer(0,this._dataValues)}))}setForShader(e,t){e.setInteger1Uniform(this._textureUniformName,t)}}const{WebGLContext:Pt,DataTextureVec4f32:Mt,ShaderProgram:kt,GeometryWrapper:It}=Pe;class zt{constructor(e){this._spheres=[],this._boxes=[],this._triangles=[],this._basicMaterialsPerAliases=new Map,this._allBasicMaterials=[],this._chessboardMaterialsPerAliases=new Map,this._allChessboardMaterials=[],this._spotLights=[],this._bvhTree=new At,this._cameraFovy=e.fovy,this._renderWidth=e.width,this._renderHeight=e.height,this._rayTracerShaderProgram=new kt("RayTracerRenderer-1",{vertexSrc:Tt,fragmentSrc:wt,attributes:["a_vertexPosition","a_plotPosition"],uniforms:["u_cameraEye","u_useBvh","u_sceneTextureData","u_sceneTextureSize","u_materialsTextureData","u_lightsTextureData","u_lightsTextureSize","u_bvhDataTexture"]});const t=new It.GeometryBuilder;t.reset().setPrimitiveType("triangleStrip").addVbo().addVboAttribute("a_vertexPosition","vec2f").addVbo().setVboAsDynamic().addVboAttribute("a_plotPosition","vec3f"),this._rayTracerGeometry=new It.Geometry(this._rayTracerShaderProgram,t.getDef());const i=[];i.push(1,1),i.push(-1,1),i.push(1,-1),i.push(-1,-1),this._rayTracerGeometry.allocateBuffer(0,i,i.length),this._rayTracerGeometry.setPrimitiveStart(0),this._rayTracerGeometry.setPrimitiveCount(4),this._sceneDataTexture=new Dt("u_sceneTextureData","u_sceneTextureSize"),this._materialsDataTexture=new Dt("u_materialsTextureData"),this._lightsDataTexture=new Dt("u_lightsTextureData","u_lightsTextureSize"),this._bvhDataTexture=new Dt("u_bvhDataTexture"),this._camera={position:M(0,0,0),target:M(1.5,1.5,1.5),up:M(0,1,0)}}pushBasicMaterial(e){if(this._basicMaterialsPerAliases.has(e.materialAlias))throw new Error(`duplicated basic material alias -> "${e.materialAlias}"`);if(e.reflectionFactor<0||e.reflectionFactor>1)throw new Error("invalid sphere reflection");if(e.refractionFactor<0||e.refractionFactor>1)throw new Error("invalid sphere refractionFactor");const t=Object.assign(Object.assign({},e),{materialType:0});this._allBasicMaterials.push(t),this._basicMaterialsPerAliases.set(t.materialAlias,t)}pushChessboardMaterial(e){if(this._chessboardMaterialsPerAliases.has(e.materialAlias))throw new Error(`duplicated chessboard material alias -> "${e.materialAlias}"`);if(!this._basicMaterialsPerAliases.has(e.materialAliasA))throw new Error(`missing material alias A -> "${e.materialAliasA}"`);if(!this._basicMaterialsPerAliases.has(e.materialAliasB))throw new Error(`missing material alias B -> "${e.materialAliasB}"`);const t=Object.assign(Object.assign({},e),{materialType:0});this._allChessboardMaterials.push(t),this._chessboardMaterialsPerAliases.set(t.materialAlias,t)}pushSphere({position:e,orientation:t,radius:i,materialAlias:r}){if(i<=0)throw new Error("invalid sphere radius");if(!this._basicMaterialsPerAliases.has(r)&&!this._chessboardMaterialsPerAliases.has(r))throw new Error(`not found material alias -> "${r}"`);this._spheres.push({position:[e[0],e[1],e[2]],orientation:[t[0],t[1],t[2],t[3]],radius:i,materialAlias:r})}pushBox({position:e,orientation:t,boxSize:i,materialAlias:r}){if(i[0]<=0||i[1]<=0||i[2]<=0)throw new Error("invalid box size");if(!this._basicMaterialsPerAliases.has(r)&&!this._chessboardMaterialsPerAliases.has(r))throw new Error(`not found material alias -> "${r}"`);this._boxes.push({position:[e[0],e[1],e[2]],orientation:[t[0],t[1],t[2],t[3]],boxSize:P(i),materialAlias:r})}pushTriangle({v0:e,v1:t,v2:i,materialAlias:r}){if(!this._basicMaterialsPerAliases.has(r)&&!this._chessboardMaterialsPerAliases.has(r))throw new Error(`not found material alias -> "${r}"`);this._triangles.push({v0:P(e),v1:P(t),v2:P(i),materialAlias:r})}pushSpotLight({position:e,intensity:t,radius:i}){if(t<=0)throw new Error("intensity cannot be <= 0");if(i<=0)throw new Error("radius cannot be <= 0");this._spotLights.push({position:P(e),intensity:t,radius:i})}lookAt(e,t,i){k(this._camera.position,e);let r=G(D(),t,e);r=L(r,r),r=I(r,e,r),k(this._camera.target,r);const n=L(D(),i);k(this._camera.up,n)}render(){const e=Pt.getContext(),t=this._computeCameraFarCornersBufferGeometry();this._rayTracerGeometry.allocateBuffer(1,t,t.length),this._sceneDataTexture.clear(),this._materialsDataTexture.clear(),this._lightsDataTexture.clear(),this._bvhDataTexture.clear();{let e=0;const t=new Map;this._allBasicMaterials.forEach((i=>{t.set(i.materialAlias,e),e+=1,this._materialsDataTexture.push(.5,.5+(i.castShadowEnabled?1:0),i.reflectionFactor,i.refractionFactor),this._materialsDataTexture.push(i.receiveLightEnabled?1:0,i.color[0],i.color[1],i.color[2])})),this._allChessboardMaterials.forEach((i=>{t.set(i.materialAlias,e),e+=1;const r=t.get(i.materialAliasA),n=t.get(i.materialAliasB);if(void 0===r||void 0===n)throw new Error("chessboard material, associated basic material not found");this._materialsDataTexture.push(1.5,.5+(i.castShadowEnabled?1:0),r+.5,n+.5),this._materialsDataTexture.push(i.chessboardArgs?i.chessboardArgs[0]:1,i.chessboardArgs?i.chessboardArgs[1]:1,i.chessboardArgs?i.chessboardArgs[2]:1,0)}));for(const e of this._spheres){const i=t.get(e.materialAlias);if(void 0===i)throw new Error(`sphere materialAlias not found ${e.materialAlias}`);const r=1;this._sceneDataTexture.push(r+.5,i+.5,e.position[0],e.position[1]),this._sceneDataTexture.push(e.position[2],e.orientation[0],e.orientation[1],e.orientation[2]),this._sceneDataTexture.push(e.orientation[3],e.radius,0,0)}for(const e of this._boxes){const i=t.get(e.materialAlias);if(void 0===i)throw new Error(`box materialAlias not found ${e.materialAlias}`);const r=2;this._sceneDataTexture.push(r+.5,i+.5,e.position[0],e.position[1]),this._sceneDataTexture.push(e.position[2],e.orientation[0],e.orientation[1],e.orientation[2]),this._sceneDataTexture.push(e.orientation[3],e.boxSize[0],e.boxSize[1],e.boxSize[2])}for(const e of this._triangles){const i=t.get(e.materialAlias);if(void 0===i)throw new Error(`triangle materialAlias not found ${e.materialAlias}`);const r=3;this._sceneDataTexture.push(r+.5,i+.5,e.v0[0],e.v0[1]),this._sceneDataTexture.push(e.v0[2],e.v1[0],e.v1[1],e.v1[2]),this._sceneDataTexture.push(e.v2[0],e.v2[1],e.v2[2],0)}}for(const e of this._spotLights)this._lightsDataTexture.push(e.position[0],e.position[1],e.position[2],e.radius),this._lightsDataTexture.push(e.intensity,0,0,0);this._bvhTree.synchronize(this._spheres,this._boxes,this._triangles),this._bvhTree.fillDataTexture(this._bvhDataTexture),e.viewport(0,0,this._renderWidth,this._renderHeight),e.clear(e.COLOR_BUFFER_BIT),this._rayTracerShaderProgram.bind((t=>{t.setFloat3Uniform("u_cameraEye",this._camera.position[0],this._camera.position[1],this._camera.position[2]),t.setInteger1Uniform("u_useBvh",1);{const i=0;e.activeTexture(e.TEXTURE0+i),this._sceneDataTexture.syncGpuDataLength(t),this._sceneDataTexture.syncGpuData(),this._sceneDataTexture.setForShader(t,i)}{const i=7;e.activeTexture(e.TEXTURE0+i),this._materialsDataTexture.syncGpuData(),this._materialsDataTexture.setForShader(t,i)}{const i=1;e.activeTexture(e.TEXTURE0+i),this._lightsDataTexture.syncGpuDataLength(t),this._lightsDataTexture.syncGpuData(),this._lightsDataTexture.setForShader(t,i)}{const i=6;e.activeTexture(e.TEXTURE0+i),this._bvhDataTexture.syncGpuData(),this._bvhDataTexture.setForShader(t,i)}this._rayTracerGeometry.render()}))}reset(){this._spotLights.length=0,this._chessboardMaterialsPerAliases.clear(),this._allBasicMaterials.length=0,this._basicMaterialsPerAliases.clear(),this._allChessboardMaterials.length=0,this._spheres.length=0,this._boxes.length=0,this._triangles.length=0}bvhRenderDebugWireframe(e){this._bvhTree.renderDebugWireframe(e)}setRenderSize(e,t){e<100||t<100||(this._renderWidth=Math.floor(e),this._renderHeight=Math.floor(t))}getCurrentSize(){return[this._renderWidth,this._renderHeight]}_computeCameraFarCornersBufferGeometry(){const e=G(D(),this._camera.target,this._camera.position),t=N(D(),e,this._camera.up),i=N(D(),t,e),r=.5*this._cameraFovy*Math.PI/180,n=1*Math.cos(r)/Math.sin(r),s=F(D(),e,M(n,n,n)),a=I(D(),this._camera.position,s),o=this._renderWidth/this._renderHeight,c=F(D(),t,M(o,o,o)),d=I(D(),a,i),h=z(D(),a,i),f=z(D(),d,c),l=z(D(),h,c),u=I(D(),d,c),_=I(D(),h,c);return[u[0],u[1],u[2],f[0],f[1],f[2],_[0],_[1],_[2],l[0],l[1],l[2]]}get renderWidth(){return this._renderWidth}get renderHeight(){return this._renderHeight}get camera(){return this._camera}get basicMaterials(){return this._allBasicMaterials}get spheres(){return this._spheres}get boxes(){return this._boxes}get triangles(){return this._triangles}get spotLights(){return this._spotLights}}var Ft="\n#version 300 es\n\nprecision highp float;\n\nin vec2 a_vertexPosition;\nin vec2 a_vertexTextureCoord;\n\nout vec2 v_textureCoord;\n\nvoid main(void)\n{\n  v_textureCoord = a_vertexTextureCoord;\n\n  gl_Position = vec4(a_vertexPosition, 1.0, 1.0);\n}\n".trim(),Bt="\n#version 300 es\n\nprecision highp float;\n\nuniform sampler2D u_texture;\nuniform vec2 u_step;\n\nin vec2 v_textureCoord;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  // gl_FragColor = texture(u_texture, v_textureCoord);\n\n  float total = 0.0;\n  vec4 accumulated = vec4(0.0);\n\n  //\n\n  if (v_textureCoord.x - u_step.x > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x - u_step.x, v_textureCoord.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.x + u_step.x > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x + u_step.x, v_textureCoord.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.y - u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x, v_textureCoord.y - u_step.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.y + u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x, v_textureCoord.y + u_step.y));\n    total += 1.0;\n  }\n\n  //\n\n  if (v_textureCoord.x - u_step.x > 0.0 && v_textureCoord.y - u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x - u_step.x, v_textureCoord.y - u_step.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.x + u_step.x > 0.0 && v_textureCoord.y - u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x + u_step.x, v_textureCoord.y - u_step.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.x - u_step.x > 0.0 && v_textureCoord.y + u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x - u_step.x, v_textureCoord.y + u_step.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.x + u_step.x > 0.0 && v_textureCoord.y + u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x + u_step.x, v_textureCoord.y + u_step.y));\n    total += 1.0;\n  }\n\n  //\n\n  if (total > 0.0) {\n    o_color = accumulated / total;\n  } else {\n    o_color = vec4(1.0, 0.0, 0.0, 1.0); // warning\n  }\n}\n".trim(),Lt="\n#version 300 es\n\nprecision highp float;\n\nin vec2 a_vertexPosition;\nin vec2 a_vertexTextureCoord;\n\nout vec2 v_textureCoord;\n\nvoid main(void)\n{\n  v_textureCoord = a_vertexTextureCoord;\n\n  gl_Position = vec4(a_vertexPosition, 1.0, 1.0);\n}\n".trim(),Nt="\n#version 300 es\n\nprecision highp float;\n\nuniform sampler2D u_texture;\n\n\n\n// https://www.shadertoy.com/view/4ll3RB\n\n#define r vec2(800, 600)\n// #define t 0\n\n#define zoom 1.\n#define P(id, a, b, c, d, e, f, g, h)   if ( id == int(pos.y) ) {     int pa = a + 2 * (b + 2 * (c + 2 * (d + 2 * (e + 2 * (f + 2 * (g + 2 * (h)))))));     cha = floor(mod(float(pa)/pow(2.0,float(pos.x)-1.0),2.0));   }\n\nfloat gray(vec3 _i)\n{\n  return _i.x*0.299+_i.y*0.587+_i.z*0.114;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = vec2(floor(fragCoord.x/8./zoom)*8.*zoom,floor(fragCoord.y/12./zoom)*12.*zoom)/r;\n  ivec2 pos = ivec2(mod(fragCoord.x/zoom,8.),mod(fragCoord.y/zoom,12.));\n  vec4 tex = texture(u_texture,uv);\n  float cha = 0.;\n\n  float g = gray(tex.xyz);\n  if( g < .125 ) // nothing\n  {\n    P(11,0,0,0,0,0,0,0,0);\n    P(10,0,0,0,0,0,0,0,0);\n    P(9,0,0,0,0,0,0,0,0);\n    P(8,0,0,0,0,0,0,0,0);\n    P(7,0,0,0,0,0,0,0,0);\n    P(6,0,0,0,0,0,0,0,0);\n    P(5,0,0,0,0,0,0,0,0);\n    P(4,0,0,0,0,0,0,0,0);\n    P(3,0,0,0,0,0,0,0,0);\n    P(2,0,0,0,0,0,0,0,0);\n    P(1,0,0,0,0,0,0,0,0);\n    P(0,0,0,0,0,0,0,0,0);\n  }\n  else if( g < .25 ) // .\n  {\n    P(11,0,0,0,0,0,0,0,0);\n    P(10,0,0,0,0,0,0,0,0);\n    P(9,0,0,0,0,0,0,0,0);\n    P(8,0,0,0,0,0,0,0,0);\n    P(7,0,0,0,0,0,0,0,0);\n    P(6,0,0,0,0,0,0,0,0);\n    P(5,0,0,0,0,0,0,0,0);\n    P(4,0,0,0,1,1,0,0,0);\n    P(3,0,0,0,1,1,0,0,0);\n    P(2,0,0,0,0,0,0,0,0);\n    P(1,0,0,0,0,0,0,0,0);\n    P(0,0,0,0,0,0,0,0,0);\n  }\n  else if( g < .375 ) // ,\n  {\n    P(11,0,0,0,0,0,0,0,0);\n    P(10,0,0,0,0,0,0,0,0);\n    P(9,0,0,0,0,0,0,0,0);\n    P(8,0,0,0,0,0,0,0,0);\n    P(7,0,0,0,0,0,0,0,0);\n    P(6,0,0,0,0,0,0,0,0);\n    P(5,0,0,0,0,0,0,0,0);\n    P(4,0,0,0,1,1,0,0,0);\n    P(3,0,0,0,1,1,0,0,0);\n    P(2,0,0,0,0,1,0,0,0);\n    P(1,0,0,0,1,0,0,0,0);\n    P(0,0,0,0,0,0,0,0,0);\n  }\n  else if( g < .5 ) // -\n  {\n    P(11,0,0,0,0,0,0,0,0);\n    P(10,0,0,0,0,0,0,0,0);\n    P(9,0,0,0,0,0,0,0,0);\n    P(8,0,0,0,0,0,0,0,0);\n    P(7,0,0,0,0,0,0,0,0);\n    P(6,1,1,1,1,1,1,1,0);\n    P(5,0,0,0,0,0,0,0,0);\n    P(4,0,0,0,0,0,0,0,0);\n    P(3,0,0,0,0,0,0,0,0);\n    P(2,0,0,0,0,0,0,0,0);\n    P(1,0,0,0,0,0,0,0,0);\n    P(0,0,0,0,0,0,0,0,0);\n  }\n  else if(g < .625 ) // +\n  {\n    P(11,0,0,0,0,0,0,0,0);\n    P(10,0,0,0,0,0,0,0,0);\n    P(9,0,0,0,1,0,0,0,0);\n    P(8,0,0,0,1,0,0,0,0);\n    P(7,0,0,0,1,0,0,0,0);\n    P(6,1,1,1,1,1,1,1,0);\n    P(5,0,0,0,1,0,0,0,0);\n    P(4,0,0,0,1,0,0,0,0);\n    P(3,0,0,0,1,0,0,0,0);\n    P(2,0,0,0,0,0,0,0,0);\n    P(1,0,0,0,0,0,0,0,0);\n    P(0,0,0,0,0,0,0,0,0);\n  }\n  else if(g < .75 ) // *\n  {\n    P(11,0,0,0,0,0,0,0,0);\n    P(10,0,0,0,1,0,0,0,0);\n    P(9,1,0,0,1,0,0,1,0);\n    P(8,0,1,0,1,0,1,0,0);\n    P(7,0,0,1,1,1,0,0,0);\n    P(6,0,0,0,1,0,0,0,0);\n    P(5,0,0,1,1,1,0,0,0);\n    P(4,0,1,0,1,0,1,0,0);\n    P(3,1,0,0,1,0,0,1,0);\n    P(2,0,0,0,1,0,0,0,0);\n    P(1,0,0,0,0,0,0,0,0);\n    P(0,0,0,0,0,0,0,0,0);\n  }\n  else if(g < .875 ) // #\n  {\n    P(11,0,0,0,0,0,0,0,0);\n    P(10,0,0,1,0,0,1,0,0);\n    P(9,0,0,1,0,0,1,0,0);\n    P(8,1,1,1,1,1,1,1,0);\n    P(7,0,0,1,0,0,1,0,0);\n    P(6,0,0,1,0,0,1,0,0);\n    P(5,0,1,0,0,1,0,0,0);\n    P(4,0,1,0,0,1,0,0,0);\n    P(3,1,1,1,1,1,1,1,0);\n    P(2,0,1,0,0,1,0,0,0);\n    P(1,0,1,0,0,1,0,0,0);\n    P(0,0,0,0,0,0,0,0,0);\n  }\n  else // @\n  {\n    P(11,0,0,0,0,0,0,0,0);\n    P(10,0,0,1,1,1,1,0,0);\n    P(9,0,1,0,0,0,0,1,0);\n    P(8,1,0,0,0,1,1,1,0);\n    P(7,1,0,0,1,0,0,1,0);\n    P(6,1,0,0,1,0,0,1,0);\n    P(5,1,0,0,1,0,0,1,0);\n    P(4,1,0,0,1,0,0,1,0);\n    P(3,1,0,0,1,1,1,1,0);\n    P(2,0,1,0,0,0,0,0,0);\n    P(1,0,0,1,1,1,1,1,0);\n    P(0,0,0,0,0,0,0,0,0);\n  }\n\n  vec3 col = tex.xyz/max(tex.x,max(tex.y,tex.z));\n  fragColor = vec4(cha*col,1.);\n}\n\nin vec2 v_textureCoord;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  mainImage(o_color, v_textureCoord * r);\n  // mainImage(o_color, vec2(gl_FragCoord));\n\n}\n".trim();const{WebGLContext:Ut,Texture:Vt,FrameBuffer:Gt,ShaderProgram:Ot,GeometryWrapper:Wt}=Pe;class Xt{constructor(e){this._resolutionCoef=1,this._antiAliasing=!1,this._width=e.width,this._height=e.height,this._textureShaderProgram=new Ot("RayTracerRenderer-1",{vertexSrc:Ft,fragmentSrc:Bt,attributes:["a_vertexPosition","a_vertexTextureCoord"],uniforms:["u_texture","u_step"]}),this._asciiArtShaderProgram=new Ot("RayTracerRenderer-ascii-art",{vertexSrc:Lt,fragmentSrc:Nt,attributes:["a_vertexPosition","a_vertexTextureCoord"],uniforms:["u_texture"]}),this._finalTexture=new Vt,this._frameBuffer=new Gt,this._finalTexture.initialize(),this._finalTexture.preBind((e=>{e.allocate(this._width,this._height),this._frameBuffer.bind((t=>{t.attachTexture(e)}))}));const t=new Wt.GeometryBuilder,i=[];i.push(1,1,1,1),i.push(-1,1,0,1),i.push(1,-1,1,0),i.push(-1,-1,0,0),t.reset().setPrimitiveType("triangleStrip").addVbo().addVboAttribute("a_vertexPosition","vec2f").addVboAttribute("a_vertexTextureCoord","vec2f"),this._screenGeometry=new Wt.Geometry(this._asciiArtShaderProgram,t.getDef()),this._screenGeometry.allocateBuffer(0,i,i.length),this._screenGeometry.setPrimitiveStart(0),this._screenGeometry.setPrimitiveCount(4),this._asciiArtScreenGeometry=new Wt.Geometry(this._asciiArtShaderProgram,t.getDef()),this._asciiArtScreenGeometry.allocateBuffer(0,i,i.length),this._asciiArtScreenGeometry.setPrimitiveStart(0),this._asciiArtScreenGeometry.setPrimitiveCount(4)}render(){const e=Ut.getContext();e.viewport(0,0,this._width,this._height),e.clear(e.COLOR_BUFFER_BIT),this._textureShaderProgram.bind((e=>{e.setTextureUniform("u_texture",this._finalTexture,0),this._antiAliasing||e.setFloat2Uniform("u_step",0,0),this._screenGeometry.render()}))}renderAsciiArt(){const e=Ut.getContext();e.viewport(0,0,this._width,this._height),e.clear(e.COLOR_BUFFER_BIT),this._asciiArtShaderProgram.bind((e=>{e.setTextureUniform("u_texture",this._finalTexture,0),this._asciiArtScreenGeometry.render()}))}setRenderSize(e,t){const i=Math.floor(e),r=Math.floor(t);this._finalTexture.preBind((e=>{e.resize(i,r)}))}capture(e){const t=Ut.getContext();this._frameBuffer.bind((()=>{e()})),t.viewport(0,0,this._width,this._height)}getResolutionCoef(){return this._resolutionCoef}setAntiAliasing(e){this._antiAliasing=e}getAntiAliasing(){return this._antiAliasing}get canvasWidth(){return this._width}get canvasHeight(){return this._height}}const{WebGLContext:Ht,Texture:Yt,FrameBuffer:$t,ShaderProgram:qt,GeometryWrapper:jt}=Pe;class Kt{constructor(e){this._resolutionCoef=1,this._antiAliasing=!1,this._canvasWidth=e.canvasWidth,this._canvasHeight=e.canvasHeight,this._rayTracerPass=new zt({width:e.canvasWidth,height:e.canvasHeight,fovy:e.fovy}),this._postProcessPass=new Xt({width:e.canvasWidth,height:e.canvasHeight})}render(){this._renderTexturePass(),this._renderRayTracingPass()}renderAsciiArt(){this._renderAsciiArtTexturePass(),this._renderRayTracingPass()}_renderTexturePass(){const e=Ht.getContext();e.viewport(0,0,this._canvasWidth,this._canvasHeight),e.clear(e.COLOR_BUFFER_BIT),this._postProcessPass.render()}_renderAsciiArtTexturePass(){const e=Ht.getContext();e.viewport(0,0,this._canvasWidth,this._canvasHeight),e.clear(e.COLOR_BUFFER_BIT),this._postProcessPass.renderAsciiArt()}_renderRayTracingPass(){this._postProcessPass.capture((()=>{this._rayTracerPass.render()}))}reset(){this._rayTracerPass.reset()}setResolutionCoef(e){if(e===this._resolutionCoef||e<=0||e>1)return;this._resolutionCoef=e;const t=Math.floor(this._canvasWidth*this._resolutionCoef),i=Math.floor(this._canvasHeight*this._resolutionCoef);this._rayTracerPass.setRenderSize(t,i),this._postProcessPass.setRenderSize(t,i)}getResolutionCoef(){return this._resolutionCoef}setAntiAliasing(e){this._antiAliasing=e}getAntiAliasing(){return this._antiAliasing}getCurrentSize(){return this._rayTracerPass.getCurrentSize()}get canvasWidth(){return this._canvasWidth}get canvasHeight(){return this._canvasHeight}get rayTracerPass(){return this._rayTracerPass}}const{WebGLContext:Zt}=Pe,{Camera:Qt}=oe,{TextRenderer:Jt,StackRenderers:ei}=it;class ti{constructor(e){this._debugSceneCamera=new Qt,this._mainHudCamera=new Qt,this._def=e,this.resize(this._def.width,this._def.height),this._rayTracerRenderer=new Kt({canvasWidth:this._def.width,canvasHeight:this._def.height,fovy:70}),this._textRenderer=new Jt,this._stackRenderers=new ei,this._multipleBuffering=new Ue(this._def.width,this._def.height)}initialize(){const e=Zt.getContext();e.disable(e.DEPTH_TEST),e.disable(e.BLEND),e.disable(e.CULL_FACE),e.depthFunc(e.NEVER),e.clearColor(0,0,0,1),e.clearDepth(1)}resize(e,t){this._debugSceneCamera.setViewportSize(e,t),this._debugSceneCamera.setAsPerspective({fovy:70,near:1,far:500}),this._mainHudCamera.setViewportSize(e,t);const i=.5*e,r=.5*t;this._mainHudCamera.setAsOrthogonal({left:-i,right:+i,top:-r,bottom:+r,near:-200,far:200}),this._mainHudCamera.setEye([i,r,1]),this._mainHudCamera.setTarget([i,r,0]),this._mainHudCamera.setUpAxis([0,1,0]),this._mainHudCamera.computeMatrices()}_pushWireFrameSphere(e,t){const i=.5257311121191336*e.radius,r=.8506508083520399*e.radius,n=[];[[-i,0,r],[i,0,r],[-i,0,-r],[i,0,-r],[0,r,i],[0,r,-i],[0,-r,i],[0,-r,-i],[r,i,0],[-r,i,0],[r,-i,0],[-r,-i,0]].forEach((t=>{const i=M(0,0,0),r=E(w());A(r,r,e.position),R(r,r,C(w(),e.orientation)),U(i,t,r),n.push(i)}));const s=[[0,4,1],[0,9,4],[9,5,4],[4,5,8],[4,8,1],[8,10,1],[8,3,10],[5,3,8],[5,2,3],[2,7,3],[7,10,3],[7,6,10],[7,11,6],[11,0,6],[0,1,6],[6,1,10],[9,0,11],[9,11,2],[9,2,5],[7,2,11]];for(const e of s){const i=n[e[0]],r=n[e[1]],s=n[e[2]];this._stackRenderers.pushLine(i,r,t),this._stackRenderers.pushLine(r,s,t),this._stackRenderers.pushLine(s,i,t)}}_pushWireFrameBox(e,t){const i=[M(-e.boxSize[0],-e.boxSize[1],-e.boxSize[2]),M(+e.boxSize[0],-e.boxSize[1],-e.boxSize[2]),M(-e.boxSize[0],+e.boxSize[1],-e.boxSize[2]),M(+e.boxSize[0],+e.boxSize[1],-e.boxSize[2]),M(-e.boxSize[0],-e.boxSize[1],+e.boxSize[2]),M(+e.boxSize[0],-e.boxSize[1],+e.boxSize[2]),M(-e.boxSize[0],+e.boxSize[1],+e.boxSize[2]),M(+e.boxSize[0],+e.boxSize[1],+e.boxSize[2])],r=[];i.forEach((t=>{const i=M(0,0,0),n=E(w());A(n,n,e.position),R(n,n,C(w(),e.orientation)),U(i,t,n),r.push(i)})),[[0,1],[1,3],[3,2],[2,0],[4,5],[5,7],[7,6],[6,4],[0,4],[1,5],[3,7],[2,6]].forEach((e=>{this._stackRenderers.pushLine(r[e[0]],r[e[1]],t)}))}_pushWireFrameTriangle(e,t){this._stackRenderers.pushLine(e.v0,e.v1,t),this._stackRenderers.pushLine(e.v1,e.v2,t),this._stackRenderers.pushLine(e.v2,e.v0,t)}safeSceneWireFrame(e){this._debugSceneCamera.setEye(this._rayTracerRenderer.rayTracerPass.camera.position),this._debugSceneCamera.setTarget(this._rayTracerRenderer.rayTracerPass.camera.target),this._debugSceneCamera.setUpAxis(this._rayTracerRenderer.rayTracerPass.camera.up),this._debugSceneCamera.computeMatrices(),this._stackRenderers.safeRender(this._debugSceneCamera.getComposedMatrix(),e)}flushHudWireFrame(){this._stackRenderers.flush(this._mainHudCamera.getComposedMatrix())}flushHudText(){this._textRenderer.flush(this._mainHudCamera.getComposedMatrix())}bvhRenderDebugWireframe(){this._rayTracerRenderer.rayTracerPass.bvhRenderDebugWireframe(this._stackRenderers);const e=[1,1,1];this._rayTracerRenderer.rayTracerPass.spheres.forEach((t=>{this._pushWireFrameSphere(t,e)})),this._rayTracerRenderer.rayTracerPass.boxes.forEach((t=>{this._pushWireFrameBox(t,e)})),this._rayTracerRenderer.rayTracerPass.triangles.forEach((t=>{this._pushWireFrameTriangle(t,e)}))}get rayTracerRenderer(){return this._rayTracerRenderer}get stackRenderers(){return this._stackRenderers}get textRenderer(){return this._textRenderer}get multipleBuffering(){return this._multipleBuffering}get debugSceneCamera(){return this._debugSceneCamera}get mainHudCamera(){return this._mainHudCamera}}let ii=0;const ri=[],ni=[],si=[0,0,20],ai=(e,t,i,r,n,s,a=0,o=0,c=!0,d=!0,h)=>{const f=e.createRigidBody({mass:0,shape:{type:"box",size:[1.95*r[0],1.95*r[1],1.95*r[2]]},position:t,orientation:i});f.setRestitution(.7),f.setFriction(1),f.disableDeactivation(),ri.push({boxSize:r,color:n,reflectionFactor:s,physicBody:f,refractionFactor:a,chessboardMaterial:o,receiveLightEnabled:c,castShadowEnabled:d,chessboardArgs:h})},oi=(e,t,i,r,n,s,a,o=0,c=!0,d=!0,h=1)=>{const f=e.createRigidBody({mass:h,shape:{type:"box",size:[2*r[0],2*r[1],2*r[2]]},position:t,orientation:i});f.setRestitution(.5),f.setFriction(0),f.disableDeactivation(),ri.push({boxSize:r,color:n,reflectionFactor:s,physicBody:f,refractionFactor:a,chessboardMaterial:o,receiveLightEnabled:c,castShadowEnabled:d})},ci=(e,t,i,r)=>{const n=e.createRigidBody({mass:1,shape:{type:"sphere",radius:i},position:t,orientation:Y(H())});n.setFriction(1),n.setRestitution(r),n.disableDeactivation(),ni.push({radius:i,physicBody:n})};class di{ensureSceneData(e){ri.length>0||(ai(e,[-1,-4,0],$(H(),[0,0,1],1*Math.PI/32),[4,1,2],[1,1,1],.5,0,1),ai(e,[-7,-5,0],$(H(),[1,0,0],1*Math.PI/32),[2,1,2],[1,1,1],.5,0,1),ai(e,[-10,-3,2],$(H(),[1,0,0],1*Math.PI/32),[.25,.25,4],[.5,1,.5],0),ai(e,[-12,-1,2],$(H(),[0,1,0],-1*Math.PI/16),[.5,5,4],[1,1,1],0),ai(e,[-3,-6,4],$(H(),[0,0,1],-1*Math.PI/32),[6,1,2],[1,1,1],.5,0,1),ai(e,[-7.8,-3,5.5],$(H(),[0,1,0],-.125*Math.PI),[1.5,.25,.25],[.5,1,.5],0),ai(e,[-3.8,-3.5,6.5],$(H(),[0,0,1],-1*Math.PI/32),[2.5,.25,.25],[.5,1,.5],0),oi(e,[-6,-3.5,7],$(H(),[1,0,0],0*Math.PI),[.25,4,.25],[.5,1,.5],0,0,0,!0,!0,0),oi(e,[-4.5,-3.5,7],$(H(),[1,0,0],0*Math.PI),[.25,4,.25],[.5,1,.5],0,0,0,!0,!0,0),oi(e,[-3,-3.5,7],$(H(),[1,0,0],0*Math.PI),[.25,4,.25],[.5,1,.5],0,0,0,!0,!0,0),ai(e,[-4,-6.5,9.5],$(H(),[1,0,0],0*Math.PI),[5,.25,4],[.5,1,.5],0),ci(e,[0,10,0],1,.7),ci(e,[-2,10,0],1.5,0),oi(e,[-4,10,0],$(H(),[1,1,1],.25*Math.PI),[1,1,1],[1,0,0],.2,.8,0,!0,!0))}run(e,t,i){this.ensureSceneData(i),i.stepSimulation(e,4,1/60),ii+=e;{const e=Q(.25*ii)*Math.PI*2;si[0]=2*Math.cos(e)-4,si[1]=2-1*Math.sin(e),si[2]=2+2*Math.sin(e)}ri.forEach(((e,t)=>{e.physicBody.getPosition()[1]<-12&&(e.physicBody.setLinearVelocity(0,0,0),e.physicBody.setAngularVelocity(0,0,0),e.physicBody.setPosition(0,10,0))})),ni.forEach(((e,t)=>{e.physicBody.getPosition()[1]<-12&&(e.physicBody.setLinearVelocity(0,0,0),e.physicBody.setAngularVelocity(0,0,0),e.physicBody.setPosition(0,10,0))})),t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:666,color:[1,1,0],reflectionFactor:0,refractionFactor:0,receiveLightEnabled:!1,castShadowEnabled:!1}),t.rayTracerRenderer.rayTracerPass.pushSphere({position:si,orientation:Y(H()),radius:.06125,materialAlias:666}),t.rayTracerRenderer.rayTracerPass.pushSpotLight({position:si,intensity:1,radius:15});{const e=Q(.125*ii),i=.3+1*J(e),r=[];r.push([0,i+0,0]),r.push([.3,i-.6,0]),r.push([0,i-.6,.3]),r.push([-.3,i-.6,-0]),r.push([-0,i-.6,-.3]);const n=E(w());A(n,n,si),function(e,t,i){var r=Math.sin(i),n=Math.cos(i),s=t[0],a=t[1],o=t[2],c=t[3],d=t[8],h=t[9],f=t[10],l=t[11];t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=s*n-d*r,e[1]=a*n-h*r,e[2]=o*n-f*r,e[3]=c*n-l*r,e[8]=s*r+d*n,e[9]=a*r+h*n,e[10]=o*r+f*n,e[11]=c*r+l*n}(n,n,Math.PI*e*8),r.forEach((e=>{U(e,e,n)}));const s=[];s.push([0,1,2]),s.push([0,2,3]),s.push([0,3,4]),s.push([0,4,1]);const a=6e3;t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:a,color:[.5,0,.5],reflectionFactor:0,refractionFactor:0,receiveLightEnabled:!1,castShadowEnabled:!0}),s.forEach((([e,i,n])=>{t.rayTracerRenderer.rayTracerPass.pushTriangle({v0:r[e],v1:r[i],v2:r[n],materialAlias:a})}))}{const e=1001;t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:e,color:[1,1,0],reflectionFactor:0,refractionFactor:.8,castShadowEnabled:!0,receiveLightEnabled:!0}),t.rayTracerRenderer.rayTracerPass.pushBox({position:[-9,2,2],orientation:Y(H()),boxSize:[.05,.5,1.5],materialAlias:e});const i=1002;t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:i,color:[0,1,0],reflectionFactor:0,refractionFactor:.8,castShadowEnabled:!0,receiveLightEnabled:!0}),t.rayTracerRenderer.rayTracerPass.pushBox({position:[-9.2,2,2],orientation:Y(H()),boxSize:[.05,1.5,.5],materialAlias:i})}ri.forEach(((e,i)=>{const r=e.physicBody.getPosition(),n=e.physicBody.getRotation();let s=2001+i;0===e.chessboardMaterial?t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:s,color:e.color,refractionFactor:e.refractionFactor,reflectionFactor:e.reflectionFactor,receiveLightEnabled:e.receiveLightEnabled,castShadowEnabled:e.castShadowEnabled}):(t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:3001+2*i+0,color:e.color,refractionFactor:0,reflectionFactor:0,receiveLightEnabled:e.receiveLightEnabled,castShadowEnabled:e.castShadowEnabled}),t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:3001+2*i+1,color:[0,0,0],refractionFactor:0,reflectionFactor:0,receiveLightEnabled:!0,castShadowEnabled:!0}),t.rayTracerRenderer.rayTracerPass.pushChessboardMaterial({materialAlias:s,castShadowEnabled:!0,materialAliasA:3001+2*i+0,materialAliasB:3001+2*i+1})),t.rayTracerRenderer.rayTracerPass.pushBox({position:r,orientation:n,boxSize:e.boxSize,materialAlias:s})})),ni.forEach(((e,i)=>{const r=e.physicBody.getPosition(),n=e.physicBody.getRotation();if(i%2==0){const e=J(Q(.5*ii)),i=.1+.9*e,a=(s=J(Q(.125*ii)),.5*(1+Math.sin(3.1415926*(s-.5)))),o=[1,1,1];o[0]=ee(a,1,0),o[1]=ee(a,0,0),o[2]=ee(a,1,1),t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:1111,color:[o[0],o[1],o[2]],reflectionFactor:0,refractionFactor:.9,receiveLightEnabled:!0,castShadowEnabled:!0}),t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:1112,color:[1,1,1],reflectionFactor:0,refractionFactor:0,receiveLightEnabled:!0,castShadowEnabled:!0}),t.rayTracerRenderer.rayTracerPass.pushChessboardMaterial({materialAlias:1113,castShadowEnabled:!0,materialAliasA:1111,materialAliasB:1112,chessboardArgs:[1-(.1+.9*a),1-(.1+.9*a),1-(.1+.9*a)]}),t.rayTracerRenderer.rayTracerPass.pushSphere({position:r,orientation:n,radius:1,materialAlias:1113}),t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:668,color:[i*o[0],i*o[1],i*o[2]],reflectionFactor:0,refractionFactor:0,receiveLightEnabled:!1,castShadowEnabled:!1}),t.rayTracerRenderer.rayTracerPass.pushSphere({position:r,orientation:n,radius:.9*i,materialAlias:668}),t.rayTracerRenderer.rayTracerPass.pushSpotLight({position:r,intensity:.1+3.9*e,radius:10})}else t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:669,color:[1,1,1],reflectionFactor:.8,refractionFactor:.8,receiveLightEnabled:!0,castShadowEnabled:!0}),t.rayTracerRenderer.rayTracerPass.pushSphere({position:r,orientation:n,radius:1.5,materialAlias:669});var s})),t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:888,color:[0,0,1],reflectionFactor:.8,refractionFactor:0,receiveLightEnabled:!0,castShadowEnabled:!0}),t.rayTracerRenderer.rayTracerPass.pushSphere({position:[-5,0,-7],orientation:Y(H()),radius:5,materialAlias:888});{const e=[[-10,-1,3],[-10,-.5,2.5],[-10,-1,2],[-10,-.5,3.5],[-10,-1,4],[-10,-2,3]],i=4e3;t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:i,color:[1,.5,.5],reflectionFactor:0,refractionFactor:0,receiveLightEnabled:!0,castShadowEnabled:!0}),t.rayTracerRenderer.rayTracerPass.pushTriangle({v0:e[0],v1:e[1],v2:e[2],materialAlias:i}),t.rayTracerRenderer.rayTracerPass.pushTriangle({v0:e[0],v1:e[4],v2:e[3],materialAlias:i}),t.rayTracerRenderer.rayTracerPass.pushTriangle({v0:e[2],v1:e[5],v2:e[4],materialAlias:i});const r=[];r.push([-10,-.5,2]),r.push([-10,0,2.5]),r.push([-10,-.5,3]),r.push([-10,0,3.5]),r.push([-10,-.5,4]);const n=5e3;t.rayTracerRenderer.rayTracerPass.pushBasicMaterial({materialAlias:n,color:[1,.5,.5],reflectionFactor:0,castShadowEnabled:!0,receiveLightEnabled:!0,refractionFactor:0});for(const e of r)t.rayTracerRenderer.rayTracerPass.pushBox({position:e,orientation:$(H(),[1,0,0],.25*Math.PI),boxSize:[.05,.25,.25],materialAlias:n})}}}const{GlobalMouseManager:hi,GlobalKeyboardManager:fi,GlobalTouchManager:li,GlobalVisibilityManager:ui,GlobalPointerLockManager:_i}=v,{WebGLContext:mi}=Pe,{FreeFlyController:pi}=Z;class gi{constructor(e){this._animationFrameHandle=0,this._resolution=9,this._physicDebugModeEnabled=!1,this._showBvhDebugModeEnabled=!1,this._lastFrameTime=Date.now(),this._currFrameMsecTime=Date.now(),this._frameProfiler=new te,this._perfAutoScalingEnabled=!0,this._framesUntilNextCheck=3,this._scene=new di,this._def=e,this._freeFlyController=new pi({coordinates:["Z","X","Y"],position:[-5,5,10],theta:1.05*Math.PI,phi:.25*-Math.PI,mouseSensibility:6,keyboardSensibility:.55*Math.PI,touchSensibility:8,movingSpeed:16}),fi.activate(),li.activate(this._def.domElement),ui.activate(),ui.addVisibilityChange((e=>{!1===e?(this._def.logger.log("document visibility changed: hidden"),this.stop()):(this._def.logger.log("document visibility changed: visible"),this.start())})),_i.allowPointerLockedOnClickEvent(this._def.domElement),_i.addOnLockChange((()=>{_i.isPointerLocked(this._def.domElement)?(this._def.logger.log("The pointer lock status is now locked"),hi.activate(this._def.domElement)):(this._def.logger.log("The pointer lock status is now unlocked"),hi.deactivate(this._def.domElement),_i.allowPointerLockedOnClickEvent(this._def.domElement))})),_i.addOnLockError((e=>{this._def.logger.log(`The pointer lock sent an error, event: "${JSON.stringify(e)}"`)})),this._renderer=new ti({width:this._def.width,height:this._def.height}),this._renderer.initialize(),this._running=!1,this._errorGraphicContext=!1}init(){return e(this,void 0,void 0,(function*(){yield this._renderer.initialize(),this._physicWorld=new yt.PhysicWorld,this._physicWorld.setGravity(0,-10,0);let e=0;e|=yt.DebugDrawFlags.DBG_DrawWireframe,e|=yt.DebugDrawFlags.DBG_DrawAabb,this._physicWorld.setDebugWireframeFeaturesFlag(e),this._physicWorld.setDebugWireframeCallback(((e,t,i,r,n,s,a,o,c)=>{this._renderer.stackRenderers.pushLine([e,t,i],[r,n,s],[a,o,c])}))}))}start(){this.isRunning()||(this._running=!0,this._tick())}stop(){this.isRunning()&&(this._running=!1,window.cancelAnimationFrame(this._animationFrameHandle))}isRunning(){return this._running&&!this._errorGraphicContext}_tick(){const e=()=>{this._running&&!this._errorGraphicContext&&(this._animationFrameHandle=window.requestAnimationFrame(e),this._mainLoop())};e()}_mainLoop(){const e=Date.now(),t=e-this._lastFrameTime;this._lastFrameTime=e,this._handlePerformanceAutoScaling(t),this._frameProfiler.pushDelta(t);const i=e-this._currFrameMsecTime;this._currFrameMsecTime=e;const r=Math.min(i,100)/1e3;this._freeFlyController.update(r),hi.resetDeltas(),li.resetDeltas(),this._physicWorld&&this._scene.run(r,this._renderer,this._physicWorld),this._renderScene(),this._renderHud()}_renderHud(){const e=mi.getContext();e.viewport(0,0,this._def.width,this._def.height),e.clear(e.DEPTH_BUFFER_BIT),e.enable(e.DEPTH_TEST),e.depthFunc(e.LESS);{const e=[27,260],t=[7,35];Ze([27,165],this._renderer.stackRenderers,this._renderer.textRenderer),Qe(e,this._renderer.stackRenderers,this._renderer.textRenderer),Je(this._def.domElement,t,this._renderer.stackRenderers,this._renderer.textRenderer)}et([10,this._def.height-60,0],[100,50],this._frameProfiler,this._renderer.stackRenderers,this._renderer.textRenderer,!0),this._renderer.flushHudWireFrame(),this._renderer.flushHudText(),this._renderer.rayTracerRenderer.rayTracerPass.reset()}_renderScene(){{const e=mi.getContext();e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.disable(e.DEPTH_TEST)}this._renderer.rayTracerRenderer.rayTracerPass.lookAt(this._freeFlyController.getPosition(),this._freeFlyController.getTarget(),this._freeFlyController.getUpAxis()),this._renderer.rayTracerRenderer.render(),this._physicDebugModeEnabled&&(this._renderer.stackRenderers.clear(),this._renderer.safeSceneWireFrame((()=>{const e=[0,0,0];this._renderer.stackRenderers.pushLine(e,[100,0,0],[1,0,0]),this._renderer.stackRenderers.pushLine(e,[0,100,0],[0,1,0]),this._renderer.stackRenderers.pushLine(e,[0,0,100],[0,0,1]),this._physicWorld.debugDrawWorld()}))),this._showBvhDebugModeEnabled&&(this._renderer.stackRenderers.clear(),this._renderer.safeSceneWireFrame((()=>{const e=[0,0,0];this._renderer.stackRenderers.pushLine(e,[100,0,0],[1,0,0]),this._renderer.stackRenderers.pushLine(e,[0,100,0],[0,1,0]),this._renderer.stackRenderers.pushLine(e,[0,0,100],[0,0,1]),this._renderer.bvhRenderDebugWireframe()})))}setResolution(e){const t=(i=e,Math.min(Math.max(i,0),9));var i;this._resolution=t;const r=1/(10-t);this._renderer.rayTracerRenderer.setResolutionCoef(r)}getResolution(){return this._resolution}setOnResolutionChange(e){this._onResolutionChange=e}setPhysicDebugModeEnabled(e){this._physicDebugModeEnabled=e}setShowBvhDebugModeEnabled(e){this._showBvhDebugModeEnabled=e}setAntiAliasing(e){this._renderer.rayTracerRenderer.setAntiAliasing(e),this._def.logger.log("Anti aliasing change: "+(!0===e?"enabled":"disabled"))}logResolution(){const e=this._renderer.rayTracerRenderer,t=e.getResolutionCoef(),i=e.rayTracerPass.getCurrentSize(),r=i[0]*i[1];this._def.logger.log(`resolution changed (1/${Math.ceil(1/t)}) => ${i[0]}x${i[1]} (${r}px)`)}setPerformanceAutoScaling(e){this._framesUntilNextCheck=3,this._perfAutoScalingEnabled=e,this._def.logger.log("Performance auto scaler change: "+(e?"enabled":"disabled"))}_handlePerformanceAutoScaling(e){if(!0!==this._perfAutoScalingEnabled)return;if(e<=20)return void(this._framesUntilNextCheck=3);if(--this._framesUntilNextCheck,this._framesUntilNextCheck>0)return;this._def.logger.log("performance auto scaling: slow framerate, scaling down resolution");const t=this._resolution-1;t>=0&&t<=9&&(this.setResolution(t),this.logResolution(),this._resolution=t,this._onResolutionChange&&this._onResolutionChange()),this._framesUntilNextCheck=3}}let xi=null,bi=null;const vi=e=>{const t=document.querySelector(e);if(!t)throw new Error(`html element "${e}" not found`);return t},yi=[],Ti=t=>e(void 0,void 0,void 0,(function*(){for(const e of[...yi].reverse())try{yield e(t)}catch(e){}}));yi.push((e=>{if(console.log("onError",e),bi){try{bi.stop()}catch(e){}bi=null}})),window.addEventListener("load",(()=>e(void 0,void 0,void 0,(function*(){try{xi=new rt("loggerOutput"),xi.log("[SETUP] page loaded");const e=vi("#rendering-canvas");yi.push((t=>{o.deactivate(),d.deactivate(e),g.deactivate(e),r.removeAllCallbacks(),m.removeAllCallbacks(),x.removeAllCallbacks(),x.deactivate()}));const t=vi("#auto-scaling-enabled"),i=vi("#resolution"),n=vi("#anti-aliasing-enabled"),s=vi("#debug-mode-enabled"),a=vi("#bvh-debug-mode-enabled"),c=vi("#error-text");if(yi.push((r=>{c.style.width="800px",c.style.height="600px",c.innerHTML=r.message,e.style.display="none",c.style.display="block",t.disabled=!0,i.min=i.max=i.value=0,n.disabled=!0,s.disabled=!0,a.disabled=!0,document.title+=" (ERR)"})),!b())throw new Error("missing WebGL2 feature (unsupported)");yield vt.load({jsUrl:"./dist/wasm/FrankenPhys.0.0.1.js",wasmUrl:"./dist/wasm"}),yt.WasmModuleHolder.set(vt.get()),ce.initialize(e),bi=new gi({domElement:e,width:e.width,height:e.height,logger:xi}),bi.setResolution(7),bi.setOnResolutionChange((()=>{bi&&(i.value=bi.getResolution())})),t.addEventListener("input",(()=>{bi&&bi.setPerformanceAutoScaling(t.checked)})),i.addEventListener("input",(e=>{if(!bi)return;const t=i.value;bi.setResolution(t),bi.logResolution()})),n.addEventListener("click",(()=>{if(!bi||!xi)return;const e=!0===n.checked;bi.setAntiAliasing(e)})),s.addEventListener("click",(()=>{bi&&bi.setPhysicDebugModeEnabled(s.checked)})),a.addEventListener("click",(()=>{bi&&bi.setShowBvhDebugModeEnabled(a.checked)})),xi.log("[SETUP] Demo: initializing"),yield bi.init(),xi.log("[SETUP] Demo: initialized"),bi.start(),xi.log("[SETUP] Demo: running"),((e,t)=>{if(!x.isSupported())return;let i=-1;x.addVisibilityChange((e=>{e?i>=0&&(clearTimeout(i),i=-1):i=window.setTimeout(t,6e4)})),x.activate()})(0,(()=>{Ti(new Error("\n        <br/>\n        <br/>\n        <br/>\n        The page was inactive for too long<br/>\n        <br/>\n        please reload\n      "))}))}catch(e){console.log("err.message",e.message),Ti(e)}}))),!1);
