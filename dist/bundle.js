"use strict";function e(e,t,i,n){return new(i||(i=Promise))((function(r,s){function o(e){try{c(n.next(e))}catch(e){s(e)}}function a(e){try{c(n.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}c((n=n.apply(e,t||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const t=["requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen"],i=["fullscreenchange","webkitfullscreenchange","mozfullscreenchange","msfullscreenchange"],n=new class{constructor(){this._onFullScreenChangeCallbacks=[],this._isInitialized=!1}_initialize(){if(this._isInitialized)return;this._isInitialized=!0;const e=()=>{this._onFullScreenChangeCallbacks.forEach((e=>e()))};for(const t of i)document.addEventListener(t,e,!1)}isCompatible(e){for(const i of t)if(i in e)return!0;return!1}isFullScreen(e){return document.fullscreenElement===e}requestFullScreen(i){return e(this,void 0,void 0,(function*(){if(this.isFullScreen(i))return{success:!1,message:"element already in full screen"};this._initialize();for(const e of t)if(e in i)return i[e](),{success:!0,message:"request for full screen done"};return{success:!1,message:"unsupported request for full screen"}}))}addOnFullScreenChange(e){this._onFullScreenChangeCallbacks.push(e)}removeOnFullScreenChange(e){const t=this._onFullScreenChangeCallbacks.indexOf(e);t<0||this._onFullScreenChangeCallbacks.splice(t,1)}removeAllCallbacks(){this._onFullScreenChangeCallbacks.length=0}},r={Num0:48,Num1:49,Num2:50,Num3:51,Num4:52,Num5:53,Num6:54,Num7:55,Num8:56,Num9:57,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,Semicolon:186,Equal:187,Comma:188,Minus:189,Period:190,BackQuote:192,BracketLeft:219,Backslash:220,BracketRight:221,Quote:222,Shift:16,Ctrl:17,Alt:18,CapsLock:20,Tab:9,Enter:13,Pause:19,Escape:27,Space:32,PageUp:33,PageDown:34,End:35,Home:36,ArrowLeft:37,ArrowUp:38,ArrowRight:39,ArrowDown:40,PrintScreen:44,Insert:45,Delete:46,ContextMenu:93,ScrollLock:145,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,F13:124,F14:125,F15:126,F16:127,F17:128,F18:129,F19:130,F20:131,F21:132,F22:133,F23:134,F24:135,NumPad0:96,NumPad1:97,NumPad2:98,NumPad3:99,NumPad4:100,NumPad5:101,NumPad6:102,NumPad7:103,NumPad8:104,NumPad9:105,NumPadMultiply:106,NumPadAdd:107,NumPadSubtract:109,NumPadDecimal:110,NumPadDivide:111,NumLock:144,NumPadComma:194,NumPadEqual:12},s=e=>e>=r.A&&e<=r.Z,o=e=>e>=r.Num0&&e<=r.Num9||e>=r.NumPad0&&e<=r.NumPad9,a=new class{constructor(){this._pressedKeysSet=new Set,this._preventDefaultKeysSet=new Set,this._activated=!1,this._activated=!1,this._handleKeyDown=(e=>{const{keyCode:t}=e;this._onEvent&&this._onEvent(),this._preventDefaultKeysSet.has(t)&&e.preventDefault(),this._pressedKeysSet.add(t)}).bind(this),this._handleKeyUp=(e=>{const{keyCode:t}=e;this._onEvent&&this._onEvent(),this._preventDefaultKeysSet.has(t)&&e.preventDefault(),this._pressedKeysSet.delete(t)}).bind(this)}isPressed(...e){for(const t of e)if(this._pressedKeysSet.has(r[t]))return!0;return!1}preventDefault(e){this._preventDefaultKeysSet.add(r[e])}enableDefault(e){this._preventDefaultKeysSet.delete(r[e])}activate(){this._activated||(this._pressedKeysSet.clear(),document.addEventListener("keydown",this._handleKeyDown),document.addEventListener("keyup",this._handleKeyUp),this._activated=!0)}deactivate(){this._activated&&(this._pressedKeysSet.clear(),document.removeEventListener("keydown",this._handleKeyDown),document.removeEventListener("keyup",this._handleKeyUp),this._activated=!1)}onEvent(e){this._onEvent=e}},c={Left:0,Middle:1,Right:2},d=new class{constructor(){this._pressedButtonsSet=new Set,this._activated=!1,this._positionX=0,this._positionY=0,this._deltaX=0,this._deltaY=0,this._wheelDeltaY=0,this._activated=!1,this._handleMouseDown=(e=>{this._onEvent&&this._onEvent(),this._positionX=e.pageX,this._positionY=e.pageY,this._pressedButtonsSet.add(e.button)}).bind(this),this._handleMouseUp=(e=>{this._onEvent&&this._onEvent(),this._positionX=e.pageX,this._positionY=e.pageY,this._pressedButtonsSet.delete(e.button)}).bind(this),this._handleMouseMove=(e=>{this._onEvent&&this._onEvent(),this._positionX=e.pageX,this._positionY=e.pageY,this._deltaX+=e.movementX||e.mozMovementX||e.webkitMovementX||0,this._deltaY+=e.movementY||e.mozMovementY||e.webkitMovementY||0}).bind(this),this._handleMouseWheel=(e=>{this._onEvent&&this._onEvent(),this._wheelDeltaY+=e.deltaY||0}).bind(this)}activate(e){this._activated||(this._pressedButtonsSet.clear(),e.addEventListener("mousedown",this._handleMouseDown),e.addEventListener("mouseup",this._handleMouseUp),e.addEventListener("mousemove",this._handleMouseMove),e.addEventListener("wheel",this._handleMouseWheel),this._activated=!0)}deactivate(e){this._activated&&(this._pressedButtonsSet.clear(),e.removeEventListener("mousedown",this._handleMouseDown),e.removeEventListener("mouseup",this._handleMouseUp),e.removeEventListener("mousemove",this._handleMouseMove),e.removeEventListener("wheel",this._handleMouseWheel),this._activated=!1)}isButtonPressed(e){return this._pressedButtonsSet.has(c[e])}get positionX(){return this._positionX}get positionY(){return this._positionY}deltaX(){return this._deltaX}deltaY(){return this._deltaY}wheelDeltaY(){return this._wheelDeltaY}resetDeltas(){this._deltaX=0,this._deltaY=0,this._wheelDeltaY=0}onEvent(e){this._onEvent=e}},f=["requestPointerLock","mozRequestPointerLock","webkitRequestPointerLock"],h=["exitPointerLock","mozExitPointerLock","webkitExitPointerLock"],l=["pointerLockElement","mozPointerLockElement","webkitPointerLockElement"],u=[{methodName:"onpointerlockchange",propertyName:"pointerlockchange"},{methodName:"onmozpointerlockchange",propertyName:"mozpointerlockchange"},{methodName:"onwebkitpointerlockchange",propertyName:"webkitpointerlockchange"}],_=[{methodName:"onpointerlockerror",propertyName:"pointerlockerror"},{methodName:"onmozpointerlockerror",propertyName:"mozpointerlockerror"},{methodName:"onwebkitpointerlockerror",propertyName:"webkitpointerlockerror"}],p=new class{constructor(){this._onLockChangeCallbacks=[],this._onLockErrorCallbacks=[],this._timeSinceLastLockChange=0,this._isInitialized=!1}_initialize(){if(this._isInitialized)return;this._isInitialized=!0;const e=()=>{this._timeSinceLastLockChange=Date.now(),this._onLockChangeCallbacks.forEach((e=>e()))},t=e=>{this._timeSinceLastLockChange=Date.now(),this._onLockErrorCallbacks.forEach((t=>t(e)))};for(const t of u)if(t.methodName in document){document.addEventListener(t.propertyName,e,!1);break}for(const e of _)if(e.methodName in document){document.addEventListener(e.propertyName,t,!1);break}}canBePointerLocked(e){for(const t of f)if(t in e)return!0;return!1}isPointerLocked(e){for(const t of l)if(t in document)return document[t]===e;return!1}requestPointerLock(t){return e(this,void 0,void 0,(function*(){if(this.isPointerLocked(t))return{success:!1,message:"element already locked"};if(this._initialize(),this._timeSinceLastLockChange>0){const e=(Date.now()-this._timeSinceLastLockChange)/1e3;if(e<1.1)return{success:!1,message:`request for lock was too early, time to wait: ${e.toFixed(2)}sec`}}this._timeSinceLastLockChange=Date.now();for(const e of f)if(e in t){const i={unadjustedMovement:!1};try{yield t[e](i)}catch(e){return{success:!1,message:`request for lock was too early, time to wait: ${((Date.now()-this._timeSinceLastLockChange)/1e3).toFixed(2)}sec`}}return this._timeSinceLastLockChange=Date.now(),{success:!0,message:"request for lock done"}}return{success:!1,message:"unsupported request for lock"}}))}allowPointerLockedOnClickEvent(t){if(t===this._latestRequestHtmlElement)return;this._latestRequestHtmlElement=t;const i=()=>e(this,void 0,void 0,(function*(){t.removeEventListener("click",i);const e=yield this.requestPointerLock(t);this._latestRequestHtmlElement=void 0,e.success||this.allowPointerLockedOnClickEvent(t)}));t.addEventListener("click",i)}exitPointerLock(){for(const e of h)if(e in document){document[e]();break}}addOnLockChange(e){this._onLockChangeCallbacks.push(e)}removeOnLockChange(e){const t=this._onLockChangeCallbacks.indexOf(e);t<0||this._onLockChangeCallbacks.splice(t,1)}addOnLockError(e){this._onLockErrorCallbacks.push(e)}removeOnLockError(e){const t=this._onLockErrorCallbacks.indexOf(e);t<0||this._onLockErrorCallbacks.splice(t,1)}removeAllCallbacks(){this._onLockChangeCallbacks.length=0,this._onLockErrorCallbacks.length=0}};class g{constructor(e,t,i){this.createdAt=Date.now(),this.deltaX=0,this.deltaY=0,this.id=e,this.positionX=t,this.positionY=i}resetDelta(){this.deltaX=0,this.deltaY=0}}const m=new class{constructor(){this._activated=!1,this._allTouchDataMap=new Map,this._allCachedTouchDataArray=[],this._activated=!1,this._handleTouchStart=(e=>{e.preventDefault(),this._onEvent&&this._onEvent();for(let t=0;t<e.changedTouches.length;++t){const{identifier:i,pageX:n,pageY:r}=e.changedTouches[t],s=new g(i,n,r);this._allTouchDataMap.set(`${i}`,s),this._allCachedTouchDataArray.length=0}}).bind(this),this._handleTouchEnd=(e=>{e.preventDefault(),this._onEvent&&this._onEvent();for(let t=0;t<e.changedTouches.length;++t){const{identifier:i}=e.changedTouches[t];this._allTouchDataMap.delete(`${i}`),this._allCachedTouchDataArray.length=0}}).bind(this),this._handleTouchMove=(e=>{e.preventDefault(),this._onEvent&&this._onEvent();for(let t=0;t<e.changedTouches.length;++t){const{identifier:i,pageX:n,pageY:r}=e.changedTouches[t],s=this._allTouchDataMap.get(`${i}`);if(!s)continue;const o=n-s.positionX,a=r-s.positionY;s.deltaX+=o,s.deltaY+=a,s.positionX=n,s.positionY=r}}).bind(this)}isSupported(e){return"ontouchstart"in e}activate(e){this.isSupported(e)&&(this._activated||(this._allTouchDataMap.clear(),this._allCachedTouchDataArray.length=0,e.addEventListener("touchstart",this._handleTouchStart),e.addEventListener("touchend",this._handleTouchEnd),e.addEventListener("touchcancel",this._handleTouchEnd),e.addEventListener("touchmove",this._handleTouchMove,{passive:!1}),this._activated=!0))}deactivate(e){this._activated&&(this._allTouchDataMap.clear(),this._allCachedTouchDataArray.length=0,e.removeEventListener("touchstart",this._handleTouchStart),e.removeEventListener("touchend",this._handleTouchEnd),e.removeEventListener("touchcancel",this._handleTouchEnd),e.removeEventListener("touchmove",this._handleTouchMove),this._activated=!1)}_refreshCache(){0===this._allCachedTouchDataArray.length&&(this._allCachedTouchDataArray=[...this._allTouchDataMap.values()])}getTouchData(){return this._refreshCache(),this._allCachedTouchDataArray}resetDeltas(){this._refreshCache(),this._allCachedTouchDataArray.forEach((e=>e.resetDelta()))}onEvent(e){this._onEvent=e}},x=new class{constructor(){this._activated=!1,this._onVisibilityChangeCallbacks=[],this._handleVisibilityChange=(()=>{const e=this.isVisible();this._onVisibilityChangeCallbacks.forEach((t=>t(e)))}).bind(this)}activate(){this.isSupported()&&(this._activated||(document.addEventListener("visibilitychange",this._handleVisibilityChange,!1),this._activated=!0))}deactivate(){this._activated&&(document.removeEventListener("visibilitychange",this._handleVisibilityChange,!1),this._activated=!1)}isSupported(){return"onvisibilitychange"in document}isVisible(){return"visible"===document.visibilityState}addVisibilityChange(e){this._onVisibilityChangeCallbacks.push(e)}removeVisibilityChange(e){const t=this._onVisibilityChangeCallbacks.indexOf(e);t<0||this._onVisibilityChangeCallbacks.splice(t,1)}removeAllCallbacks(){this._onVisibilityChangeCallbacks.length=0}},v=()=>!!window.WebGL2RenderingContext;var b=Object.freeze({__proto__:null,AllKeyCodes:r,GlobalFullScreenManager:n,GlobalKeyboardManager:a,GlobalMouseManager:d,GlobalPointerLockManager:p,GlobalTouchManager:m,GlobalVisibilityManager:x,isAlphanumeric:e=>o(e)||s(e),isLetter:s,isNumber:o,isWebGL2Supported:v,isWebWorkerSupported:()=>!!window.Worker}),y=1e-6,w="undefined"!=typeof Float32Array?Float32Array:Array;function E(){var e=new w(16);return w!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function R(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function S(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function T(e,t,i){var n=t[0],r=t[1],s=t[2],o=t[3],a=t[4],c=t[5],d=t[6],f=t[7],h=t[8],l=t[9],u=t[10],_=t[11],p=t[12],g=t[13],m=t[14],x=t[15],v=i[0],b=i[1],y=i[2],w=i[3];return e[0]=v*n+b*a+y*h+w*p,e[1]=v*r+b*c+y*l+w*g,e[2]=v*s+b*d+y*u+w*m,e[3]=v*o+b*f+y*_+w*x,v=i[4],b=i[5],y=i[6],w=i[7],e[4]=v*n+b*a+y*h+w*p,e[5]=v*r+b*c+y*l+w*g,e[6]=v*s+b*d+y*u+w*m,e[7]=v*o+b*f+y*_+w*x,v=i[8],b=i[9],y=i[10],w=i[11],e[8]=v*n+b*a+y*h+w*p,e[9]=v*r+b*c+y*l+w*g,e[10]=v*s+b*d+y*u+w*m,e[11]=v*o+b*f+y*_+w*x,v=i[12],b=i[13],y=i[14],w=i[15],e[12]=v*n+b*a+y*h+w*p,e[13]=v*r+b*c+y*l+w*g,e[14]=v*s+b*d+y*u+w*m,e[15]=v*o+b*f+y*_+w*x,e}function D(){var e=new w(3);return w!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function C(e){var t=new w(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}function A(e,t,i){var n=new w(3);return n[0]=e,n[1]=t,n[2]=i,n}function B(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e}function F(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e}function z(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e}function M(e,t,i){return e[0]=t[0]*i[0],e[1]=t[1]*i[1],e[2]=t[2]*i[2],e}function P(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e}function k(e,t){var i=t[0],n=t[1],r=t[2],s=i*i+n*n+r*r;return s>0&&(s=1/Math.sqrt(s)),e[0]=t[0]*s,e[1]=t[1]*s,e[2]=t[2]*s,e}function L(e,t,i){var n=t[0],r=t[1],s=t[2],o=i[0],a=i[1],c=i[2];return e[0]=r*c-s*a,e[1]=s*o-n*c,e[2]=n*a-r*o,e}Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});var I,U=z;function V(){var e=new w(4);return w!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function N(e,t,i,n){var r=new w(4);return r[0]=e,r[1]=t,r[2]=i,r[3]=n,r}function O(e,t,i){var n=t[0],r=t[1],s=t[2],o=t[3];return e[0]=i[0]*n+i[4]*r+i[8]*s+i[12]*o,e[1]=i[1]*n+i[5]*r+i[9]*s+i[13]*o,e[2]=i[2]*n+i[6]*r+i[10]*s+i[14]*o,e[3]=i[3]*n+i[7]*r+i[11]*s+i[15]*o,e}function G(){var e=new w(4);return w!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}function W(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}function X(e,t,i){i*=.5;var n=Math.sin(i);return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=Math.cos(i),e}function H(e,t){var i=new w(2);return i[0]=e,i[1]=t,i}D(),V(),D(),A(1,0,0),A(0,1,0),G(),G(),I=new w(9),w!=Float32Array&&(I[1]=0,I[2]=0,I[3]=0,I[5]=0,I[6]=0,I[7]=0),I[0]=1,I[4]=1,I[8]=1,function(){var e=new w(2);w!=Float32Array&&(e[0]=0,e[1]=0)}();const Y=e=>e*Math.PI/180,q={X:0,Y:1,Z:2};var j=Object.freeze({__proto__:null,FreeFlyController:class{constructor(e){this._isActivated=!1,this._theta=0,this._phi=0,this._touchWasActive=!1,this._touchStartTime=0,this._touchMoveForward=!1,this._position=A(0,0,0),this._target=A(0,0,0),this._forwardAxis=A(1,0,0),this._leftAxis=A(0,0,1),this._upAxis=A(0,1,0),this._move_forwardAxis=A(1,0,0),this._move_leftAxis=A(0,0,1),this._move_upAxis=A(0,1,0),this._mouseSensibility=e.mouseSensibility,this._keyboardSensibility=e.keyboardSensibility,this._touchSensibility=e.touchSensibility,this._movingSpeed=e.movingSpeed,B(this._position,e.position),this._axisIndices=[e.coordinates?q[e.coordinates[0]]:q.X,e.coordinates?q[e.coordinates[1]]:q.Y,e.coordinates?q[e.coordinates[2]]:q.Z],this._theta=e.theta,this._phi=e.phi}isActivated(){return this._isActivated}activate(){this._isActivated=!0,a.preventDefault("Z"),a.preventDefault("W"),a.preventDefault("S"),a.preventDefault("A"),a.preventDefault("Q"),a.preventDefault("D"),a.preventDefault("Shift"),a.preventDefault("C"),a.preventDefault("Space"),a.preventDefault("ArrowUp"),a.preventDefault("ArrowDown"),a.preventDefault("ArrowLeft"),a.preventDefault("ArrowRight")}deactivate(){this._isActivated=!1,a.enableDefault("Z"),a.enableDefault("W"),a.enableDefault("S"),a.enableDefault("A"),a.enableDefault("Q"),a.enableDefault("D"),a.enableDefault("Shift"),a.enableDefault("C"),a.enableDefault("Space"),a.enableDefault("ArrowUp"),a.enableDefault("ArrowDown"),a.enableDefault("ArrowLeft"),a.enableDefault("ArrowRight")}isInteractedWith(){return a.isPressed("Z","W","S","A","Q","D")||a.isPressed("Shift","C","Space")||a.isPressed("ArrowUp","ArrowDown","ArrowLeft","ArrowRight")}update(e,t=!1){let i=!1,n=!1,r=!1,s=!1,o=!1,c=!1,f=!1,h=0,l=0;{const t=d.deltaX()*this._mouseSensibility,i=d.deltaY()*this._mouseSensibility;h-=Y(t)*e,l-=Y(i)*e}const u=m.getTouchData().length>0;if(u){if(!this._touchWasActive){const e=Date.now();(e-this._touchStartTime)/1e3<.25?this._touchMoveForward=!0:this._touchStartTime=e}const t=m.getTouchData()[0],i=t.deltaX*this._touchSensibility,n=t.deltaY*this._touchSensibility;h-=Y(i)*e,l-=Y(n)*e}else this._touchMoveForward=!1;this._touchWasActive=u,this._touchMoveForward&&(i=!0),a.isPressed("Z","W")&&(i=!0),a.isPressed("S")&&(n=!0),a.isPressed("A","Q")&&(r=!0),a.isPressed("D")&&(s=!0),a.isPressed("Shift")&&(o=!0),t||(a.isPressed("C")&&(c=!0),a.isPressed("Space")&&(f=!0));const _=this._movingSpeed*(o?4:1)*e,p=this._keyboardSensibility*e;a.isPressed("ArrowUp")?l+=p:a.isPressed("ArrowDown")&&(l-=p),a.isPressed("ArrowLeft")?h+=p:a.isPressed("ArrowRight")&&(h-=p),this._theta+=h,this._phi+=l;const g=.5*Math.PI,x=.95*g;this._phi=Math.min(Math.max(this._phi,-x),+x);const v=Math.cos(this._theta),b=Math.sin(this._theta),[y,w,E]=this._axisIndices,R=Math.cos(this._phi+g);this._upAxis[y]=R*v,this._upAxis[w]=R*b,this._upAxis[E]=Math.sin(this._phi+g);const S=Math.cos(this._phi);this._forwardAxis[y]=S*v,this._forwardAxis[w]=S*b,this._forwardAxis[E]=Math.sin(this._phi),L(this._leftAxis,this._upAxis,this._forwardAxis),t?(this._move_forwardAxis[y]=v,this._move_forwardAxis[w]=b,this._move_forwardAxis[E]=0,this._move_leftAxis[y]=-b,this._move_leftAxis[w]=v,this._move_leftAxis[E]=0,this._move_upAxis[y]=0,this._move_upAxis[w]=0,this._move_upAxis[E]=1):(B(this._move_forwardAxis,this._forwardAxis),B(this._move_leftAxis,this._leftAxis),B(this._move_upAxis,this._upAxis));const T=A(0,0,0);P(T,this._move_forwardAxis,_);const D=A(0,0,0);P(D,this._move_leftAxis,_);const C=A(0,0,0);P(C,this._move_upAxis,_),i?F(this._position,this._position,T):n&&U(this._position,this._position,T),r?F(this._position,this._position,D):s&&U(this._position,this._position,D),f?F(this._position,this._position,C):c&&U(this._position,this._position,C),F(this._target,this._position,this._forwardAxis)}getPosition(){return this._position}setPosition(e){B(this._position,e),F(this._target,this._position,this._forwardAxis)}getTarget(){return this._target}getUpAxis(){return this._upAxis}getTheta(){return this._theta}getPhi(){return this._phi}getTouchMoveForward(){return this._touchMoveForward}}});const $=e=>e>1?e-Math.floor(e):e;class K{constructor(){this._framesDelta=[],this._averageDelta=0,this._minDelta=0,this._maxDelta=0}pushDelta(e){this._framesDelta.length>=100&&this._framesDelta.shift(),this._framesDelta.push(e),this._minDelta=999999999,this._maxDelta=-999999999,this._averageDelta=0;for(const e of this._framesDelta)this._minDelta=Math.min(this._minDelta,e),this._maxDelta=Math.max(this._maxDelta,e),this._averageDelta+=e;this._averageDelta/=this._framesDelta.length}get framesDelta(){return this._framesDelta}get averageDelta(){return this._averageDelta}get minDelta(){return this._minDelta}get maxDelta(){return this._maxDelta}}var Z,Q;!function(e){e[e.perspective=0]="perspective",e[e.orthogonal=1]="orthogonal"}(Z||(Z={})),function(e){e[e.Right=0]="Right",e[e.Left=1]="Left",e[e.Bottom=2]="Bottom",e[e.Top=3]="Top",e[e.Back=4]="Back",e[e.Front=5]="Front"}(Q||(Q={}));const J=(e,t,i)=>{const n=V(),r=V(),s=[];return e.forEach((e=>{if(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=1,O(r,n,t),0===r[3])return null;r[3]=1/r[3],r[0]*=r[3],r[1]*=r[3],r[2]*=r[3],r[0]=(.5*r[0]+.5)*i[2]+i[0],r[1]=(.5*r[1]+.5)*i[3]+i[1],s.push(B(D(),r))})),s},ee=(e,t,i)=>{const n=function(e,t){var i=t[0],n=t[1],r=t[2],s=t[3],o=t[4],a=t[5],c=t[6],d=t[7],f=t[8],h=t[9],l=t[10],u=t[11],_=t[12],p=t[13],g=t[14],m=t[15],x=i*a-n*o,v=i*c-r*o,b=i*d-s*o,y=n*c-r*a,w=n*d-s*a,E=r*d-s*c,R=f*p-h*_,S=f*g-l*_,T=f*m-u*_,D=h*g-l*p,C=h*m-u*p,A=l*m-u*g,B=x*A-v*C+b*D+y*T-w*S+E*R;return B?(B=1/B,e[0]=(a*A-c*C+d*D)*B,e[1]=(r*C-n*A-s*D)*B,e[2]=(p*E-g*w+m*y)*B,e[3]=(l*w-h*E-u*y)*B,e[4]=(c*T-o*A-d*S)*B,e[5]=(i*A-r*T+s*S)*B,e[6]=(g*b-_*E-m*v)*B,e[7]=(f*E-l*b+u*v)*B,e[8]=(o*C-a*T+d*R)*B,e[9]=(n*T-i*C-s*R)*B,e[10]=(_*w-p*b+m*x)*B,e[11]=(h*b-f*w-u*x)*B,e[12]=(a*S-o*D-c*R)*B,e[13]=(i*D-n*S+r*R)*B,e[14]=(p*v-_*y-g*x)*B,e[15]=(f*y-h*v+l*x)*B,e):null}(E(),t);return te(e,n,i)},te=(e,t,i)=>{const n=[],r=V();return e.forEach((e=>{r[0]=(e[0]-i[0])/i[2]*2-1,r[1]=(e[1]-i[1])/i[3]*2-1,r[2]=2*e[2]-1,r[3]=1,O(r,r,t),0!==r[3]&&(r[3]=1/r[3],r[0]*=r[3],r[1]*=r[3],r[2]*=r[3],n.push(B(D(),r)))})),n};var ie=Object.freeze({__proto__:null,Camera:class{constructor(){this._projectionType=Z.perspective,this._viewportPos=H(0,0),this._viewportSize=H(0,0),this._projectionMatrix=E(),this._viewMatrix=E(),this._composedMatrix=E(),this._eye=A(0,0,0),this._target=A(0,0,0),this._upAxis=A(0,0,0)}setAsPerspective(e){this._projectionType=Z.perspective;let t=e.aspectRatio;void 0===t&&(t=this._viewportSize[0]/this._viewportSize[1]),this._perspectiveData={fovy:e.fovy,aspectRatio:t,near:e.near,far:e.far}}setAsOrthogonal(e){this._projectionType=Z.orthogonal,this._orthogonalData=Object.assign({},e)}setViewportPos(e,t){this._viewportPos[0]=e,this._viewportPos[1]=t}getViewportPos(){return this._viewportPos}setViewportSize(e,t){this._viewportSize[0]=e,this._viewportSize[1]=t,this._projectionType!==Z.perspective&&this._perspectiveData&&(this._perspectiveData.aspectRatio=this._viewportSize[0]/this._viewportSize[1])}getViewportSize(){return this._viewportSize}lookAt(e,t,i){this.setEye(e),this.setTarget(t),this.setUpAxis(i)}setEye(e){B(this._eye,e)}setTarget(e){B(this._target,e)}setUpAxis(e){B(this._upAxis,e)}getEye(){return this._eye}getTarget(){return this._target}getUpAxis(){return this._upAxis}computeMatrices(){if(this._projectionType===Z.perspective){const{fovy:e,aspectRatio:t,near:i,far:n}=this._perspectiveData;!function(e,t,i,n,r){var s,o=1/Math.tan(t/2);e[0]=o/i,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=o,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=r&&r!==1/0?(s=1/(n-r),e[10]=(r+n)*s,e[14]=2*r*n*s):(e[10]=-1,e[14]=-2*n)}(this._projectionMatrix,Y(e),t,i,n)}else if(this._projectionType===Z.orthogonal){const{left:e,right:t,top:i,bottom:n,near:r,far:s}=this._orthogonalData;!function(e,t,i,n,r,s,o){var a=1/(t-i),c=1/(n-r),d=1/(s-o);e[0]=-2*a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*c,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*d,e[11]=0,e[12]=(t+i)*a,e[13]=(r+n)*c,e[14]=(o+s)*d,e[15]=1}(this._projectionMatrix,e,t,i,n,r,s)}!function(e,t,i,n){var r,s,o,a,c,d,f,h,l,u,_=t[0],p=t[1],g=t[2],m=n[0],x=n[1],v=n[2],b=i[0],w=i[1],E=i[2];Math.abs(_-b)<y&&Math.abs(p-w)<y&&Math.abs(g-E)<y?S(e):(f=_-b,h=p-w,l=g-E,r=x*(l*=u=1/Math.hypot(f,h,l))-v*(h*=u),s=v*(f*=u)-m*l,o=m*h-x*f,(u=Math.hypot(r,s,o))?(r*=u=1/u,s*=u,o*=u):(r=0,s=0,o=0),a=h*o-l*s,c=l*r-f*o,d=f*s-h*r,(u=Math.hypot(a,c,d))?(a*=u=1/u,c*=u,d*=u):(a=0,c=0,d=0),e[0]=r,e[1]=a,e[2]=f,e[3]=0,e[4]=s,e[5]=c,e[6]=h,e[7]=0,e[8]=o,e[9]=d,e[10]=l,e[11]=0,e[12]=-(r*_+s*p+o*g),e[13]=-(a*_+c*p+d*g),e[14]=-(f*_+h*p+l*g),e[15]=1)}(this._viewMatrix,this._eye,this._target,this._upAxis),this.computeComposedMatrix()}computeComposedMatrix(){T(this._composedMatrix,this._projectionMatrix,this._viewMatrix)}setProjectionMatrix(e){R(this._projectionMatrix,e)}setViewMatrix(e){R(this._viewMatrix,e)}setComposedMatrix(e){R(this._composedMatrix,e)}getProjectionMatrix(){return this._projectionMatrix}getViewMatrix(){return this._viewMatrix}getComposedMatrix(){return this._composedMatrix}getPerspectiveData(){if(this._projectionType!==Z.perspective)throw new Error("not a perspective projection");return this._perspectiveData}getOrthogonalData(){if(this._projectionType!==Z.orthogonal)throw new Error("not an orthogonal projection");return this._orthogonalData}},FrustumCulling:class{constructor(){this._frustum=new Float32Array(24)}_setPlane(e,t,i,n){const r=4*e;this._frustum[r+0]=t[0]+i[0]*n,this._frustum[r+1]=t[1]+i[1]*n,this._frustum[r+2]=t[2]+i[2]*n,this._frustum[r+3]=t[3]+i[3]*n;const s=Math.sqrt(this._frustum[r+0]*this._frustum[r+0]+this._frustum[r+1]*this._frustum[r+1]+this._frustum[r+2]*this._frustum[r+2]);0!==s&&(this._frustum[r+0]/=s,this._frustum[r+1]/=s,this._frustum[r+2]/=s,this._frustum[r+3]/=s)}calculateFrustum(e,t){const i=T(E(),e,t),n=N(i[0],i[4],i[8],i[12]),r=N(i[1],i[5],i[9],i[13]),s=N(i[2],i[6],i[10],i[14]),o=N(i[3],i[7],i[11],i[15]);this._setPlane(Q.Right,o,n,-1),this._setPlane(Q.Left,o,n,1),this._setPlane(Q.Bottom,o,r,1),this._setPlane(Q.Top,o,r,-1),this._setPlane(Q.Back,o,s,-1),this._setPlane(Q.Front,o,s,1)}sphereInFrustum(e,t,i,n){for(let r=0;r<6;++r){const s=4*r;if(this._frustum[s+0]*e+this._frustum[s+1]*t+this._frustum[s+2]*i+this._frustum[s+3]<=-n)return!1}return!0}pointInFrustum(e,t,i){return this.sphereInFrustum(e,t,i,0)}cubeInFrustumVec3(e,t){return this.cubeInFrustum(e[0],e[1],e[2],t)}cubeInFrustum(e,t,i,n){const r=.5*n,s=e-r,o=t-r,a=i-r,c=e+r,d=t+r,f=i+r;for(let e=0;e<6;++e){const t=4*e,i=this._frustum[t+0],n=this._frustum[t+1],r=this._frustum[t+2],h=this._frustum[t+3];if(!(i*s+n*o+r*a+h>0||i*c+n*o+r*a+h>0||i*s+n*d+r*a+h>0||i*c+n*d+r*a+h>0||i*s+n*o+r*f+h>0||i*c+n*o+r*f+h>0||i*s+n*d+r*f+h>0||i*c+n*d+r*f+h>0))return!1}return!0}},sceneToScreenCoordinates:(e,t,i,n)=>{const r=E();return T(r,i,t),J(e,r,n)},sceneToScreenCoordsFromComposed:J,screenToSceneCoordinates:(e,t,i,n)=>{const r=T(E(),i,t);return ee(e,r,n)},screenToSceneCoordinatesFromComposed:ee,screenToSceneCoordinatesFromInvComposed:te});let ne=class e{static initialize(t){if(e._gl=t.getContext("webgl2",{alpha:!1,antialias:!1,depth:!0,failIfMajorPerformanceCaveat:!1,powerPreference:"high-performance",premultipliedAlpha:!0,preserveDrawingBuffer:!0,stencil:!1}),!e._gl)throw new Error("could not create webgl context");e._extensionLoseContext=e._gl.getExtension("WEBGL_lose_context"),e._gl.getExtension("EXT_color_buffer_float"),e._gl.getExtension("EXT_float_blend")}static getContext(){if(!e._gl)throw new Error("webgl context not initialized");return e._gl}static getExtensionLoseContext(){return e._extensionLoseContext}static getExtensionLoseContextStrict(){if(!e._extensionLoseContext)throw new Error("lose context extension not available");return e._extensionLoseContext}};var re;ne._gl=null,ne._extensionLoseContext=null,function(e){e[e.positiveX=0]="positiveX",e[e.negativeX=1]="negativeX",e[e.positiveY=2]="positiveY",e[e.negativeY=3]="negativeY",e[e.positiveZ=4]="positiveZ",e[e.negativeZ=5]="negativeZ"}(re||(re={}));const se=e=>{const t=ne.getContext();switch(e){case re.positiveX:return t.TEXTURE_CUBE_MAP_POSITIVE_X;case re.negativeX:return t.TEXTURE_CUBE_MAP_NEGATIVE_X;case re.positiveY:return t.TEXTURE_CUBE_MAP_POSITIVE_Y;case re.negativeY:return t.TEXTURE_CUBE_MAP_NEGATIVE_Y;case re.positiveZ:return t.TEXTURE_CUBE_MAP_POSITIVE_Z;case re.negativeZ:return t.TEXTURE_CUBE_MAP_NEGATIVE_Z}};class oe{constructor(){this._width=0,this._height=0,this._minBufferSize=0,this._texture=null}initialize(e,t){if(e<1)throw new Error(`cube map: width is < 1, input: ${e}`);if(t<1)throw new Error(`cube map: height is < 1, input: ${t}`);const i=ne.getContext();this._texture=i.createTexture(),this._width=e,this._height=t,this._minBufferSize=this._width*this._height*4}dispose(){ne.getContext().deleteTexture(this._texture)}rawBind(){if(!this._texture)throw new Error("cube map: not initialized");const e=ne.getContext();e.bindTexture(e.TEXTURE_CUBE_MAP,this._texture)}bind(e){this.rawBind(),e(this),oe.unbind()}static unbind(){const e=ne.getContext();e.bindTexture(e.TEXTURE_CUBE_MAP,null)}loadFromMemory(e,t){if(!this._texture)throw new Error("cube map: not initialized");if(t.length<this._minBufferSize)throw new Error(`cube map: miss-matching pixels buffer size, input: ${t.length}`);const i=ne.getContext(),n=i.RGBA,r=i.RGBA,s=i.UNSIGNED_BYTE;i.texImage2D(se(e),0,n,this._width,this._height,0,r,s,t)}allocate(){const e=ne.getContext(),t=e.RGBA,i=e.RGBA,n=e.UNSIGNED_BYTE,r=new Uint8Array(this._width*this._height*4);[re.negativeX,re.negativeY,re.negativeZ,re.positiveX,re.positiveY,re.positiveZ].forEach((s=>{e.texImage2D(se(s),0,t,this._width,this._height,0,i,n,r)}))}complete(){const e=ne.getContext();e.generateMipmap(e.TEXTURE_CUBE_MAP),e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR)}getWidth(){if(!this._texture)throw new Error("cube map: not initialized");return this._width}getHeight(){if(!this._texture)throw new Error("cube map: not initialized");return this._height}getRawObject(){if(!this._texture)throw new Error("texture not initialized");return this._texture}}class ae{constructor(){this._texture=null}initialize(e=[]){if(this._texture)throw new Error("data texture already initialized");const t=ne.getContext();if(this._texture=t.createTexture(),!this._texture)throw new Error("data texture failed to be created");t.bindTexture(t.TEXTURE_2D,this._texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),this.allocate(e)}dispose(){ne.getContext().deleteTexture(this._texture)}allocate(e){if(!this._texture)throw new Error("data texture not initialized");if(e.length<=0)throw new Error("texture: width must be positive");const t=ne.getContext();t.bindTexture(t.TEXTURE_2D,this._texture),this._buffer=new Uint8Array(e.flat());const i=t.RGBA,n=e.length,r=t.RGBA,s=t.UNSIGNED_BYTE;t.texImage2D(t.TEXTURE_2D,0,i,n,1,0,r,s,this._buffer)}update(e,t){if(!this._texture)throw new Error("data texture not initialized");if(!this._buffer)throw new Error("data texture update but not previously allocated");if(e+t.length>this._buffer.length)throw new Error(`data texture update but size is larger (start: ${e}, length: ${t.length}, max: ${this._buffer.length})`);const i=ne.getContext();i.bindTexture(i.TEXTURE_2D,this._texture);for(let e=0;e<t.length;++e)this._buffer[4*e+0]=t[e][0],this._buffer[4*e+1]=t[e][1],this._buffer[4*e+2]=t[e][2],this._buffer[4*e+3]=t[e][3];const n=t.length,r=i.RGBA,s=i.UNSIGNED_BYTE,o=e;i.texSubImage2D(i.TEXTURE_2D,0,o,0,n,1,r,s,this._buffer,0)}rawBind(){if(!this._texture)throw new Error("data texture not initialized");const e=ne.getContext();e.bindTexture(e.TEXTURE_2D,this._texture)}preBind(e){this.rawBind(),e(this)}bind(e){this.preBind(e),ae.unbind()}static unbind(){const e=ne.getContext();e.bindTexture(e.TEXTURE_2D,null)}}let ce=class e{constructor(){const e=ne.getContext().createFramebuffer();if(null===e)throw new Error("null frame buffer object");this._frameBuffer=e}dispose(){ne.getContext().deleteFramebuffer(this._frameBuffer)}rawBind(){const e=ne.getContext();e.bindFramebuffer(e.FRAMEBUFFER,this._frameBuffer)}bind(t){this.rawBind(),t(this),e.unbind()}static unbind(){const e=ne.getContext();e.bindFramebuffer(e.FRAMEBUFFER,null)}attachTexture(e){const t=ne.getContext();t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e.getRawObject(),0)}attachDepthTexture(e){const t=ne.getContext();t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,e.getRawObject(),0)}attachRenderBuffer(e){const t=ne.getContext();t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e.getRawObject())}attachCubeMap(e,t){const i=ne.getContext();i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,se(t),e.getRawObject(),0)}getPixels(e,t,i,n,r){const s=ne.getContext();s.readPixels(e,t,i,n,s.RGBA,s.UNSIGNED_BYTE,r)}};var de;!function(e){e[e.float=0]="float",e[e.vec2f=1]="vec2f",e[e.vec3f=2]="vec3f",e[e.vec4f=3]="vec4f",e[e.mat3f=4]="mat3f",e[e.mat4f=5]="mat4f"}(de||(de={}));const fe=e=>{switch(e){case de.float:return 1;case de.vec2f:return 2;case de.vec3f:return 3;case de.vec4f:return 4;case de.mat3f:return 9;case de.mat4f:return 16}};var he;!function(e){e[e.lines=0]="lines",e[e.lineStrip=1]="lineStrip",e[e.lineLoop=2]="lineLoop",e[e.triangles=3]="triangles",e[e.triangleStrip=4]="triangleStrip",e[e.triangleFan=5]="triangleFan"}(he||(he={}));const le=e=>e instanceof Float32Array?e:new Float32Array(e),ue=e=>{const t=ne.getContext();return"dynamic"===e?t.DYNAMIC_DRAW:"streaming"===e?t.STREAM_DRAW:t.STATIC_DRAW};class _e{constructor(e,t){this._primitiveStart=0,this._primitiveCount=0,this._instanceCount=0,this._isInstanced=!1;const i=ne.getContext();if(0===t.vbos.length)throw new Error("empty vbo definition");for(const i of t.vbos){if(0===i.attrs.length)throw new Error("empty vbo attribute definition");for(const t of i.attrs)if(!e.hasAttribute(t.name))throw new Error(`attribute not found, name="${t.name}"`)}switch(this._def=t,t.primitiveType){case he.lines:this._primitiveType=i.LINES;break;case he.lineStrip:this._primitiveType=i.LINE_STRIP;break;case he.lineLoop:this._primitiveType=i.LINE_LOOP;break;case he.triangles:this._primitiveType=i.TRIANGLES;break;case he.triangleStrip:this._primitiveType=i.TRIANGLE_STRIP;break;case he.triangleFan:this._primitiveType=i.TRIANGLE_FAN;break;default:throw new Error("primitive type not found")}const n=i.createVertexArray();if(!n)throw new Error("fail o create a vao unit");this._vao=n,i.bindVertexArray(this._vao),this._vbos=[];for(const t of this._def.vbos){const n=i.createBuffer();if(!n)throw new Error("fail o create a vbo unit");this._vbos.push({object:n,maxSize:0,mode:t.mode||"static"}),i.bindBuffer(i.ARRAY_BUFFER,n);let r=t.stride||0;if(!r){for(const e of t.attrs)switch(e.type){case de.float:r+=1;break;case de.vec2f:r+=2;break;case de.vec3f:r+=3;break;case de.vec4f:r+=4;break;case de.mat3f:r+=9;break;case de.mat4f:r+=16}r*=4}for(const n of t.attrs){let s=1,o=1;switch(n.type){case de.float:s=1,o=1;break;case de.vec2f:s=2,o=1;break;case de.vec3f:s=3,o=1;break;case de.vec4f:s=4,o=1;break;case de.mat3f:s=3,o=3;break;case de.mat4f:s=4,o=4}const a=e.getAttribute(n.name);for(let e=0;e<o;++e){const o=a+e,c=4*(n.index+e*s);i.enableVertexAttribArray(o),i.vertexAttribPointer(o,s,i.FLOAT,!1,r,c),!0===t.instanced&&(i.vertexAttribDivisor(o,1),this._isInstanced=!0)}}}i.bindVertexArray(null)}dispose(){const e=ne.getContext();for(const t of this._vbos)e.deleteBuffer(t.object);this._vbos.length=0,e.deleteVertexArray(this._vao)}setBufferSize(e,t){if(e<0||e>=this._vbos.length)throw new Error(`no vbo available to that index (input: ${e})`);if(t<=0)throw new Error(`vbo must be > 0 (input: ${t})`);const i=this._vbos[e];if(t<i.maxSize)return;i.maxSize=t;const n=ne.getContext();n.bindBuffer(n.ARRAY_BUFFER,i.object),n.bufferData(n.ARRAY_BUFFER,t,ue(i.mode)),n.bindBuffer(n.ARRAY_BUFFER,null)}setFloatBufferSize(e,t){this.setBufferSize(e,4*t)}allocateBuffer(e,t,i){if(e<0||e>=this._vbos.length)throw new Error(`no vbo available to that index (input: ${e}, total vbos: ${this._vbos.length})`);if(i<=0)throw new Error(`size must be > 0 (input: ${i})`);const n=this._vbos[e];if(i<=0)throw new Error(`vbo must be > 0 (input: ${i})`);n.maxSize=i;const r=le(t),s=ne.getContext();s.bindBuffer(s.ARRAY_BUFFER,n.object),s.bufferData(s.ARRAY_BUFFER,r,ue(n.mode),0,i),s.bindBuffer(s.ARRAY_BUFFER,null)}updateBuffer(e,t,i,n){if(e<0||e>=this._vbos.length)throw new Error(`no vbo available to that index (input: ${e}, total vbos: ${this._vbos.length})`);if(i<=0)throw new Error(`size must be > 0 (input: ${i})`);const r=this._vbos[e];if(void 0!==n){if(n<0)throw new Error(`offset must be >= 0 (input: ${n})`);const e=n+i;if(e>r.maxSize)throw new Error(`offset + size > to vbo max size (input: ${e}, max size: ${r.maxSize})`)}else if(i>r.maxSize)throw new Error(`size must be < to vbo max size (input: ${i}, max size: ${r.maxSize})`);const s=le(t),o=ne.getContext();o.bindBuffer(o.ARRAY_BUFFER,r.object),o.bufferSubData(o.ARRAY_BUFFER,null!=n?n:0,s.slice(0,i),0,i),o.bindBuffer(o.ARRAY_BUFFER,null)}render(){if(0==this._primitiveCount)return;if(this._isInstanced&&0==this._instanceCount)return;const e=ne.getContext();e.bindVertexArray(this._vao),!0===this._isInstanced?e.drawArraysInstanced(this._primitiveType,this._primitiveStart,this._primitiveCount,this._instanceCount):e.drawArrays(this._primitiveType,this._primitiveStart,this._primitiveCount),e.bindVertexArray(null)}setPrimitiveStart(e){this._primitiveStart=e}setPrimitiveCount(e){this._primitiveCount=e}setInstancedCount(e){this._instanceCount=e}}class pe{constructor(){this._def={vbos:[],primitiveType:he.lines}}reset(){return this._def={vbos:[],primitiveType:he.lines},this}getDef(){return this._def}setPrimitiveType(e){return this._def.primitiveType=he[e],this}addVbo(){return this._def.vbos.push({attrs:[],instanced:!1}),this}setVboAsInstanced(){return this._getLastVbo().instanced=!0,this}setVboAsDynamic(){return this._getLastVbo().mode="dynamic",this}setVboAsStreaming(){return this._getLastVbo().mode="streaming",this}setStride(e){return this._getLastVbo().stride=e,this}addVboAttribute(e,t){const i=this._getLastVbo(),n=i.attrs.length>0?i.attrs[i.attrs.length-1]:null;return i.attrs.push({name:e,type:de[t],index:n?n.index+fe(n.type):0}),this}_getLastVbo(){if(0===this._def.vbos.length)throw new Error("no VBO setup");return this._def.vbos[this._def.vbos.length-1]}}var ge=Object.freeze({__proto__:null,get AttributeType(){return de},BytesPerPixel:4,Geometry:_e,GeometryBuilder:pe,get PrimitiveType(){return he}});class me{constructor(){const e=ne.getContext().createRenderbuffer();if(null===e)throw new Error("null render buffer object");this._buffer=e}dispose(){ne.getContext().deleteRenderbuffer(this._buffer)}rawBind(){const e=ne.getContext();e.bindRenderbuffer(e.RENDERBUFFER,this._buffer)}preBind(e){this.rawBind(),e(this)}bind(e){this.preBind(e),me.unbind()}static unbind(){const e=ne.getContext();e.bindRenderbuffer(e.RENDERBUFFER,null)}setSize(e,t,i){const n=ne.getContext();let r=n.DEPTH_COMPONENT32F;switch(e){case"depth16":case"depth24":r=n.DEPTH_COMPONENT16}n.renderbufferStorage(n.RENDERBUFFER,r,t,i)}getRawObject(){return this._buffer}}let xe=class e{constructor(e,t){this._attributes=new Map,this._uniforms=new Map,this._name=e;const i=ne.getContext(),n=this._getShader(t.vertexSrc,i.VERTEX_SHADER),r=this._getShader(t.fragmentSrc,i.FRAGMENT_SHADER),s=i.createProgram();if(!s)throw new Error("could not create a shader program");if(i.attachShader(s,n),i.attachShader(s,r),i.linkProgram(s),i.deleteShader(n),i.deleteShader(r),!i.getProgramParameter(s,i.LINK_STATUS)){const e=i.getProgramInfoLog(s);throw new Error("Failed to initialized shaders, Error linking:"+e)}this._program=s,this.bind((()=>{this._getAttributes(t.attributes),this._getUniforms(t.uniforms)}))}dispose(){ne.getContext().deleteProgram(this._program)}bind(t){if(null!==e._isBound)throw new Error(`Double shader binding (bound: ${e._isBound._name}, binding: ${this._name})`);e._isBound=this,ne.getContext().useProgram(this._program),t(this),e.unbind()}static unbind(){ne.getContext().useProgram(null),e._isBound=null}isBound(){return e._isBound===this}hasAttribute(e){return this._attributes.has(e)}getAttribute(e){const t=this._attributes.get(e);if(void 0===t)throw new Error(`attribute not found: ${e}`);return t}getUniform(e){const t=this._uniforms.get(e);if(void 0===t)throw new Error(`uniform not found: ${e}`);return t}setTextureUniform(e,t,i){const n=ne.getContext();n.activeTexture(n.TEXTURE0+i),n.uniform1i(this.getUniform(e),i),t.rawBind()}setInteger1Uniform(e,t){ne.getContext().uniform1i(this.getUniform(e),t)}setInteger2Uniform(e,t,i){ne.getContext().uniform2i(this.getUniform(e),t,i)}setInteger3Uniform(e,t,i,n){ne.getContext().uniform3i(this.getUniform(e),t,i,n)}setFloat1Uniform(e,t){ne.getContext().uniform1f(this.getUniform(e),t)}setFloat2Uniform(e,t,i){ne.getContext().uniform2f(this.getUniform(e),t,i)}setFloat3Uniform(e,t,i,n){ne.getContext().uniform3f(this.getUniform(e),t,i,n)}setMatrix3Uniform(e,t){ne.getContext().uniformMatrix3fv(this.getUniform(e),!1,t)}setMatrix4Uniform(e,t){ne.getContext().uniformMatrix4fv(this.getUniform(e),!1,t)}_getAttributes(e){const t=ne.getContext();for(let i=0;i<e.length;++i){const n=t.getAttribLocation(this._program,e[i]);if(n<0)throw new Error(`attribute not found => ${e[i]}`);this._attributes.set(e[i],n)}}_getUniforms(e){const t=ne.getContext();for(let i=0;i<e.length;++i){const n=t.getUniformLocation(this._program,e[i]);if(null===n)throw new Error(`uniform not found => ${e[i]}`);this._uniforms.set(e[i],n)}}_getShader(e,t){const i=ne.getContext(),n=i.createShader(t);if(!n)throw new Error("could not create a shader");if(i.shaderSource(n,e),i.compileShader(n),!i.getShaderParameter(n,i.COMPILE_STATUS)){let e=i.getShaderInfoLog(n);throw e||(e="failed to compile a shader"),new Error(e)}return n}};var ve,be;xe._isBound=null,function(e){e[e.pixelated=0]="pixelated",e[e.linear=1]="linear",e[e.mipmap=2]="mipmap"}(ve||(ve={})),function(e){e[e.noRepeat=0]="noRepeat",e[e.repeat=1]="repeat"}(be||(be={}));let ye=class e{constructor(){this._width=0,this._height=0,this._texture=null}initialize(){if(this._texture)throw new Error("texture: already initialized");const e=ne.getContext();this._texture=e.createTexture()}rawBind(){if(!this._texture)throw new Error("texture: not initialized");const e=ne.getContext();e.bindTexture(e.TEXTURE_2D,this._texture)}preBind(e){this.rawBind(),e(this)}bind(t){this.preBind(t),e.unbind()}static unbind(){const e=ne.getContext();e.bindTexture(e.TEXTURE_2D,null)}loadFromImage(e,t=ve.pixelated,i=be.noRepeat){this._allocate(e.width,e.height,e,t,i)}loadFromMemory(e,t,i,n=ve.pixelated,r=be.noRepeat){this._allocate(e,t,i,n,r)}allocate(e,t,i=ve.pixelated,n=be.noRepeat){this._allocate(e,t,null,i,n)}allocateDepth(e,t,i=ve.pixelated,n=be.noRepeat){this._allocate(e,t,null,i,n,!0)}resize(e,t,i=ve.pixelated,n=be.noRepeat){this._allocate(e,t,null,i,n)}_allocate(e,t,i=null,n=ve.pixelated,r=be.noRepeat,s=!1){if(!this._texture)throw new Error("texture: not initialized");if(e<=0)throw new Error("texture: width must be positive");if(t<=0)throw new Error("texture: height must be positive");const o=ne.getContext();this._width=e,this._height=t;const a=s?o.DEPTH_COMPONENT32F:o.RGBA,c=s?o.DEPTH_COMPONENT:o.RGBA,d=s?o.FLOAT:o.UNSIGNED_BYTE;i instanceof HTMLImageElement?o.texImage2D(o.TEXTURE_2D,0,a,c,d,i):o.texImage2D(o.TEXTURE_2D,0,a,e,t,0,c,d,i),r===be.noRepeat?(o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE)):r===be.repeat&&(o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_S,o.REPEAT),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_T,o.REPEAT)),n===ve.pixelated?(o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,o.NEAREST),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,o.NEAREST)):n===ve.linear?(o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,o.LINEAR),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,o.LINEAR)):n===ve.mipmap&&(o.generateMipmap(o.TEXTURE_2D),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,o.NEAREST),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,o.LINEAR_MIPMAP_LINEAR))}getWidth(){if(!this._texture)throw new Error("texture not initialized");return this._width}getHeight(){if(!this._texture)throw new Error("texture not initialized");return this._height}getRawObject(){if(!this._texture)throw new Error("texture not initialized");return this._texture}};class we{constructor(){this._width=0,this._height=0,this._texture=null}initialize(){if(this._texture)throw new Error("texture: already initialized");const e=ne.getContext();this._texture=e.createTexture()}dispose(){ne.getContext().deleteTexture(this._texture)}rawBind(){if(!this._texture)throw new Error("texture: not initialized");const e=ne.getContext();e.bindTexture(e.TEXTURE_2D_ARRAY,this._texture)}preBind(e){this.rawBind(),e(this)}bind(e){this.preBind(e),we.unbind()}static unbind(){const e=ne.getContext();e.bindTexture(e.TEXTURE_2D_ARRAY,null)}loadFromImage(e,t,i,n,r=ve.pixelated,s=be.noRepeat){this._allocate(e,t,i,n,r,s)}loadFromMemory(e,t,i,n,r=ve.pixelated,s=be.noRepeat){this._allocate(e,t,i,n,r,s)}_allocate(e,t,i,n=null,r=ve.pixelated,s=be.noRepeat){if(!this._texture)throw new Error("texture: not initialized");if(e<=0)throw new Error("texture: width must be positive");if(t<=0)throw new Error("texture: height must be positive");const o=ne.getContext();this._width=e,this._height=t;const a=o.RGBA,c=o.RGBA,d=o.UNSIGNED_BYTE;HTMLImageElement,o.texImage3D(o.TEXTURE_2D_ARRAY,0,a,e,t,i,0,c,d,n),s===be.noRepeat?(o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE),o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE)):s===be.repeat&&(o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_WRAP_S,o.REPEAT),o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_WRAP_T,o.REPEAT)),r===ve.pixelated?(o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_MAG_FILTER,o.NEAREST),o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_MIN_FILTER,o.NEAREST)):r===ve.linear?(o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_MAG_FILTER,o.LINEAR),o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_MIN_FILTER,o.LINEAR)):r===ve.mipmap&&(o.generateMipmap(o.TEXTURE_2D_ARRAY),o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_MAG_FILTER,o.NEAREST),o.texParameteri(o.TEXTURE_2D_ARRAY,o.TEXTURE_MIN_FILTER,o.LINEAR_MIPMAP_LINEAR))}getWidth(){if(!this._texture)throw new Error("texture not initialized");return this._width}getHeight(){if(!this._texture)throw new Error("texture not initialized");return this._height}getRawObject(){if(!this._texture)throw new Error("texture not initialized");return this._texture}}var Ee=Object.freeze({__proto__:null,CubeMap:oe,get CubeMapType(){return re},DataTexture:class e{constructor(){this._texture=null}initialize(e){if(this._texture)throw new Error("data texture already initialized");const t=ne.getContext();if(this._texture=t.createTexture(),!this._texture)throw new Error("data texture failed to be created");t.bindTexture(t.TEXTURE_2D,this._texture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),this.allocate(e)}dispose(){ne.getContext().deleteTexture(this._texture)}allocate(e){if(!this._texture)throw new Error("data texture not initialized");const t=Array.isArray(e)?e.length:e;if(t<=0)throw new Error("texture: width must be positive");if(t>2048)throw new Error(`data texture max size is 2048 (input was ${t})`);const i=ne.getContext();i.bindTexture(i.TEXTURE_2D,this._texture),Array.isArray(e),this._buffer=new Float32Array(e);const n=i.R32F,r=t,s=i.RED,o=i.FLOAT;i.texImage2D(i.TEXTURE_2D,0,n,r,1,0,s,o,this._buffer)}update(e,t){if(!this._texture)throw new Error("data texture not initialized");if(!this._buffer)throw new Error("data texture update but not previously allocated");if(e+t.length>this._buffer.length)throw new Error(`data texture update but size is larger (start: ${e}, length: ${t.length}, max: ${this._buffer.length})`);const i=ne.getContext();i.bindTexture(i.TEXTURE_2D,this._texture);for(let e=0;e<t.length;++e)this._buffer[e]=t[e];const n=t.length,r=i.RED,s=i.FLOAT,o=e;i.texSubImage2D(i.TEXTURE_2D,0,o,0,n,1,r,s,this._buffer,0)}rawBind(){if(!this._texture)throw new Error("data texture not initialized");const e=ne.getContext();e.bindTexture(e.TEXTURE_2D,this._texture)}preBind(e){this.rawBind(),e(this)}bind(t){this.preBind(t),e.unbind()}static unbind(){const e=ne.getContext();e.bindTexture(e.TEXTURE_2D,null)}},DataTextureVec4:ae,FenceSync:class{constructor(){}dispose(){this._sync&&(ne.getContext().deleteSync(this._sync),this._sync=void 0)}isStarted(){return void 0!==this._sync}start(){this._sync&&this.dispose();const e=ne.getContext(),t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);if(null===t)throw new Error("could not create a webgl fence");this._sync=t,e.flush(),e.finish()}isSignaled(){if(!this._sync)throw new Error("fence not started");const e=ne.getContext();return e.getSyncParameter(this._sync,e.SYNC_STATUS)===e.SIGNALED}wait(e){if(!this._sync)throw new Error("fence not started");const t=ne.getContext();switch(t.clientWaitSync(this._sync,0,e)){case t.TIMEOUT_EXPIRED:return"timed-out";case t.WAIT_FAILED:return console.warn("fence.wait -> should never get here"),this.dispose(),"done";case t.ALREADY_SIGNALED:case t.CONDITION_SATISFIED:default:return this.dispose(),"done"}}},FrameBuffer:ce,GeometryWrapper:ge,RenderBuffer:me,ShaderProgram:xe,Texture:ye,TextureArray:we,get TextureFilter(){return ve},get TextureRepeat(){return be},WebGLContext:ne,checkError:()=>{const e=ne.getContext();switch(e.getError()){case e.INVALID_ENUM:throw new Error("gl.INVALID_ENUM\nAn unacceptable value is specified for an enumerated argument. The offending command is ignored and has no other side effect than to set the error flag.");case e.INVALID_VALUE:throw new Error("gl.INVALID_VALUE\nA numeric argument is out of range. The offending command is ignored and has no other side effect than to set the error flag.");case e.INVALID_OPERATION:throw new Error("gl.INVALID_OPERATION\nThe specified operation is not allowed in the current state. The offending command is ignored and has no other side effect than to set the error flag.");case e.INVALID_FRAMEBUFFER_OPERATION:throw new Error("gl.INVALID_FRAMEBUFFER_OPERATION\nThe framebuffer object is not complete. The offending command is ignored and has no other side effect than to set the error flag.");case e.OUT_OF_MEMORY:throw new Error("gl.OUT_OF_MEMORY\nThere is not enough memory left to execute the command. The state of the GL is undefined, except for the state of the error flags, after this error is recorded.");case e.CONTEXT_LOST_WEBGL:throw new Error("gl.CONTEXT_LOST_WEBGL\n If the WebGL context is lost, this error is returned on the first call to getError. Afterwards and until the context has been restored, it returns gl.NO_ERROR.")}},getCubeMapType:se}),Re="\n#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\n\nin vec3 a_vertex_position;\nin vec3 a_vertex_normal;\n\nin vec3 a_offset_center;\nin vec4 a_offset_orientation;\nin vec3 a_offset_color;\nin vec3 a_offset_scale;\n\nflat out vec4 v_color;\nout vec3 v_worldSpacePosition;\nout vec3 v_worldSpaceNormal;\n\n\nvec3 apply_quat_to_vec3(vec3 position, vec4 q)\n{\n  vec3 v = position.xyz;\n  return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\nvoid main(void)\n{\n\tvec3 worldSpacePosition = a_offset_center + apply_quat_to_vec3(a_vertex_position * a_offset_scale, a_offset_orientation);\n\tvec3 worldSpaceNormal = apply_quat_to_vec3(a_vertex_normal, a_offset_orientation);\n\n  gl_Position = u_composedMatrix * vec4(worldSpacePosition, 1.0);\n\n  v_color = vec4(a_offset_color, 1.0);\n  v_worldSpacePosition = worldSpacePosition;\n  v_worldSpaceNormal = worldSpaceNormal;\n}\n".trim(),Se="\n#version 300 es\n\nprecision lowp float;\n\nuniform vec3 u_lightPos;\n\nflat in vec4 v_color;\nin vec3 v_worldSpacePosition;\nin vec3 v_worldSpaceNormal;\n\nout vec4 o_color;\n\n//\n//\n//\n\nconst float k_ambiantCoef = 0.1;\n\nconst vec3 k_specColor = vec3(1.0, 1.0, 1.0);\n\nvec3 _getLightColor(vec4 currentColor)\n{\n  vec3 normal = normalize(v_worldSpaceNormal);\n  vec3 lightDir = normalize(u_lightPos - v_worldSpacePosition);\n\n  float diffuseCoef = max(dot(lightDir, v_worldSpaceNormal.xyz), 0.0);\n  float specularCoef = 0.0;\n\n  // if (diffuseCoef > 0.0 && v_skipSpecular < 0.5)\n  // {\n  //   // specular\n\n  //   vec3 reflectDir = reflect(-lightDir, normal);\n  //   vec3 viewDir = normalize(u_lightPos - v_worldSpacePosition);\n\n  //   float specAngle = max(dot(reflectDir, viewDir), 0.0);\n  //   specularCoef = pow(specAngle, 32.0);\n  // }\n\n  vec3 diffuseColor = currentColor.rgb * (k_ambiantCoef + diffuseCoef);\n  vec3 specularColor = k_specColor * specularCoef * currentColor.a;\n\n  return diffuseColor + specularColor;\n}\n\n//\n//\n//\n\nvoid main(void)\n{\n  o_color = vec4(_getLightColor(v_color), 1.0);\n}\n".trim(),Te="\n#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\n\nin vec3 a_vertex_position;\n\nin vec3 a_offset_center;\nin vec4 a_offset_orientation;\nin vec3 a_offset_color;\nin vec3 a_offset_scale;\n\nflat out vec4 v_color;\n\nvec3 apply_quat_to_vec3(vec3 position, vec4 q)\n{\n  vec3 v = position.xyz;\n  return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\nvoid main(void)\n{\n\tvec3 worldSpacePosition = a_offset_center + apply_quat_to_vec3(a_vertex_position * a_offset_scale, a_offset_orientation);\n\n  gl_Position = u_composedMatrix * vec4(worldSpacePosition, 1.0);\n\n  v_color = vec4(a_offset_color, 1.0);\n}\n".trim(),De="\n#version 300 es\n\nprecision lowp float;\n\nflat in vec4 v_color;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  o_color = vec4(v_color.rbg, 1.0);\n}\n".trim();class Ce{constructor(e,t){this._width=0,this._height=0,this._frameBuffer=new ce,this._renderBuffer=new me,this._colorTextures=[],this._currentIndex=0,this._colorTextures.push(new ye),this._colorTextures.push(new ye),this._colorTextures.forEach((e=>e.initialize())),this.resize(e,t)}resize(e,t){this._width=e,this._height=t,this._renderBuffer.bind((e=>{e.setSize("depth32f",this._width,this._height)})),this._colorTextures.forEach((e=>{e.bind((e=>{e.allocate(this._width,this._height)}))})),this._frameBuffer.bind((e=>{this._renderBuffer.bind((t=>{e.attachRenderBuffer(t)}))}))}captureScene(e){this._frameBuffer.bind((t=>{this._colorTextures[this._currentIndex].bind((e=>{t.attachTexture(e)}));const i=ne.getContext();i.viewport(0,0,this._width,this._height),i.clearColor(0,0,0,0),e()})),this._currentIndex=(this._currentIndex+1)%this._colorTextures.length}get colorTexture(){return this._colorTextures[this._currentIndex]}}var Ae="\n#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\n\nin vec3  a_vertex_position;\nin vec2  a_vertex_texCoord;\n\nout vec2 v_texCoord;\n\nvoid main(void)\n{\n  v_texCoord = a_vertex_texCoord;\n  gl_Position = u_composedMatrix * vec4(a_vertex_position, 1.0);\n}\n\n".trim(),Be="\n#version 300 es\n\nprecision highp float;\n\nuniform sampler2D u_texture;\n\nin vec2 v_texCoord;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  o_color = texture(u_texture, v_texCoord);\n}\n".trim();class Fe{constructor(e,t){this._width=0,this._height=0,this._shader=new xe("RenderHudTexture",{vertexSrc:Ae,fragmentSrc:Be,attributes:["a_vertex_position","a_vertex_texCoord"],uniforms:["u_composedMatrix","u_texture"]});const i=new pe;i.reset().setPrimitiveType("triangleStrip").addVbo().addVboAttribute("a_vertex_position","vec3f").addVboAttribute("a_vertex_texCoord","vec2f"),this._geometry=new _e(this._shader,i.getDef()),this.resize(e,t)}resize(e,t){this._width=e,this._height=t;const i=[{pos:[0*this._width,0*this._height,-1],tex:[0,0]},{pos:[1*this._width,0*this._height,-1],tex:[1,0]},{pos:[0*this._width,1*this._height,-1],tex:[0,1]},{pos:[1*this._width,1*this._height,-1],tex:[1,1]}].map((e=>[e.pos[0],e.pos[1],e.pos[2],e.tex[0],e.tex[1]])).flat();this._geometry.allocateBuffer(0,i,i.length),this._geometry.setPrimitiveCount(i.length/5)}flush(e,t){this._shader.bind((i=>{i.setMatrix4Uniform("u_composedMatrix",e),i.setTextureUniform("u_texture",t,0),this._geometry.render()}))}}class ze{constructor(e,t){this._sceneCapturer=new Ce(e,t),this._renderHudTexture=new Fe(e,t)}resize(e,t){this._sceneCapturer.resize(e,t),this._renderHudTexture.resize(e,t)}captureScene(e){this._sceneCapturer.captureScene(e)}renderHud(e){this._renderHudTexture.flush(e,this._sceneCapturer.colorTexture)}}var Me="\n#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\n\nin vec3 a_vertex_position;\nin vec4 a_vertex_color;\n\nflat out vec4 v_color;\n\nvoid main(void)\n{\n  gl_Position = u_composedMatrix * vec4(a_vertex_position, 1.0);\n\n  v_color = a_vertex_color;\n}\n".trim(),Pe="\n#version 300 es\n\nprecision lowp float;\n\nflat in vec4 v_color;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  o_color = v_color;\n}\n".trim();class ke{constructor(e,t){this._buffer=new Float32Array(14336),this._currentSize=0,this._shader=e;const i=Object.assign(Object.assign({},t),{primitiveType:he.lines});this._geometry=new _e(e,i)}pushLine(e,t,i){var n;if(this._currentSize+14>=this._buffer.length){if(!this._shader.isBound())return;this.flush()}const r=null!==(n=i[3])&&void 0!==n?n:1;this._buffer[this._currentSize+0]=e[0],this._buffer[this._currentSize+1]=e[1],this._buffer[this._currentSize+2]=e[2],this._buffer[this._currentSize+3]=i[0],this._buffer[this._currentSize+4]=i[1],this._buffer[this._currentSize+5]=i[2],this._buffer[this._currentSize+6]=r,this._currentSize+=7,this._buffer[this._currentSize+0]=t[0],this._buffer[this._currentSize+1]=t[1],this._buffer[this._currentSize+2]=t[2],this._buffer[this._currentSize+3]=i[0],this._buffer[this._currentSize+4]=i[1],this._buffer[this._currentSize+5]=i[2],this._buffer[this._currentSize+6]=r,this._currentSize+=7}canRender(){return this._currentSize>0}flush(){this.canRender()&&(this._geometry.allocateBuffer(0,this._buffer,this._currentSize),this._geometry.setPrimitiveCount(this._currentSize/7),this._geometry.render(),this.clear())}clear(){this._currentSize=0}}class Le{constructor(e,t){this._buffer=new Float32Array(7168),this._currentSize=0,this._shader=e;const i=Object.assign(Object.assign({},t),{primitiveType:he.triangles});this._geometry=new _e(e,i)}pushTriangle(e,t,i,n){var r;if(this._currentSize+42>=this._buffer.length){if(!this._shader.isBound())return;this.flush()}const s=null!==(r=n[3])&&void 0!==r?r:1;this._buffer[this._currentSize+0]=e[0],this._buffer[this._currentSize+1]=e[1],this._buffer[this._currentSize+2]=e[2],this._buffer[this._currentSize+3]=n[0],this._buffer[this._currentSize+4]=n[1],this._buffer[this._currentSize+5]=n[2],this._buffer[this._currentSize+6]=s,this._currentSize+=7,this._buffer[this._currentSize+0]=t[0],this._buffer[this._currentSize+1]=t[1],this._buffer[this._currentSize+2]=t[2],this._buffer[this._currentSize+3]=n[0],this._buffer[this._currentSize+4]=n[1],this._buffer[this._currentSize+5]=n[2],this._buffer[this._currentSize+6]=s,this._currentSize+=7,this._buffer[this._currentSize+0]=i[0],this._buffer[this._currentSize+1]=i[1],this._buffer[this._currentSize+2]=i[2],this._buffer[this._currentSize+3]=n[0],this._buffer[this._currentSize+4]=n[1],this._buffer[this._currentSize+5]=n[2],this._buffer[this._currentSize+6]=s,this._currentSize+=7}pushLine(e,t,i,n){if(this._currentSize+42>=this._buffer.length)return;const r=t[0]-e[0],s=t[1]-e[1],o=Math.atan2(s,r)+.5*Math.PI,a=Math.cos(o)*i*.5,c=Math.sin(o)*i*.5;this.pushTriangle([e[0]-a,e[1]-c,e[2]],[t[0]-a,t[1]-c,t[2]],[t[0]+a,t[1]+c,t[2]],n),this.pushTriangle([e[0]-a,e[1]-c,e[2]],[t[0]+a,t[1]+c,t[2]],[e[0]+a,e[1]+c,e[2]],n)}pushRotatedLine(e,t,i,n,r){this.pushLine([e[0]-i*Math.cos(t),e[1]-i*Math.sin(t),e[2]],[e[0]+i*Math.cos(t),e[1]+i*Math.sin(t),e[2]],n,r)}pushOriginBoundRectangle(e,t,i){if(this._currentSize+42>=this._buffer.length)return;const n=[e[0]+t[0],e[1]+t[1]];this.pushTriangle([e[0],e[1],e[2]],[n[0],n[1],e[2]],[e[0],n[1],e[2]],i),this.pushTriangle([e[0],e[1],e[2]],[n[0],e[1],e[2]],[n[0],n[1],e[2]],i)}pushCenteredRectangle(e,t,i){const n=[e[0]-.5*t[0],e[1]-.5*t[1],e[2]];this.pushOriginBoundRectangle(n,t,i)}canRender(){return this._currentSize>0}flush(){this.canRender()&&(this._geometry.allocateBuffer(0,this._buffer,this._currentSize),this._geometry.setPrimitiveCount(this._currentSize/7),this._geometry.render(),this.clear())}clear(){this._currentSize=0}}var Ie="\n#version 300 es\n\nprecision highp float;\n\nuniform mat4 u_composedMatrix;\n\nin vec2 a_vertex_position;\nin vec2 a_vertex_texCoord;\nin vec3 a_offset_position;\nin vec2 a_offset_texCoord;\nin vec3 a_offset_color;\nin float a_offset_scale;\n\nout vec2 v_texCoord;\nflat out vec3 v_color;\n\nvoid main(void)\n{\n  vec3 position = vec3(a_vertex_position, 0.0) * a_offset_scale + a_offset_position;\n\n  gl_Position = u_composedMatrix * vec4(position, 1.0);\n\n  v_texCoord = a_vertex_texCoord + a_offset_texCoord;\n  v_color = a_offset_color;\n}\n".trim(),Ue="\n#version 300 es\n\nprecision mediump float;\n\nuniform sampler2D u_texture;\n\nin vec2 v_texCoord;\nflat in vec3 v_color;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  vec4 textureColor = texture(u_texture, v_texCoord);\n  if (textureColor.a < 0.5)\n  {\n    discard;\n  }\n  else\n  {\n    o_color = vec4(v_color, textureColor.a);\n  }\n}\n".trim();const Ve=[16,6],Ne=[1/Ve[0],1/Ve[1]],Oe=[.2,.2,.2],Ge=[.2,.6,.2],We=(e,t,i)=>{const{center:n}=e;t.pushCenteredRectangle(A(n[0],n[1],-.3),e.size,[0,0,0]),t.pushCenteredRectangle(A(n[0],n[1],-.2),[e.size[0]-2,e.size[1]-2],e.color),e.text&&i.setTextScale(16).setTextAlign("centered","centered").pushText(e.text,n).setTextAlign("left","top"),e.lines&&e.lines.forEach((e=>{t.pushThickLine([n[0]+e.a[0],n[1]+e.a[1],0],[n[0]+e.b[0],n[1]+e.b[1],0],e.thickness,e.color)}))},Xe=(e,t,i)=>{We({center:[e[0],e[1]],size:[40,40],text:"A\nQ",color:a.isPressed("A","Q")?Ge:Oe},t,i),We({center:[e[0]+45,e[1]],size:[40,40],text:"S",color:a.isPressed("S")?Ge:Oe},t,i),We({center:[e[0]+45,e[1]+45],size:[40,40],text:"W\nZ",color:a.isPressed("W","Z")?Ge:Oe},t,i),We({center:[e[0]+90,e[1]],size:[40,40],text:"D",color:a.isPressed("D")?Ge:Oe},t,i)},He=(e,t,i)=>{We({center:[e[0],e[1]],size:[40,40],lines:[{a:[15,0],b:[-8,0],thickness:6,color:[1,1,1]},{a:[0,10],b:[-12,-2],thickness:6,color:[1,1,1]},{a:[0,-10],b:[-12,2],thickness:6,color:[1,1,1]}],color:a.isPressed("ArrowLeft")?Ge:Oe},t,i),We({center:[e[0]+45,e[1]],size:[40,40],lines:[{a:[0,15],b:[0,-8],thickness:6,color:[1,1,1]},{a:[10,0],b:[-2,-12],thickness:6,color:[1,1,1]},{a:[-10,0],b:[2,-12],thickness:6,color:[1,1,1]}],color:a.isPressed("ArrowDown")?Ge:Oe},t,i),We({center:[e[0]+45,e[1]+45],size:[40,40],lines:[{a:[0,-15],b:[0,8],thickness:6,color:[1,1,1]},{a:[10,0],b:[-2,12],thickness:6,color:[1,1,1]},{a:[-10,0],b:[2,12],thickness:6,color:[1,1,1]}],color:a.isPressed("ArrowUp")?Ge:Oe},t,i),We({center:[e[0]+90,e[1]],size:[40,40],lines:[{a:[-15,0],b:[8,0],thickness:6,color:[1,1,1]},{a:[0,10],b:[12,-2],thickness:6,color:[1,1,1]},{a:[0,-10],b:[12,2],thickness:6,color:[1,1,1]}],color:a.isPressed("ArrowRight")?Ge:Oe},t,i)},Ye=(e,t,i,n)=>{m.isSupported(e)?We({center:[t[0]+115,t[1]],size:[230,60],text:"Touch Events\nSupported\n(double tap)",color:[0,.5,0]},i,n):We({center:[t[0]+115,t[1]],size:[230,60],text:"Touch Events\nNot Supported",color:[.5,0,0]},i,n),p.canBePointerLocked(e)?We({center:[t[0]+105,t[1]+70],size:[210,60],text:"Mouse\nSupported",color:[0,.5,0]},i,n):We({center:[t[0]+105,t[1]+70],size:[210,60],text:"Mouse Events\nNot Supported",color:[.5,0,0]},i,n)},qe=(e,t,i,n,r,s=!1)=>{const o=5*Math.ceil(i.maxDelta/5);{n.pushOriginBoundRectangle(e,t,[0,0,0,.5]);const i=[[e[0]+0*t[0],e[1]+0*t[1],0],[e[0]+1*t[0],e[1]+0*t[1],0],[e[0]+1*t[0],e[1]+1*t[1],0],[e[0]+0*t[0],e[1]+1*t[1],0]];n.pushLine(i[0],i[1],[1,1,1]),n.pushLine(i[1],i[2],[1,1,1]),n.pushLine(i[2],i[3],[1,1,1]),n.pushLine(i[3],i[0],[1,1,1])}for(let i=5;i<o;i+=5){const r=i/o,s=[e[0]+0,e[1]+t[1]*r,0],a=[e[0]+t[0],e[1]+t[1]*r,0];n.pushLine(s,a,[.5,.5,.5])}if(i.framesDelta.length>=2){const r=t[0]/i.framesDelta.length;let s=i.framesDelta[0],a=0,c=t[1]*s/o;for(let d=1;d<i.framesDelta.length;++d){const f=i.framesDelta[d],h=d*r,l=t[1]*f/o,u=[e[0]+a,e[1]+c,0],_=[e[0]+h,e[1]+l,0];n.pushLine(u,_,[1,1,1]),s=f,a=h,c=l}}{const n=14,o=.5*n,a=i.averageDelta,c=i.maxDelta,d=i.minDelta;let f=`~${a.toFixed(0)}ms`,h=`<${c}ms`,l=`>${d}ms`;if(!0===s){const e=e=>e<999?e.toFixed(0):"???";f+=`\n~${e(1e3/a)}fps`,h+=`\n<${e(1e3/c)}fps`,l+=`\n>${e(1e3/d)}fps`}r.setTextScale(n).setTextAlign("left","top").setTextColor(1,1,.75).pushText(f,[e[0]+7,e[1]-8]).setTextAlign("left","centered").setTextColor(1,.75,.75).pushText(h,[e[0]+t[0]+o,e[1]+t[1]-1*o]).setTextColor(.75,1,.75).pushText(l,[e[0]+t[0]+o,e[1]+1*o]).setTextColor(1,1,1)}};var je=Object.freeze({__proto__:null,addArrowStrokesWidgets:He,addKeyStrokesWidgets:Xe,addKeysTouchesWidgets:Ye,renderFpsMeter:qe}),$e=Object.freeze({__proto__:null,GeometryRenderer:class{constructor(){this._buffer=new Float32Array(14336),this._currentSize=0,this._shader=new xe("GeometryRenderer",{vertexSrc:Re,fragmentSrc:Se,attributes:["a_vertex_position","a_vertex_normal","a_offset_center","a_offset_orientation","a_offset_color","a_offset_scale"],uniforms:["u_composedMatrix","u_lightPos"]});const e=new pe;e.reset().setPrimitiveType("triangles").addVbo().addVboAttribute("a_vertex_position","vec3f").addVboAttribute("a_vertex_normal","vec3f").addVbo().setVboAsStreaming().setVboAsInstanced().addVboAttribute("a_offset_center","vec3f").addVboAttribute("a_offset_orientation","vec4f").addVboAttribute("a_offset_color","vec3f").addVboAttribute("a_offset_scale","vec3f"),this._geometry=new _e(this._shader,e.getDef()),this._geometry.setFloatBufferSize(1,14336)}setGeometryVertices(e){const t=new Float32Array([...e.map((e=>[...e.pos,...e.normal])).flat()]);this._geometry.allocateBuffer(0,t,t.length),this._geometry.setPrimitiveCount(t.length/6)}push(e,t,i,n){if(this._currentSize+13>=this._buffer.length){if(!this._shader.isBound())return;this._flush()}this._buffer[this._currentSize++]=e[0],this._buffer[this._currentSize++]=e[1],this._buffer[this._currentSize++]=e[2],this._buffer[this._currentSize++]=t[0],this._buffer[this._currentSize++]=t[1],this._buffer[this._currentSize++]=t[2],this._buffer[this._currentSize++]=t[3],this._buffer[this._currentSize++]=i[0],this._buffer[this._currentSize++]=i[1],this._buffer[this._currentSize++]=i[2],this._buffer[this._currentSize++]=n[0],this._buffer[this._currentSize++]=n[1],this._buffer[this._currentSize++]=n[2]}flush(e){this.canRender()&&this._shader.bind((t=>{t.setMatrix4Uniform("u_composedMatrix",e.getComposedMatrix());const i=e.getEye();t.setFloat3Uniform("u_lightPos",i[0],i[1],i[2]),this._flush()}))}safeRender(e,t){this._shader.bind((i=>{i.setMatrix4Uniform("u_composedMatrix",e.getComposedMatrix());const n=e.getEye();i.setFloat3Uniform("u_lightPos",n[0],n[1],n[2]),t(),this._flush()}))}_flush(){this._geometry.updateBuffer(1,this._buffer,this._currentSize,0),this._geometry.setInstancedCount(this._currentSize/13),this._geometry.render(),this.clear()}canRender(){return this._currentSize>0}clear(){this._currentSize=0}},GeometryRendererFlat:class{constructor(){this._buffer=new Float32Array(14336),this._currentSize=0,this._shader=new xe("GeometryRendererFlat",{vertexSrc:Te,fragmentSrc:De,attributes:["a_vertex_position","a_offset_center","a_offset_orientation","a_offset_color","a_offset_scale"],uniforms:["u_composedMatrix"]});const e=new pe;e.reset().setPrimitiveType("triangles").addVbo().addVboAttribute("a_vertex_position","vec3f").addVbo().setVboAsStreaming().setVboAsInstanced().addVboAttribute("a_offset_center","vec3f").addVboAttribute("a_offset_orientation","vec4f").addVboAttribute("a_offset_color","vec3f").addVboAttribute("a_offset_scale","vec3f"),this._geometry=new _e(this._shader,e.getDef()),this._geometry.setFloatBufferSize(1,14336)}setGeometryVertices(e){const t=new Float32Array([...e.map((e=>[...e.pos])).flat()]);this._geometry.allocateBuffer(0,t,t.length),this._geometry.setPrimitiveCount(t.length/3)}push(e,t,i,n){if(this._currentSize+13>=this._buffer.length){if(!this._shader.isBound())return;this._flush()}this._buffer[this._currentSize++]=e[0],this._buffer[this._currentSize++]=e[1],this._buffer[this._currentSize++]=e[2],this._buffer[this._currentSize++]=t[0],this._buffer[this._currentSize++]=t[1],this._buffer[this._currentSize++]=t[2],this._buffer[this._currentSize++]=t[3],this._buffer[this._currentSize++]=i[0],this._buffer[this._currentSize++]=i[1],this._buffer[this._currentSize++]=i[2],this._buffer[this._currentSize++]=n[0],this._buffer[this._currentSize++]=n[1],this._buffer[this._currentSize++]=n[2]}flush(e){this.canRender()&&this._shader.bind((t=>{t.setMatrix4Uniform("u_composedMatrix",e.getComposedMatrix()),this._flush()}))}safeRender(e,t){this._shader.bind((i=>{i.setMatrix4Uniform("u_composedMatrix",e.getComposedMatrix()),t(),this._flush()}))}_flush(){this._geometry.updateBuffer(1,this._buffer,this._currentSize,0),this._geometry.setInstancedCount(this._currentSize/13),this._geometry.render(),this.clear()}canRender(){return this._currentSize>0}clear(){this._currentSize=0}},MultiBuffersRendering:ze,StackRenderers:class{constructor(){this._shader=new xe("StackRenderers",{vertexSrc:Me,fragmentSrc:Pe,attributes:["a_vertex_position","a_vertex_color"],uniforms:["u_composedMatrix"]});const e=new pe;e.reset().setPrimitiveType("lines").addVbo().setVboAsDynamic().addVboAttribute("a_vertex_position","vec3f").addVboAttribute("a_vertex_color","vec4f"),this._wireFramesStackRenderer=new ke(this._shader,e.getDef()),this._trianglesStackRenderer=new Le(this._shader,e.getDef())}pushLine(e,t,i){this._wireFramesStackRenderer.pushLine(e,t,i)}pushCross(e,t,i){const n=[[e[0]-t,e[1],e[2]],[e[0]+t,e[1],e[2]],[e[0],e[1]-t,e[2]],[e[0],e[1]+t,e[2]],[e[0],e[1],e[2]-t],[e[0],e[1],e[2]+t]],r=[0,1,2,3,4,5];for(let e=0;e<r.length;e+=2){const t=n[e+0],r=n[e+1];this._wireFramesStackRenderer.pushLine(t,r,i)}}pushThickLine(e,t,i,n){this._trianglesStackRenderer.pushLine(e,t,i,n)}pushRotatedLine(e,t,i,n,r){this._trianglesStackRenderer.pushRotatedLine(e,t,i,n,r)}pushOriginBoundRectangle(e,t,i){this._trianglesStackRenderer.pushOriginBoundRectangle(e,t,i)}pushCenteredRectangle(e,t,i){this._trianglesStackRenderer.pushCenteredRectangle(e,t,i)}pushTriangle(e,t,i,n){this._trianglesStackRenderer.pushTriangle(e,t,i,n)}pushQuad(e,t,i){this.pushTriangle([e[0]+0*t[0],e[1]+0*t[1],e[2]],[e[0]+1*t[0],e[1]+1*t[1],e[2]],[e[0]+1*t[0],e[1]+0*t[1],e[2]],i),this.pushTriangle([e[0]+0*t[0],e[1]+0*t[1],e[2]],[e[0]+1*t[0],e[1]+1*t[1],e[2]],[e[0]+0*t[0],e[1]+1*t[1],e[2]],i)}flush(e){(this._wireFramesStackRenderer.canRender()||this._trianglesStackRenderer.canRender())&&this._shader.bind((t=>{t.setMatrix4Uniform("u_composedMatrix",e),this._wireFramesStackRenderer.flush(),this._trianglesStackRenderer.flush()}))}safeRender(e,t){this._shader.bind((i=>{i.setMatrix4Uniform("u_composedMatrix",e),t(),this._wireFramesStackRenderer.flush(),this._trianglesStackRenderer.flush()}))}clear(){this._wireFramesStackRenderer.clear(),this._trianglesStackRenderer.clear()}},TextRenderer:class{constructor(){this._texture=new ye,this._buffer=new Float32Array(36864),this._currentSize=0,this._textScale=14,this._textColor=[1,1,1],this._horizontalTextAlign="left",this._verticalTextAlign="top",this._shader=new xe("TextRenderer",{vertexSrc:Ie,fragmentSrc:Ue,attributes:["a_vertex_position","a_vertex_texCoord","a_offset_position","a_offset_texCoord","a_offset_color","a_offset_scale"],uniforms:["u_composedMatrix","u_texture"]});const e=new pe;e.reset().setPrimitiveType("triangles").addVbo().addVboAttribute("a_vertex_position","vec2f").addVboAttribute("a_vertex_texCoord","vec2f").setStride(16).addVbo().setVboAsDynamic().setVboAsInstanced().addVboAttribute("a_offset_position","vec3f").addVboAttribute("a_offset_texCoord","vec2f").addVboAttribute("a_offset_color","vec3f").addVboAttribute("a_offset_scale","float").setStride(36),this._geometry=new _e(this._shader,e.getDef());const t=[{position:[.5,-.5],texCoord:[1*Ne[0],1*Ne[1]]},{position:[-.5,-.5],texCoord:[0*Ne[0],1*Ne[1]]},{position:[.5,.5],texCoord:[1*Ne[0],0*Ne[1]]},{position:[-.5,.5],texCoord:[0*Ne[0],0*Ne[1]]}],i=[1,0,2,1,2,3],n=[];for(const e of i){const i=t[e];n.push(i.position[0],i.position[1],i.texCoord[0],i.texCoord[1])}this._geometry.allocateBuffer(0,n,n.length),this._geometry.setPrimitiveCount(n.length/4),this._texCoordMap=new Map([[" ",[0*Ne[0],0*Ne[1]]],["!",[1*Ne[0],0*Ne[1]]],['"',[2*Ne[0],0*Ne[1]]],["#",[3*Ne[0],0*Ne[1]]],["$",[4*Ne[0],0*Ne[1]]],["%",[5*Ne[0],0*Ne[1]]],["&",[6*Ne[0],0*Ne[1]]],["'",[7*Ne[0],0*Ne[1]]],["(",[8*Ne[0],0*Ne[1]]],[")",[9*Ne[0],0*Ne[1]]],["*",[10*Ne[0],0*Ne[1]]],["+",[11*Ne[0],0*Ne[1]]],[",",[12*Ne[0],0*Ne[1]]],["-",[13*Ne[0],0*Ne[1]]],[".",[14*Ne[0],0*Ne[1]]],["/",[15*Ne[0],0*Ne[1]]],["0",[0*Ne[0],1*Ne[1]]],["1",[1*Ne[0],1*Ne[1]]],["2",[2*Ne[0],1*Ne[1]]],["3",[3*Ne[0],1*Ne[1]]],["4",[4*Ne[0],1*Ne[1]]],["5",[5*Ne[0],1*Ne[1]]],["6",[6*Ne[0],1*Ne[1]]],["7",[7*Ne[0],1*Ne[1]]],["8",[8*Ne[0],1*Ne[1]]],["9",[9*Ne[0],1*Ne[1]]],[":",[10*Ne[0],1*Ne[1]]],[";",[11*Ne[0],1*Ne[1]]],["<",[12*Ne[0],1*Ne[1]]],["=",[13*Ne[0],1*Ne[1]]],[">",[14*Ne[0],1*Ne[1]]],["?",[15*Ne[0],1*Ne[1]]],["@",[0*Ne[0],2*Ne[1]]],["A",[1*Ne[0],2*Ne[1]]],["B",[2*Ne[0],2*Ne[1]]],["C",[3*Ne[0],2*Ne[1]]],["D",[4*Ne[0],2*Ne[1]]],["E",[5*Ne[0],2*Ne[1]]],["F",[6*Ne[0],2*Ne[1]]],["G",[7*Ne[0],2*Ne[1]]],["H",[8*Ne[0],2*Ne[1]]],["I",[9*Ne[0],2*Ne[1]]],["J",[10*Ne[0],2*Ne[1]]],["K",[11*Ne[0],2*Ne[1]]],["L",[12*Ne[0],2*Ne[1]]],["M",[13*Ne[0],2*Ne[1]]],["N",[14*Ne[0],2*Ne[1]]],["O",[15*Ne[0],2*Ne[1]]],["P",[0*Ne[0],3*Ne[1]]],["Q",[1*Ne[0],3*Ne[1]]],["R",[2*Ne[0],3*Ne[1]]],["S",[3*Ne[0],3*Ne[1]]],["T",[4*Ne[0],3*Ne[1]]],["U",[5*Ne[0],3*Ne[1]]],["V",[6*Ne[0],3*Ne[1]]],["W",[7*Ne[0],3*Ne[1]]],["X",[8*Ne[0],3*Ne[1]]],["Y",[9*Ne[0],3*Ne[1]]],["Z",[10*Ne[0],3*Ne[1]]],["[",[11*Ne[0],3*Ne[1]]],["\\",[12*Ne[0],3*Ne[1]]],["]",[13*Ne[0],3*Ne[1]]],["^",[14*Ne[0],3*Ne[1]]],["_",[15*Ne[0],3*Ne[1]]],["`",[0*Ne[0],4*Ne[1]]],["a",[1*Ne[0],4*Ne[1]]],["b",[2*Ne[0],4*Ne[1]]],["c",[3*Ne[0],4*Ne[1]]],["d",[4*Ne[0],4*Ne[1]]],["e",[5*Ne[0],4*Ne[1]]],["f",[6*Ne[0],4*Ne[1]]],["g",[7*Ne[0],4*Ne[1]]],["h",[8*Ne[0],4*Ne[1]]],["i",[9*Ne[0],4*Ne[1]]],["j",[10*Ne[0],4*Ne[1]]],["k",[11*Ne[0],4*Ne[1]]],["l",[12*Ne[0],4*Ne[1]]],["m",[13*Ne[0],4*Ne[1]]],["n",[14*Ne[0],4*Ne[1]]],["o",[15*Ne[0],4*Ne[1]]],["p",[0*Ne[0],5*Ne[1]]],["q",[1*Ne[0],5*Ne[1]]],["r",[2*Ne[0],5*Ne[1]]],["s",[3*Ne[0],5*Ne[1]]],["t",[4*Ne[0],5*Ne[1]]],["u",[5*Ne[0],5*Ne[1]]],["v",[6*Ne[0],5*Ne[1]]],["w",[7*Ne[0],5*Ne[1]]],["x",[8*Ne[0],5*Ne[1]]],["y",[9*Ne[0],5*Ne[1]]],["z",[10*Ne[0],5*Ne[1]]],["{",[11*Ne[0],5*Ne[1]]],["|",[12*Ne[0],5*Ne[1]]],["}",[13*Ne[0],5*Ne[1]]],["~",[14*Ne[0],5*Ne[1]]]]);const r=new Uint8Array(98304);{let e=0;for(let t=0;t<5818;t+=2){let i=parseInt(`${"7e7e28fd03fd07fe04fe0aff02ff7e4dfd0cfd03fd07fe04fe0aff02ff1afc0dfd10fc08fc0ffe55ff15fb0bfd03fd07fe04fe08f707fd04ff07fe02fe0cfd0ffd0cfd0aff03fe03ff0afe44fe15fb0bfd03fd04f204f607fd03fe07fe02fe0cfd0efd0efd0aff02fe02ff0bfe43fd15fb0cfe03fe05f204fe01ff02ff0afd02fd07fe02fe0bfd0efd10fd0afa0cfe42fd16fb1bfe04fe07fe01ff02ff0efd09fc1cfd12fd09fa0cfe41fd17fb1bfe04fe07f70bfd0afc04ff17fd12fd06f405f616f61cfd19fd1cfe04fe08f709fd0bfb02fe17fd12fd06f405f616f61bfd1afd1cfe04fe0aff02ff01fe08fd0bfe02fa17fd12fd09fa0cfe3efd37f207ff02ff01fe07fd02fd07fe03fc19fd10fd0afa0cfe3dfd38f204f607fe03fd07fe03fd1bfd0efd0aff02fe02ff0bfe0cfd1dfd0dfd1dfd1cfe04fe07f708ff04fd07fe02fb1bfd0cfd0aff03fe03ff0afe0cfd1dfd0cfd1efd1cfe04fe0aff02ff1afb02fe1bfc08fc0ffe1cfd1dfd0bfd1ffd1cfe04fe0aff02ff7afd7e7e7e7e7e7e0efd17fd10fc0af80bfe0bf909f90dfd08f609fb08f506f808f82cfd19fd0df807fd04fd0afe0afd03fd07fd03fd0bfc08fd0ffd0bfd05fd05fd04fd06fd04fd2afd1bfd0bfc02fc06fd03fc09fd0afd04fd06fd04fd09fb08fd0efd0cfd05fd05fd04fd06fd04fd09fd0cfd0efd1dfd0afe05fd06fd02fb06fa11fd0dfd08fe01fd08fd0dfd0dfd05fd05fd04fd06fd04fd09fd0cfd0dfd0af409fd10fd06fd02fb06fa10fd0dfd08fe02fd08fd0dfd15fd05fb02fd06fd04fd09fd0cfd0cfd0bf40afd0efd07fd01fe01fd09fd0ffd0bfb08fe03fd08f808f70efd08fa08f626fd23fd0cfd08fd01fe01fd09fd0efd0cfb08f606f707f60cfd09fa09f726fd23fd0bfd09fb02fd09fd0dfd10fd07f60cfc06fd04fd0bfd08fd02fb0dfd09fd0cfd0cfd0bf40afd0cfd09fb02fd09fd0cfd12fd0bfd0ffd06fd04fd0afd09fd04fd0dfd09fd0cfd0dfd0af409fd19fc03fd09fd0bfd03fd06fd04fd0bfd08fd04fd06fd04fd09fd0afd04fd0cfd0afd0cfd0efd1dfd1afd04fd09fd0afd04fd06fd03fd0cfd08fd03fd07fd04fd09fd0afd04fd0bfd19fd10fd1bfd0ffd0af807f707f607f90bf907f909f80afd0bf809fb2efd19fd10fd7e51fd17fd11fd7e7e7e7e13f87e78fd05fd08fc09f709f907f808f606f608f907fd03fd07f90df905fc03fd06fb0bfd05fd05fd05fd08fb08fd05fd07fa09fd03fd07fd03fd07fd02fd08fd04fe07fd04fe07fd03fd06fd03fd09fd11fd08fd03fd07fd0cfc03fc05fd05fd07fd01fd07fd05fd06fd02fd08fd03fd06fd04fd07fd03fd07fd05ff07fd05ff06fd04fd06fd03fd09fd11fd08fd02fd08fd0cfb01fb05fc04fd06fd03fd06fd05fd05fd04fd07fd03fd06fd0efd03fd07fd0dfd0cfd04fd06fd03fd09fd11fd08fd01fd09fd0cf505fb03fd05fd05fd05fd02fa05fd04fd07fd03fd06fd0efd03fd07fd03fe08fd03fe07fd0dfd03fd09fd11fd08fa0afd0cf505fa02fd05fd05fd05fd02fa05fd04fd07f807fd0efd03fd07f808f807fd0df709fd11fd08fb0bfd0cfd01fd01fd05fd01fd01fd05fd05fd05fd02fa05fd04fd07f807fd0efd03fd07f808f807fd0df709fd11fd08fb0bfd0cfd02ff02fd05fd02fa05fd05fd05fd02fa05f607fd03fd06fd0efd03fd07fd03fe08fd03fe07fd02fb06fd03fd09fd0bfd03fd08fa0afd0cfd05fd05fd03fb05fd05fd05fd0dfd04fd07fd03fd06fd0efd03fd07fd0dfd0cfd04fd06fd03fd09fd0bfd03fd08fd01fd09fd05ff06fd05fd05fd04fc05fd05fd05fd0dfd04fd07fd03fd06fd04fd07fd03fd07fd05ff07fd0cfd04fd06fd03fd09fd0bfd03fd08fd02fd08fd04fe06fd05fd05fd05fd06fd03fd06fd0dfd04fd07fd03fd07fd03fd07fd02fd08fd04fe07fd0dfd03fd06fd03fd09fd0bfd03fd08fd03fd07fd03fd06fd05fd05fd05fd07fd01fd07fd0dfd04fd06f709f907f808f606fb0df806fd03fd07f90af908fc03fd06f606fd05fd05fd05fd08fb0af87e7e7e7e7e7e7e68fe1af70afb08f708f807f505fd03fd07fd03fd07fd05fd05fd03fd07fd03fd07f608f907ff11f90afc1afd03fd07fc01fc07fd03fd06fd04fd06fe02fd02fe05fd03fd07fd03fd07fd05fd05fd03fd07fd03fd07fd04fd08fd0bfe14fd09fa19fd03fd07fd03fd07fd03fd06fd04fd06ff03fd03ff05fd03fd07fd03fd07fd05fd05fd03fd07fd03fd07fe05fd08fd0bfd13fd08fd02fd18fd03fd06fd05fd06fd03fd06fd04fd0afd09fd03fd07fd03fd07fd05fd06fd01fd08fd03fd07ff05fd09fd0cfd12fd07fd04fd17fd03fd06fd05fd06fd03fd06fd11fd09fd03fd07fd03fd07fd05fd07fb09fd03fd0cfd0afd0dfd11fd28f807fd05fd06f808f90cfd09fd03fd07fd03fd07fd02ff02fd08fd0bfd01fd0cfd0bfd0efd10fd28f807fd05fd06f809f90bfd09fd03fd07fd03fd07fd02ff02fd08fd0cfb0cfd0cfd0ffd0ffd28fd0cfd03fb06fd02fd0efd0afd09fd03fd07fd03fd07fd02ff02fd07fb0cfd0cfd0dfd10fd0efd28fd0cfd02fa06fd03fd06fd04fd0afd09fd03fd07fd03fd08f707fd01fd0bfd0bfd05ff08fd11fd0dfd28fd0df707fd03fd06fd04fd0afd09fd03fd08fd01fd09fc01fc06fd03fd0afd0afd05fe08fd12fd0cfd28fd0df707fd03fd06fd04fd0afd09fd03fd09fb0bfd01fd07fd03fd0afd0afd04fd08fd13fd0bfd27fb12fd06fc03fd07f809f908f90bfd0cfd01fd07fd03fd08f908f608f910fd06f93cfa7e54f07e72f07e7e7e7e0bfd1dfc21fb19fb18fc10fd0ffd07fc0dfa39fd1efd22fd19fd01fd18fd10fd0ffd08fd10fd3bfd1cfd22fd19fd01fd18fd10fd0ffd08fd10fd3bfd1cfd22fd19fd1cfd2dfd10fd4af909f808f909f808f90afd0cfb02fe07fd01fc08fa0cfa08fd03fd0afd09f606f809f91efd08fd03fd06fd03fd07fd03fd07fd03fd07f808fd03fd08fc02fd0afd0ffd08fd02fd0bfd09fd02ff02fd05fd03fd07fd03fd1dfd08fd03fd06fd03fd07fd03fd07fd03fd07f808fd03fd08fc02fd0afd0ffd08fd01fd0cfd09fd02ff02fd05fd03fd07fd03fd18f808fd03fd06fd0dfd03fd07f709fd0bfd03fd08fd03fd0afd0ffd08fa0dfd09fd02ff02fd05fd03fd07fd03fd17fd03fd08fd03fd06fd0dfd03fd07fd0ffd0bfd03fd08fd03fd0afd0ffd08fd01fd0cfd09fd02ff02fd05fd03fd07fd03fd17fd03fd08fd03fd06fd03fd07fd03fd07fd03fd09fd0cf808fd03fd0afd0ffd08fd02fd0bfd09fd02ff02fd05fd03fd07fd03fd17fd03fd08fd03fd06fd03fd07fd03fd07fd03fd09fd0df908fd03fd0afd0ffd08fd03fd0afd09fd02ff02fd05fd03fd07fd03fd18fb02fe06fe02fb08f909fb02fe07f908f90ffd07fc03fd07f706fd03fd07fc03fd07f706fd05fd05fd03fd08f978fd03fd27fd03fd7e4af92afa7e7e7e7e7e7e18fa09fc09fa1efe4eff6efd0dfc0dfd1cfc4cfe6efd0dfc0dfd1bfa4afd6efd0dfc0dfd1afd02fd07fe02fb07fb02fe07fc02fd08f908f707fd03fd07fd03fd07fd05fd05fd02fd09fd03fd06f80afd0efc0efd08fb03fd05fd04fd07fd03fd05fd03fd09f706fd04fe09fd0bfd03fd07fd03fd07fd05fd05fd02fd09fd03fd06fe03fd08fd24fd05fd01fd02fd05fe06fe07fd03fd05fd03fd09fc02fd06fd04fe09fd0bfd03fd07fd03fd07fd05fd06fa0afd03fd06ff03fd09fd24fd05fd02fd01fd05fe06fe07fd03fd05fd03fd09fd0dfb0cfd0bfd03fd07fd03fd07fd02ff02fd07fc0bfd03fd09fd0cfd0efc0efd07fd03fb06fe06fe07fd03fd05fd03fd09fd0ffb0afd0bfd03fd07fd03fd07fd02ff02fd07fc0bfd03fd08fd0efd0dfc0dfd19fe06fe07fd03fd05fd03fd09fd0cfe04fd09fd01fd07fd03fd08fd01fd09fc01fc07fa0bf908fd03ff0bfd0dfc0dfd19fe06fe07f807f809fd0cfe04fd09fd01fd07fd03fd09fb0bfd01fd07fd02fd0bfb08fd03fe0bfd0dfc0dfd19f607fd11fd08fb0cf90bfb09fb02fe09fd0cfd01fd07fd02fd0dfd08f80cfa09fc09fa1af607fd11fd7cfd69fb0ffb77fa".substring(t,t+2)}000000`,16)>>24,n=0;i<0&&(i=-i,n=255);for(let t=0;t<i;++t)r[4*e+0]=n,r[4*e+1]=n,r[4*e+2]=n,r[4*e+3]=n,++e}}this._texture.initialize(),this._texture.bind((e=>{e.loadFromMemory(256,96,r)}))}setTextAlign(e,t){return this._horizontalTextAlign=e,this._verticalTextAlign=t,this}setTextScale(e){return this._textScale=e,this}setTextColor(e,t,i){return this._textColor[0]=e,this._textColor[1]=t,this._textColor[2]=i,this}pushText(e,t){if(0===e.length)return this;if(this._textScale<=0)return this;const i=[0];for(let t=0;t<e.length;++t)"\n"==e[t]?i.push(0):i[i.length-1]+=1;if(0===i.length)return this;let n=0;const r=[0,0],s=.5*this._textScale;switch(this._horizontalTextAlign){case"left":r[0]=t[0];break;case"centered":r[0]=t[0]-i[n]*s+s;break;case"right":r[0]=t[0]-i[n]*this._textScale+this._textScale}switch(this._verticalTextAlign){case"top":r[1]=t[1];break;case"centered":r[1]=t[1]+i.length*s-s;break;case"bottom":r[1]=t[1]-(i.length-1)*this._textScale}for(let o=0;o<e.length;++o){const a=e[o];if("\n"==a){switch(n+=1,this._horizontalTextAlign){case"left":r[0]=t[0];break;case"centered":r[0]=t[0]-i[n]*s+s;break;case"right":r[0]=t[0]-i[n]*this._textScale+this._textScale}r[1]-=this._textScale}else this._pushLetter(a,r),r[0]+=this._textScale}return this}_pushLetter(e,t){if(this._currentSize+90>=this._buffer.length)return;const i=this._texCoordMap.get(e);if(!i)throw new Error(`fail to find a letter, letter=${e}`);for(let e=-1;e<=1;++e)for(let n=-1;n<=1;++n)this._buffer[this._currentSize++]=t[0]+2*n,this._buffer[this._currentSize++]=t[1]+2*e,this._buffer[this._currentSize++]=-.1,this._buffer[this._currentSize++]=i[0],this._buffer[this._currentSize++]=i[1],this._buffer[this._currentSize++]=0,this._buffer[this._currentSize++]=0,this._buffer[this._currentSize++]=0,this._buffer[this._currentSize++]=this._textScale;this._buffer[this._currentSize++]=t[0],this._buffer[this._currentSize++]=t[1],this._buffer[this._currentSize++]=0,this._buffer[this._currentSize++]=i[0],this._buffer[this._currentSize++]=i[1],this._buffer[this._currentSize++]=this._textColor[0],this._buffer[this._currentSize++]=this._textColor[1],this._buffer[this._currentSize++]=this._textColor[2],this._buffer[this._currentSize++]=this._textScale}flush(e){return 0===this._currentSize||(this._shader.bind((t=>{t.setMatrix4Uniform("u_composedMatrix",e),t.setTextureUniform("u_texture",this._texture,0),this._geometry.allocateBuffer(1,this._buffer,this._currentSize),this._geometry.setInstancedCount(this._currentSize/9),this._geometry.render()})),ye.unbind(),this.clear()),this}clear(){return this._currentSize=0,this}},widgets:je});class Ke{constructor(e){if(this._lines=[],this._maxLines=30,this._textAreaElement=document.getElementById(e),!this._textAreaElement)throw new Error(`DOM elements not found, id=${e}`);this._textAreaElement.value=""}log(...e){if(0===e.length)return;const t=Array.prototype.slice.call(e).join(" ");console.log(t),this._pushText(t)}error(...e){if(0===e.length)return;const t=Array.prototype.slice.call(e).join(" ");console.error(t),this._pushText(`[ERR] - ${t}`)}_pushText(e){this._lines.push(e),this._lines.length>this._maxLines&&this._lines.splice(0,this._lines.length-this._maxLines),this._textAreaElement.value=`${this._lines.join("\n")}\n`,this._textAreaElement.scrollTop=this._textAreaElement.scrollHeight}peekLast(){if(this._lines.length>0)return this._lines[this._lines.length-1]}popLast(){this._lines.length>0&&this._lines.splice(this._lines.length-1,1)}}function Ze(e,t,i,n){return new(i||(i=Promise))((function(r,s){function o(e){try{c(n.next(e))}catch(e){s(e)}}function a(e){try{c(n.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}c((n=n.apply(e,t||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;class Qe{static load(e){return Ze(this,void 0,void 0,(function*(){yield Qe.loadJsPart(e.jsUrl),yield Qe.loadWasmPart(e.wasmUrl)}))}static loadJsPart(e){return Ze(this,void 0,void 0,(function*(){var t;yield(t=e,new Promise(((e,i)=>{const n=document.createElement("script");n.src=t,n.addEventListener("load",e),n.addEventListener("error",i),document.head.appendChild(n)})))}))}static loadWasmPart(e){return Ze(this,void 0,void 0,(function*(){Qe._wasmModule=yield FrankenPhysLoader({locateFile:t=>`${e}/${t}`})}))}static get(){if(!this._wasmModule)throw new Error("FrankenPhys wasm module not loaded");return this._wasmModule}}class Je{constructor(){this._listenersMap=new Map}isEventListenedTo(e){const t=this._listenersMap.get(e);return!!t&&t.length>0}addEventListener(e,t){let i=this._listenersMap.get(e);if(i||(i=[],this._listenersMap.set(e,i)),-1!==i.indexOf(t))throw new Error(`duplicated event listener, type=${e}`);i.push(t)}on(e,t){this.addEventListener(e,t)}hasEventListener(e,t){const i=this._listenersMap.get(e);return void 0!==i&&-1!==i.indexOf(t)}removeEventListener(e,t){const i=this._listenersMap.get(e);if(void 0===i)return;const n=i.indexOf(t);if(-1===n)throw new Error(`unknown event listener, type=${e}`);i.splice(n,1)}dispatchEvent(e){const t=this._listenersMap.get(e.type);if(void 0===t)return;const i=t.slice(0);for(let t=0;t<i.length;++t)i[t].call(this,e)}}class et{static set(e){return Ze(this,void 0,void 0,(function*(){et._wasmModule=e}))}static get(){if(!this._wasmModule)throw new Error("FrankenPhys wasm module not loaded");return this._wasmModule}}var tt="undefined"!=typeof Float32Array?Float32Array:Array;function it(){var e=new tt(3);return tt!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function nt(e,t,i){var n=new tt(3);return n[0]=e,n[1]=t,n[2]=i,n}function rt(e,t,i,n){var r=new tt(4);return r[0]=e,r[1]=t,r[2]=i,r[3]=n,r}function st(){var e=new tt(4);return tt!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)}),it(),function(){var e=new tt(4);tt!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0)}(),it(),nt(1,0,0),nt(0,1,0),st(),st(),function(){var e=new tt(9);tt!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[5]=0,e[6]=0,e[7]=0),e[0]=1,e[4]=1,e[8]=1}(),function(){var e=new tt(2);tt!=Float32Array&&(e[0]=0,e[1]=0)}();const ot=(e,t)=>{const i=et.get(),n=new i.btVector3(t.from[0],t.from[1],t.from[2]),r=new i.btVector3(t.to[0],t.to[1],t.to[2]),s=new i.btTransform;s.setIdentity(),s.setOrigin(n);const o=new i.btTransform;o.setIdentity(),o.setOrigin(r);const a=new i.ClosestConvexResultCallback(n,r);a.set_m_collisionFilterGroup(t.collisionFilterGroup),a.set_m_collisionFilterMask(t.collisionFilterMask);const c=new i.btSphereShape(t.radius);if(e.convexSweepTest(c,s,o,a,0),!a.hasHit())return i.destroy(n),i.destroy(r),i.destroy(a),i.destroy(c),i.destroy(s),void i.destroy(o);const d=a.get_m_hitPointWorld(),f=a.get_m_hitNormalWorld(),h=a.get_m_closestHitFraction(),l=nt(d.x(),d.y(),d.z()),u=nt(f.x(),f.y(),f.z());return i.destroy(f),i.destroy(d),i.destroy(n),i.destroy(r),i.destroy(a),i.destroy(c),i.destroy(s),i.destroy(o),{fraction:h,impact:l,normal:u}};class at extends Je{constructor(e,t){super(),this._isAlive=!0;const i=et.get();this._customShape=t;const n=new i.btVector3;this._customShape.shape.calculateLocalInertia(e.mass,n);const r=new i.btRigidBodyConstructionInfo(e.mass,null,this._customShape.shape,n);this._rawRigidBody=new i.btRigidBody(r),this.setPositionAndRotation(e.position,e.orientation),i.destroy(n),i.destroy(r)}dispose(){et.get().destroy(this._rawRigidBody),this._customShape.cleanup(),this._rawRigidBody=null,this._isAlive=!1}isAlive(){return this._isAlive}setPositionAndRotation(e,t){const i=et.get(),n=new i.btVector3(e[0],e[1],e[2]),r=new i.btQuaternion(t[0],t[1],t[2],t[3]),s=new i.btTransform(r,n);this._rawRigidBody.setWorldTransform(s),i.destroy(s),i.destroy(n),i.destroy(r)}setPosition(e,t,i){const n=et.get(),r=this.getRotation(),s=new n.btVector3(e,t,i),o=new n.btQuaternion(r[0],r[1],r[2],r[3]),a=new n.btTransform(o,s);this._rawRigidBody.setWorldTransform(a),n.destroy(a),n.destroy(s),n.destroy(o)}setRotation(e,t,i,n){const r=et.get(),s=this.getPosition(),o=new r.btVector3(s[0],s[1],s[2]),a=new r.btQuaternion(e,t,i,n),c=new r.btTransform(a,o);this._rawRigidBody.setWorldTransform(c),r.destroy(c),r.destroy(o),r.destroy(a)}getPositionAndRotation(e,t){const i=et.get(),n=this._rawRigidBody.getWorldTransform(),r=n.getOrigin(),s=n.getRotation();e[0]=r.x(),e[1]=r.y(),e[2]=r.z(),t[0]=s.x(),t[1]=s.y(),t[2]=s.z(),t[3]=s.w(),i.destroy(s),i.destroy(r),i.destroy(n)}getPosition(){const e=et.get(),t=this._rawRigidBody.getWorldTransform(),i=t.getOrigin(),n=nt(i.x(),i.y(),i.z());return e.destroy(i),e.destroy(t),n}getRotation(){const e=et.get(),t=this._rawRigidBody.getWorldTransform(),i=t.getRotation(),n=rt(i.x(),i.y(),i.z(),i.w());return e.destroy(i),e.destroy(t),n}getLinearVelocity(){const e=et.get(),t=this._rawRigidBody.getLinearVelocity(),i=nt(t.x(),t.y(),t.z());return e.destroy(t),i}getAngularVelocity(){const e=et.get(),t=this._rawRigidBody.getAngularVelocity(),i=nt(t.x(),t.y(),t.z());return e.destroy(t),i}setLinearVelocity(e,t,i){const n=et.get(),r=new n.btVector3(e,t,i);this._rawRigidBody.setLinearVelocity(r),n.destroy(r)}setAngularVelocity(e,t,i){const n=et.get(),r=new n.btVector3(e,t,i);this._rawRigidBody.setAngularVelocity(r),n.destroy(r)}setLinearFactor(e,t,i){const n=et.get(),r=new n.btVector3(e,t,i);this._rawRigidBody.setLinearFactor(r),n.destroy(r)}setAngularFactor(e,t,i){const n=et.get(),r=new n.btVector3(e,t,i);this._rawRigidBody.setAngularFactor(r),n.destroy(r)}applyCentralForce(e,t,i){const n=et.get(),r=new n.btVector3(e,t,i);this._rawRigidBody.applyCentralForce(r),n.destroy(r)}applyCentralImpulse(e,t,i){const n=et.get(),r=new n.btVector3(e,t,i);this._rawRigidBody.applyCentralImpulse(r),n.destroy(r)}setDamping(e,t=0){this._rawRigidBody.setDamping(e,t)}setCcdMotionThreshold(e){this._rawRigidBody.setCcdMotionThreshold(e)}setCcdSweptSphereRadius(e){this._rawRigidBody.setCcdSweptSphereRadius(e)}setRestitution(e){this._rawRigidBody.setRestitution(e)}setFriction(e){this._rawRigidBody.setFriction(e)}setRollingFriction(e){this._rawRigidBody.setRollingFriction(e)}setGravity(e,t,i){const n=et.get(),r=new n.btVector3(e,t,i);this._rawRigidBody.setGravity(r),n.destroy(r)}isStaticObject(){return this._rawRigidBody.isStaticObject()}isKinematicObject(){return this._rawRigidBody.isKinematicObject()}isStaticOrKinematicObject(){return this._rawRigidBody.isStaticOrKinematicObject()}isActive(){return this.isStaticOrKinematicObject()||this._rawRigidBody.isActive()}enableDeactivation(){this._rawRigidBody.activate(!0)}disableDeactivation(){this._rawRigidBody.setActivationState(4)}cannotDeactivate(){return this.isStaticOrKinematicObject()||4==this._rawRigidBody.getActivationState()}canDeactivate(){return!this.cannotDeactivate()}}class ct{constructor(e,t,i){const n=et.get();this._chassisBody=t,this._vehicleTuning=new n.btVehicleTuning,this._defaultVehicleRaycaster=new n.btDefaultVehicleRaycaster(e),this._rawVehicle=new n.btRaycastVehicle(this._vehicleTuning,t._rawRigidBody,this._defaultVehicleRaycaster),this._rawVehicle.setCoordinateSystem(i.coordinateSystem[0],i.coordinateSystem[1],i.coordinateSystem[2]);const r=new n.btVector3(i.groundDirection[0],i.groundDirection[1],i.groundDirection[2]),s=new n.btVector3(i.rotationAxis[0],i.rotationAxis[1],i.rotationAxis[2]),o=new n.btVector3;for(let e=0;e<i.wheels.length;++e){const t=i.wheels[e];o.setValue(t.connectionPoint[0],t.connectionPoint[1],t.connectionPoint[2]);const n=this._rawVehicle.addWheel(o,r,s,i.suspensionRestLength,i.wheelRadius,this._vehicleTuning,t.isFrontWheel);n.set_m_suspensionStiffness(i.suspensionStiffness),n.set_m_wheelsDampingRelaxation(i.wheelsDampingRelaxation),n.set_m_wheelsDampingCompression(i.wheelsDampingCompression),n.set_m_frictionSlip(i.wheelFriction),n.set_m_rollInfluence(i.rollInfluence)}n.destroy(o),n.destroy(r),n.destroy(s)}dispose(){const e=et.get();e.destroy(this._rawVehicle),e.destroy(this._defaultVehicleRaycaster),e.destroy(this._vehicleTuning)}getChassisBody(){return this._chassisBody}setSteeringValue(e,t){this._rawVehicle.setSteeringValue(t,e)}applyEngineForce(e,t){this._rawVehicle.applyEngineForce(t,e)}setBrake(e,t){this._rawVehicle.setBrake(t,e)}getWheeTransforms(){const e=et.get(),t=[],i=this._rawVehicle.getNumWheels();for(let n=0;n<i;++n){this._rawVehicle.updateWheelTransform(n,!0);const i=this._rawVehicle.getWheelTransformWS(n),r=i.getOrigin(),s=i.getRotation();t.push({position:nt(r.x(),r.y(),r.z()),rotation:rt(s.x(),s.y(),s.z(),s.w())}),e.destroy(s),e.destroy(r),e.destroy(i)}return t}}class dt{constructor(e){this._bodyA=e.bodyA,this._bodyB=e.bodyB;const t=et.get(),i=e.bodyA._rawRigidBody,n=e.bodyB._rawRigidBody,r=new t.btQuaternion(0,0,1,0),s=new t.btVector3(e.frameA[0],e.frameA[1],e.frameA[2]),o=new t.btTransform(r,s),a=new t.btVector3(e.frameB[0],e.frameB[1],e.frameB[2]),c=new t.btTransform(r,a);this._rawConstraint=new t.btGeneric6DofSpringConstraint(i,n,o,c,e.useReferenceFrameA),this._rawConstraint.enableSpring(0,!1),this._rawConstraint.enableSpring(1,!1),this._rawConstraint.enableSpring(2,!1),this._rawConstraint.setStiffness(0,1),this._rawConstraint.setStiffness(1,1),this._rawConstraint.setStiffness(2,1),this._rawConstraint.setDamping(0,1),this._rawConstraint.setDamping(1,1),this._rawConstraint.setDamping(2,1),t.destroy(o),t.destroy(c),t.destroy(s),t.destroy(a),t.destroy(r)}dispose(){et.get().destroy(this._rawConstraint)}setLinearLowerLimit(e){const t=et.get(),i=new t.btVector3(e[0],e[1],e[2]);this._rawConstraint.setLinearLowerLimit(i),t.destroy(i)}setLinearUpperLimit(e){const t=et.get(),i=new t.btVector3(e[0],e[1],e[2]);this._rawConstraint.setLinearUpperLimit(i),t.destroy(i)}setAngularLowerLimit(e){const t=et.get(),i=new t.btVector3(e[0],e[1],e[2]);this._rawConstraint.setAngularLowerLimit(i),t.destroy(i)}setAngularUpperLimit(e){const t=et.get(),i=new t.btVector3(e[0],e[1],e[2]);this._rawConstraint.setAngularUpperLimit(i),t.destroy(i)}}class ft{constructor(e){this._bodyA=e.bodyA,this._bodyB=e.bodyB;const t=et.get(),i=e.bodyA._rawRigidBody,n=e.bodyB._rawRigidBody,r=new t.btVector3(e.pivotInA[0],e.pivotInA[1],e.pivotInA[2]),s=new t.btVector3(e.pivotInB[0],e.pivotInB[1],e.pivotInB[2]),o=new t.btVector3(e.axisInA[0],e.axisInA[1],e.axisInA[2]),a=new t.btVector3(e.axisInB[0],e.axisInB[1],e.axisInB[2]);this._rawConstraint=new t.btHingeConstraint(i,n,r,s,o,a,e.useReferenceFrameA),t.destroy(r),t.destroy(s),t.destroy(o),t.destroy(a)}dispose(){et.get().destroy(this._rawConstraint)}setLimit(e,t,i,n,r){this._rawConstraint.setLimit(e,t,i,n,r)}enableAngularMotor(e,t,i){this._rawConstraint.enableAngularMotor(e,t,i)}enableMotor(e){this._rawConstraint.enableMotor(e)}setMaxMotorImpulse(e){this._rawConstraint.setMaxMotorImpulse(e)}setMotorTarget(e,t){this._rawConstraint.setMotorTarget(e,t)}}const ht=(e,t,i)=>{const n=et.get(),r=new n.btVector3(i.from[0],i.from[1],i.from[2]),s=new n.btVector3(i.to[0],i.to[1],i.to[2]),o=new n.ClosestRayResultCallback(r,s);if(o.set_m_collisionFilterGroup(i.collisionFilterGroup),o.set_m_collisionFilterMask(i.collisionFilterMask),e.rayTest(r,s,o),!o.hasHit())return n.destroy(r),n.destroy(s),void n.destroy(o);const a=t.get(o.get_m_collisionObject().ptr);if(!a)return n.destroy(r),n.destroy(s),void n.destroy(o);const c=o.get_m_hitNormalWorld(),d=o.get_m_hitPointWorld(),f=nt(d.x(),d.y(),d.z()),h=nt(c.x(),c.y(),c.z());return n.destroy(c),n.destroy(d),n.destroy(r),n.destroy(s),n.destroy(o),{object:a,fraction:o.get_m_closestHitFraction(),impact:f,normal:h}};var lt;!function(e){e[e.DBG_NoDebug=0]="DBG_NoDebug",e[e.DBG_DrawWireframe=1]="DBG_DrawWireframe",e[e.DBG_DrawAabb=2]="DBG_DrawAabb",e[e.DBG_DrawFeaturesText=4]="DBG_DrawFeaturesText",e[e.DBG_DrawContactPoints=8]="DBG_DrawContactPoints",e[e.DBG_NoDeactivation=16]="DBG_NoDeactivation",e[e.DBG_NoHelpText=32]="DBG_NoHelpText",e[e.DBG_DrawText=64]="DBG_DrawText",e[e.DBG_ProfileTimings=128]="DBG_ProfileTimings",e[e.DBG_EnableSatComparison=256]="DBG_EnableSatComparison",e[e.DBG_DisableBulletLCP=512]="DBG_DisableBulletLCP",e[e.DBG_EnableCCD=1024]="DBG_EnableCCD",e[e.DBG_DrawConstraints=2048]="DBG_DrawConstraints",e[e.DBG_DrawConstraintLimits=4096]="DBG_DrawConstraintLimits",e[e.DBG_FastWireframe=8192]="DBG_FastWireframe",e[e.DBG_DrawNormals=16384]="DBG_DrawNormals",e[e.DBG_DrawFrames=32768]="DBG_DrawFrames"}(lt||(lt={}));var ut=Qe,_t=Object.freeze({__proto__:null,ConcretePhysicBody:at,ConcretePhysicVehicle:ct,ContactEventHandler:Je,get DebugDrawFlags(){return lt},PhysicWorld:class extends Je{constructor(){super(),this._bodyMap=new Map,this._vehicleMap=new Map,this._constraintMap=new Map,this._allConstraints=[],this._constraintMap2=new Map,this._allConstraints2=[];const e=et.get();this._collisionConf=new e.btDefaultCollisionConfiguration,this._dispatcher=new e.btCollisionDispatcher(this._collisionConf),this._broadPhase=new e.btDbvtBroadphase,this._solver=new e.btSequentialImpulseConstraintSolver,this._rawDynamicsWorld=new e.btjsDynamicsWorld(this._dispatcher,this._broadPhase,this._solver,this._collisionConf),this._rawDynamicsWorld.setGravity(new e.btVector3(0,0,-10)),this._initCollisionEvents()}dispose(){const e=et.get();this._allConstraints.forEach((e=>e.dispose())),this._allConstraints.length=0,this._constraintMap.clear(),this._allConstraints2.forEach((e=>e.dispose())),this._allConstraints2.length=0,this._constraintMap2.clear(),[...this._vehicleMap.values()].forEach((e=>e.dispose())),this._vehicleMap.clear(),[...this._bodyMap.values()].forEach((e=>e.dispose())),this._bodyMap.clear(),e.destroy(this._rawDynamicsWorld),e.destroy(this._solver),e.destroy(this._broadPhase),e.destroy(this._dispatcher),e.destroy(this._collisionConf)}createRigidBody(e){const t=this._getShape(e.shape,e.mass>0),i=new at(e,t);return this._rawDynamicsWorld.addRigidBody(i._rawRigidBody,-1,-1),this._bodyMap.set(i._rawRigidBody.ptr,i),i}_getShape(e,t){const i=et.get();switch(e.type){case"box":{const t=new i.btVector3;t.setValue(.5*e.size[0],.5*e.size[1],.5*e.size[2]);const n=new i.btBoxShape(t);return i.destroy(t),{shape:n,cleanup:()=>i.destroy(n)}}case"sphere":{const t=new i.btSphereShape(e.radius);return{shape:t,cleanup:()=>i.destroy(t)}}case"cylinder":{const t=new i.btVector3(e.radius,e.radius,e.length),n=new i.btCylinderShape(t);return{shape:n,cleanup:()=>{i.destroy(n),i.destroy(t)}}}case"capsule":{const t=new i.btCapsuleShape(e.radius,e.length);return{shape:t,cleanup:()=>i.destroy(t)}}case"mesh":{const n=new i.btTriangleMesh,r=new i.btVector3,s=new i.btVector3,o=new i.btVector3;if(e.triangles.forEach((([e,t,i])=>{r.setValue(e[0],e[1],e[2]),s.setValue(t[0],t[1],t[2]),o.setValue(i[0],i[1],i[2]),n.addTriangle(r,s,o)})),i.destroy(r),i.destroy(s),i.destroy(o),t){const e=new i.btGImpactMeshShape(n),t=this._rawDynamicsWorld.createCompoundFromGimpactShape(e,0);return{shape:t,cleanup:()=>{i.destroy(t),i.destroy(e),i.destroy(n)}}}const a=new i.btBvhTriangleMeshShape(n,!0);return{shape:a,cleanup:()=>{i.destroy(a),i.destroy(n)}}}case"compound":{const n=new i.btCompoundShape,r=[],s=new i.btVector3,o=new i.btQuaternion(0,0,1,0),a=new i.btTransform;for(const{shape:i,position:c,orientation:d}of e.shapes){const e=this._getShape(i,t);r.push(e),s.setValue(c[0],c[1],c[2]),o.setValue(d[0],d[1],d[2],d[3]),a.setOrigin(s),a.setRotation(o),n.addChildShape(a,e.shape)}return i.destroy(s),i.destroy(o),i.destroy(a),{shape:n,cleanup:()=>{i.destroy(n);for(const e of r)i.destroy(e)}}}}}destroyRigidBody(e){const t=e._rawRigidBody,i=t.ptr;this._rawDynamicsWorld.removeRigidBody(t),this._bodyMap.delete(i),e.dispose();const n=this._constraintMap.get(i);if(n)for(const e of n)this.destroyGeneric6DofConstraint(e);const r=this._constraintMap2.get(i);if(r)for(const e of r)this.destroyHingeConstraint(e)}createVehicle(e){const t=this.createRigidBody(e.chassisDef),i=new ct(this._rawDynamicsWorld,t,e);return this._rawDynamicsWorld.addAction(i._rawVehicle),this._vehicleMap.set(i.ptr,i),i}destroyVehicle(e){this.destroyRigidBody(e._chassisBody),this._rawDynamicsWorld.removeAction(e._rawVehicle),this._vehicleMap.delete(e.ptr),e.dispose()}createGeneric6DofConstraint(e){const t=new dt(e),i=e.bodyA._rawRigidBody.ptr;let n=this._constraintMap.get(i);n||(n=[],this._constraintMap.set(i,n)),n.push(t);const r=e.bodyB._rawRigidBody.ptr;let s=this._constraintMap.get(r);return s||(s=[],this._constraintMap.set(i,s)),s.push(t),this._allConstraints.push(t),this._rawDynamicsWorld.addConstraint(t._rawConstraint,!0),t}destroyGeneric6DofConstraint(e){const t=e;this._rawDynamicsWorld.removeConstraint(t._rawConstraint);const i=this._constraintMap.get(t._bodyA._rawRigidBody.ptr);if(i){const e=i.indexOf(t);e>=0&&i.splice(e,0)}const n=this._constraintMap.get(t._bodyB._rawRigidBody.ptr);if(n){const e=n.indexOf(t);e>=0&&n.splice(e,0)}const r=this._allConstraints.indexOf(t);r>=0&&this._allConstraints.splice(r,0),t.dispose()}createHingeConstraint(e){const t=new ft(e),i=e.bodyA._rawRigidBody.ptr;let n=this._constraintMap2.get(i);n||(n=[],this._constraintMap2.set(i,n)),n.push(t);const r=e.bodyB._rawRigidBody.ptr;let s=this._constraintMap2.get(r);return s||(s=[],this._constraintMap2.set(i,s)),s.push(t),this._allConstraints2.push(t),this._rawDynamicsWorld.addConstraint(t._rawConstraint,!0),t}destroyHingeConstraint(e){const t=e;this._rawDynamicsWorld.removeConstraint(t._rawConstraint);const i=this._constraintMap2.get(t._bodyA._rawRigidBody.ptr);if(i){const e=i.indexOf(t);e>=0&&i.splice(e,0)}const n=this._constraintMap2.get(t._bodyB._rawRigidBody.ptr);if(n){const e=n.indexOf(t);e>=0&&n.splice(e,0)}const r=this._allConstraints2.indexOf(t);r>=0&&this._allConstraints2.splice(r,0),t.dispose()}rayCast(e,t){return ht(this._rawDynamicsWorld,this._bodyMap,{from:e,to:t,collisionFilterGroup:-1,collisionFilterMask:-1})}convexSweep(e,t,i){return ot(this._rawDynamicsWorld,{from:e,to:t,collisionFilterGroup:-1,collisionFilterMask:-1,radius:i})}_initCollisionEvents(){const e=e=>{const t=e.data.getBodyA(),i=e.data.getBodyB(),n=this._bodyMap.get(t.ptr),r=this._bodyMap.get(i.ptr);if(!n||!r)return;const s=e.type,o=(this.isEventListenedTo(s)?1:0)|(n.isEventListenedTo(s)?2:0)|(r.isEventListenedTo(s)?4:0);if(0==o)return;const a=e.data.getId(),c=e.data.getPosition(),d=e.data.getNormalB(),f={x:c.x(),y:c.y(),z:c.z()},h={x:d.x(),y:d.y(),z:d.z()};1&o&&this.dispatchEvent({type:s,data:{contactId:a,rigidBodyA:n,rigidBodyB:r,position:nt(f.x,f.y,f.z),normalB:nt(h.x,h.y,h.z)}}),2&o&&n.dispatchEvent({type:s,data:{contactId:a,other:r,position:nt(f.x,f.y,f.z),normalB:nt(-h.x,-h.y,-h.z)}}),4&o&&r.dispatchEvent({type:s,data:{contactId:a,other:n,position:nt(f.x,f.y,f.z),normalB:nt(h.x,h.y,h.z)}})},t=et.get();t.on("beginContact",e),t.on("updateContact",e),t.on("endContact",e),t.on("ccdContact",e),t.listenToContactCallbacks()}stepSimulation(e,t=3,i=1/60){this._rawDynamicsWorld.stepSimulation(e,t,i)}setGravity(e,t,i){const n=et.get(),r=new n.btVector3(e,t,i);this._rawDynamicsWorld.setGravity(r),n.destroy(r)}setDebugWireframeCallback(e){const t=et.get().addFunction(e,"vfffffffff");this._rawDynamicsWorld.setDebugWireframeCallback(t)}setDebugWireframeFeaturesFlag(e){this._rawDynamicsWorld.setDebugWireframeFeaturesFlag(e)}debugDrawWorld(){this._rawDynamicsWorld.debugDrawWorld()}},WasmModuleHolder:et,convexSweep:ot,rayCast:ht}),pt="\n#version 300 es\n\nprecision highp float;\n\nin vec2 a_vertexPosition;\nin vec3 a_plotPosition;\n\nout vec3 v_position;\n\nvoid main(void)\n{\n  gl_Position = vec4(a_vertexPosition, 1.0, 1.0);\n\n  v_position = a_plotPosition;\n}\n".trim(),gt="\n#version 300 es\n\nprecision highp float;\n\n//\n//\n//\n\n\n// Indices of refractionFactor\nconst float Air = 1.0;\nconst float Glass = 1.51714;\n\n// Air to glass ratio of the indices of refractionFactor (Eta)\nconst float Eta = Air / Glass;\n\n// see http://en.wikipedia.org/wiki/Refractive_index Reflectivity\nconst float R0 = ((Air - Glass) * (Air - Glass)) / ((Air + Glass) * (Air + Glass));\n\n//\n//\n//\n\nuniform vec3        u_cameraEye;\n\n//\n\nuniform sampler2D   u_sceneTextureData;\nuniform int         u_sceneTextureSize;\n\nuniform int       u_spheresStart;\nuniform int       u_spheresStop;\n\nuniform int       u_boxesStart;\nuniform int       u_boxesStop;\n\nuniform int       u_trianglesStart;\nuniform int       u_trianglesStop;\n\n//\n\nuniform sampler2D   u_lightsTextureData;\n\nuniform int       u_sunLightsStart;\nuniform int       u_sunLightsStop;\n\nuniform int       u_spotLightsStart;\nuniform int       u_spotLightsStop;\n\n//\n//\n//\n\nin vec3  v_position;\n\nout vec4 o_color;\n\n//\n\nconst float     g_ambiantLight = 0.15;\n\nconst vec3      g_backgroundColor = vec3(0.1);\n\n//\n\nstruct RayValues\n{\n  vec3 origin;\n  vec3 direction;\n};\n\nstruct RayResult\n{\n  bool hasHit;\n  float distance;\n  vec3 position;\n  vec3 normal;\n  vec4 color;\n  float reflectionFactor;\n  float refractionFactor;\n  bool lightEnabled;\n};\n\n\nstruct StackData\n{\n  // int parentIndex;\n  bool used;\n  RayValues ray;\n  RayResult result;\n  int reflectionIndex;\n  int refractionIndex;\n};\n\n//\n//\n//\n//\n//\n\nfloat getSceneDataByIndex(int index)\n{\n  return texelFetch(u_sceneTextureData, ivec2(index, 0), 0).x;\n}\n\nvec3 getSceneVec3ByIndex(int index)\n{\n  return vec3(\n    texelFetch(u_sceneTextureData, ivec2(index + 0, 0), 0).x,\n    texelFetch(u_sceneTextureData, ivec2(index + 1, 0), 0).x,\n    texelFetch(u_sceneTextureData, ivec2(index + 2, 0), 0).x\n  );\n}\n\nfloat getLightsDataByIndex(int index)\n{\n  return texelFetch(u_lightsTextureData, ivec2(index, 0), 0).x;\n}\n\nvec3 getLightsVec3ByIndex(int index)\n{\n  return vec3(\n    texelFetch(u_lightsTextureData, ivec2(index + 0, 0), 0).x,\n    texelFetch(u_lightsTextureData, ivec2(index + 1, 0), 0).x,\n    texelFetch(u_lightsTextureData, ivec2(index + 2, 0), 0).x\n  );\n}\n\nvec3 apply_quat_to_vec3(vec3 position, vec4 q)\n{\n  vec3 v = position.xyz;\n  return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\nmat3 quat_to_mat3(vec4 q)\n{\n\n  // multiply by sqrt(2) to get rid of all the 2.0 factors in the matrix\n  q *= 1.414214;\n\n  float xx = q.x * q.x;\n  float xy = q.x * q.y;\n  float xz = q.x * q.z;\n  float xw = q.x * q.w;\n\n  float yy = q.y * q.y;\n  float yz = q.y * q.z;\n  float yw = q.y * q.w;\n\n  float zz = q.z * q.z;\n  float zw = q.z * q.w;\n\n  return mat3(\n    1.0 - yy - zz,\n    xy + zw,\n    xz - yw,\n\n    xy - zw,\n    1.0 - xx - zz,\n    yz + xw,\n\n    xz + yw,\n    yz - xw,\n    1.0 - xx - yy\n  );\n}\n//\n//\n//\n//\n//\n\nbool intersectSphere(RayValues ray, float radius, out float outDistance, out vec3 normal)\n{\n  float nearValue = 0.001; // TODO: hardcoded\n  float farValue = 100.0; // TODO: hardcoded\n\n  float b = dot(ray.origin, ray.direction);\n  float c = dot(ray.origin, ray.origin) - radius * radius;\n  float h = b * b - c;\n  if (h < 0.0) {\n    return false;\n  }\n\n  h = sqrt(h);\n\n  float d1 = -b - h;\n  if (d1 >= nearValue && d1 <= farValue)\n  {\n    normal = normalize(ray.origin + ray.direction * d1);\n    outDistance = d1;\n    return true;\n  }\n\n  float d2 = -b + h;\n  if (d2 >= nearValue && d2 <= farValue)\n  {\n    normal = normalize(ray.origin + ray.direction * d2);\n    outDistance = d2;\n    return true;\n  }\n\n  return false;\n}\n\nbool intersectBox(RayValues ray, vec3 boxSize, out float outDistance, out vec3 normal)\n{\n  float nearValue = 0.001; // TODO: hardcoded\n  float farValue = 100.0; // TODO: hardcoded\n\n  //\n  //\n  // sad hack: fix a shadow related bug\n\n  // if (ray.origin.x == 0.0) ray.origin.x = -1e-8;\n  // if (ray.origin.y == 0.0) ray.origin.y = -1e-8;\n  // if (ray.origin.z == 0.0) ray.origin.z = -1e-8;\n\n  if (ray.direction.x == 0.0) ray.direction.x = -1e-8;\n  if (ray.direction.y == 0.0) ray.direction.y = -1e-8;\n  if (ray.direction.z == 0.0) ray.direction.z = -1e-8;\n\n  // sad hack: fix a shadow related bug\n  //\n  //\n\n  vec3 m = sign(ray.direction) / max(abs(ray.direction), 1e-8);\n  vec3 n = m * ray.origin;\n  vec3 k = abs(m) * boxSize;\n\n  vec3 t1 = -n - k;\n  vec3 t2 = -n + k;\n\n  float tN = max(max(t1.x, t1.y), t1.z);\n  float tF = min(min(t2.x, t2.y), t2.z);\n\n  if (tN > tF || tF <= 0.0) {\n    return false;\n  }\n\n  if (tN >= nearValue && tN <= farValue)\n  {\n    normal = normalize(-sign(ray.direction) * step(t1.yzx, t1.xyz) * step(t1.zxy, t1.xyz));\n    outDistance = tN;\n    return true;\n  }\n\n  if (tF >= nearValue && tF <= farValue)\n  {\n    normal = normalize(-sign(ray.direction) * step(t1.yzx, t1.xyz) * step(t1.zxy, t1.xyz));\n    outDistance = tF;\n    return true;\n  }\n\n  return false;\n}\n\nbool intersectTriangle(RayValues ray, vec3 v0, vec3 v1, vec3 v2, out float outDistance, out vec3 normal)\n{\n  float nearValue = 0.001; // TODO: hardcoded\n  float farValue = 100.0; // TODO: hardcoded\n\n  vec3 v1v0 = v1 - v0;\n  vec3 v2v0 = v2 - v0;\n  vec3 rov0 = ray.origin - v0;\n\n  vec3 n = cross(v1v0, v2v0);\n  vec3 q = cross(rov0, ray.direction);\n  float d = 1.0 / dot(ray.direction, n);\n  float u = d * dot(-q, v2v0);\n  float v = d * dot(q, v1v0);\n  float t = d * dot(-n, rov0);\n\n  if (u < 0.0 || v < 0.0 || (u + v) > 1.0 || t < nearValue || t > farValue) {\n    return false;\n  }\n\n  normal = normalize(-n);\n  outDistance = t;\n  return true;\n}\n\n// float intersectPlane(RayValues ray, vec3 normal, float offset)\n// {\n//     return -(dot(ray.origin, normal) + offset) / dot(ray.direction, normal);\n// }\n\n// float intersectPlane2(RayValues ray, vec3 normal, float offset)\n// {\n//     float nearValue = 0.001; // TODO: hardcoded\n//     float farValue = 1000.0; // TODO: hardcoded\n\n//     float a = dot(ray.direction, normal);\n//     float d = -(dot(ray.origin, normal) + offset) / a;\n\n//     if (a > 0.0 || d < nearValue || d > farValue)\n//         return -1.0;\n\n//     return d;\n// }\n\n// float diskIntersect(RayValues ray, vec3 center, vec3 normal, float radius)\n// {\n//     vec3  o = ray.origin - center;\n//     float t = -dot(normal, o) / dot(ray.direction, normal);\n//     vec3  q = o + ray.direction * t;\n//     return (dot(q, q) < radius * radius) ? t : -1.0;\n// }\n\n//\n//\n//\n//\n//\n\nbool intersectScene(RayValues ray, out RayResult outBestResult, bool shadowMode)\n{\n  float bestDistance = -1.0;\n\n  outBestResult.hasHit = false;\n  outBestResult.distance = -1.0;\n\n  if (u_sceneTextureSize <= 0) {\n    return false;\n  }\n\n  RayValues tmpRay;\n  vec3 normal;\n\n  for (int index = u_spheresStart; index < u_spheresStop; index += 16)\n  {\n    bool castShadow = (getSceneDataByIndex(index + 13) != 0.0);\n\n    if (shadowMode && !castShadow) {\n      continue; // this sphere does not cast a shadow\n    }\n\n    float refractionFactor = getSceneDataByIndex(index + 12);\n    if (refractionFactor > 0.0)\n    {\n\n      // refraction logic\n\n      vec3 center = getSceneVec3ByIndex(index + 0);\n\n      float radius = getSceneDataByIndex(index + 7);\n\n      tmpRay.origin = ray.origin - center;\n      tmpRay.direction = ray.direction;\n\n      float currDistance1 = 0.0;\n      if (\n        !intersectSphere(tmpRay, radius, currDistance1, normal) ||\n        (outBestResult.distance > 0.0 && currDistance1 > outBestResult.distance)\n      ) {\n        continue;\n      }\n\n      // now collide with the inside of the sphere\n\n      vec3 newOrigin = ray.origin + (currDistance1 * 1.01) * ray.direction;\n\n      tmpRay.origin = (newOrigin - center);\n      tmpRay.direction = ray.direction;\n\n      tmpRay.direction = refract(tmpRay.direction, -normal, Eta);\n\n      float currDistance2 = 0.0;\n      if (\n        !intersectSphere(tmpRay, radius, currDistance2, normal) ||\n        (outBestResult.distance > 0.0 && currDistance2 > outBestResult.distance)\n      ) {\n        continue;\n      }\n\n      float reflectionFactor = getSceneDataByIndex(index + 11);\n\n      outBestResult.hasHit = true;\n      outBestResult.distance = currDistance1 + currDistance2;\n      outBestResult.position = newOrigin + (currDistance2 * 1.01) * ray.direction;\n      outBestResult.normal = normal;\n      outBestResult.reflectionFactor = reflectionFactor;\n      outBestResult.refractionFactor = refractionFactor;\n\n      bool lightEnabled = (getSceneDataByIndex(index + 14) != 0.0);\n      outBestResult.lightEnabled = lightEnabled;\n\n      vec3 color = getSceneVec3ByIndex(index + 8);\n\n      outBestResult.color = vec4(color, 0.5);\n\n      continue; // bypass non refractive logic\n    }\n\n\n    vec3 center = getSceneVec3ByIndex(index + 0);\n    vec4 orientation = vec4(\n      getSceneDataByIndex(index + 3),\n      getSceneDataByIndex(index + 4),\n      getSceneDataByIndex(index + 5),\n      getSceneDataByIndex(index + 6)\n    );\n    mat3 normalMatrix = quat_to_mat3(orientation);\n    mat3 inverseNormalMatrix = inverse(normalMatrix);\n\n    float radius = getSceneDataByIndex(index + 7);\n\n    // convert ray from world space to box space\n    tmpRay.origin = (inverseNormalMatrix * (ray.origin - center));\n    tmpRay.direction = (inverseNormalMatrix * ray.direction);\n\n    float currDistance = 0.0;\n    if (\n      !intersectSphere(tmpRay, radius, currDistance, normal) ||\n      (outBestResult.distance > 0.0 && currDistance > outBestResult.distance)\n    ) {\n      continue;\n    }\n\n    // convert normal from box space to world space\n    normal = normalMatrix * normal;\n\n    outBestResult.hasHit = true;\n    outBestResult.distance = currDistance;\n    outBestResult.position = ray.origin + currDistance * ray.direction;\n    outBestResult.normal = normal;\n    outBestResult.refractionFactor = 0.0;\n\n    bool chessboardMaterialEnabled = (getSceneDataByIndex(index + 15) != 0.0);\n\n    if (chessboardMaterialEnabled)\n    {\n      vec3 localPos = ray.origin + currDistance * ray.direction;\n      vec3 txPos = inverseNormalMatrix * (localPos - center);\n\n      // chessboard color effect\n      if (fract(txPos.x * 0.9) > 0.5 == fract(txPos.y * 0.9) > 0.5 == fract(txPos.z * 0.9) > 0.5)\n      {\n\n        if (shadowMode)\n        {\n          outBestResult.hasHit = false; // no shadow -> allow light to go through\n        }\n        else\n        {\n          outBestResult.color = vec4(1.0);\n          outBestResult.reflectionFactor = 0.0; // override reflection -> plain color\n          outBestResult.refractionFactor = 0.0;\n        }\n\n        continue;\n      }\n      else\n      {\n        outBestResult.hasHit = true;\n        outBestResult.distance = currDistance;\n        outBestResult.position = ray.origin + currDistance * ray.direction;\n        outBestResult.normal = normal;\n        // outBestResult.refractionFactor = 0.0;\n\n\n        // blue/green, mat\n        outBestResult.color = vec4(0.0, 0.4, 0.45, 1.0);\n        outBestResult.reflectionFactor = 0.0;\n        outBestResult.refractionFactor = 0.0;\n      }\n    }\n    else\n    {\n\n      outBestResult.hasHit = true;\n      outBestResult.distance = currDistance;\n      outBestResult.position = ray.origin + currDistance * ray.direction;\n      outBestResult.normal = normal;\n      // outBestResult.refractionFactor = 0.0;\n\n      vec3 color = getSceneVec3ByIndex(index + 8);\n\n      float reflectionFactor = getSceneDataByIndex(index + 11);\n\n      outBestResult.color = vec4(color, 0.5);\n      outBestResult.reflectionFactor = reflectionFactor;\n      outBestResult.refractionFactor = refractionFactor;\n    }\n\n    bool lightEnabled = (getSceneDataByIndex(index + 14) != 0.0);\n    outBestResult.lightEnabled = lightEnabled;\n  }\n\n  for (int index = u_boxesStart; index < u_boxesStop; index += 18)\n  {\n    bool castShadow = (getSceneDataByIndex(index + 15) != 0.0);\n\n    if (shadowMode && !castShadow) {\n      continue;\n    }\n\n    tmpRay.origin = ray.origin;\n    tmpRay.direction = ray.direction;\n\n    vec3 center = getSceneVec3ByIndex(index + 0);\n    vec4 orientation = vec4(\n      getSceneDataByIndex(index + 3),\n      getSceneDataByIndex(index + 4),\n      getSceneDataByIndex(index + 5),\n      getSceneDataByIndex(index + 6)\n    );\n\n    vec3 boxSize = getSceneVec3ByIndex(index + 7);\n\n    float refractionFactor = getSceneDataByIndex(index + 14);\n    if (refractionFactor > 0.0)\n    {\n\n      // refraction logic\n\n      // convert ray from world space to sphere space\n      mat3 normalMatrix = quat_to_mat3(orientation);\n      mat3 inverseNormalMatrix = inverse(normalMatrix);\n\n      tmpRay.origin = (inverseNormalMatrix * (ray.origin - center));\n      tmpRay.direction = (inverseNormalMatrix * ray.direction);\n\n      float currDistance1 = 0.0;\n      if (\n        !intersectBox(tmpRay, boxSize, currDistance1, normal) ||\n        (outBestResult.distance > 0.0 && currDistance1 > outBestResult.distance)\n      ) {\n        continue;\n      }\n\n      // now collide with the inside of the box\n\n      vec3 newOrigin = ray.origin + (currDistance1 * 1.000) * ray.direction;\n\n      tmpRay.origin = inverseNormalMatrix * (newOrigin - center);\n      tmpRay.direction = refract(tmpRay.direction, normal, Eta);\n\n      float currDistance2 = 0.0;\n      if (\n        !intersectBox(tmpRay, boxSize, currDistance2, normal) ||\n        (outBestResult.distance > 0.0 && currDistance2 > outBestResult.distance)\n      ) {\n        continue;\n      }\n\n      // convert normal from box space to world space\n      normal = normalMatrix * normal;\n\n      float reflectionFactor = getSceneDataByIndex(index + 13);\n\n      outBestResult.hasHit = true;\n      outBestResult.distance = currDistance1 + currDistance2;\n      outBestResult.position = newOrigin + (currDistance2 * 1.000) * ray.direction;\n      outBestResult.normal = normal;\n      outBestResult.reflectionFactor = reflectionFactor;\n      outBestResult.refractionFactor = refractionFactor;\n\n      bool lightEnabled = (getSceneDataByIndex(index + 16) != 0.0);\n      outBestResult.lightEnabled = lightEnabled;\n\n      vec3 color = getSceneVec3ByIndex(index + 10);\n\n      outBestResult.color = vec4(color, 0.5);\n\n      continue; // bypass non refractive logic\n    }\n\n    // convert ray from world space to sphere space\n    mat3 normalMatrix = quat_to_mat3(orientation);\n    mat3 inverseNormalMatrix = inverse(normalMatrix);\n    tmpRay.origin = (inverseNormalMatrix * (ray.origin - center));\n    tmpRay.direction = (inverseNormalMatrix * tmpRay.direction);\n\n    float currDistance = 0.0;\n    if (\n      !intersectBox(tmpRay, boxSize, currDistance, normal) ||\n      (outBestResult.distance > 0.0 && currDistance > outBestResult.distance)\n    ) {\n      continue;\n    }\n\n    // convert normal from box space to world space\n    normal = normalMatrix * normal;\n\n    outBestResult.hasHit = true;\n    outBestResult.distance = currDistance;\n    outBestResult.position = ray.origin + currDistance * ray.direction;\n    outBestResult.normal = normal;\n\n    bool chessboardMaterialEnabled = (getSceneDataByIndex(index + 17) != 0.0);\n\n    if (chessboardMaterialEnabled)\n    {\n      outBestResult.reflectionFactor = 0.5;\n      outBestResult.refractionFactor = 0.0; // TODO\n\n      // the multiplication by 0.999 will remove graphic artifact\n      vec3 txPos = (inverseNormalMatrix * 0.999) * (center - outBestResult.position);\n\n      // chessboard color effect\n      // if (fract(txPos.x * 0.2) > 0.5 == fract(txPos.z * 0.2) > 0.5 == fract(txPos.y * 0.2) > 0.5)\n      if (fract(txPos.x * 0.9) > 0.5 == fract(txPos.y * 0.9) > 0.5 == fract(txPos.z * 0.9) > 0.5)\n      {\n        outBestResult.color = vec4(1.0);\n      }\n      else\n      {\n        outBestResult.color = vec4(0.0, 0.4, 0.45, 1.0);\n      }\n    }\n    else\n    {\n      vec3 color = getSceneVec3ByIndex(index + 10);\n\n      float reflectionFactor = getSceneDataByIndex(index + 13);\n\n      outBestResult.color = vec4(color, 1.0);\n      outBestResult.reflectionFactor = reflectionFactor;\n      outBestResult.refractionFactor = refractionFactor;\n    }\n\n    bool lightEnabled = (getSceneDataByIndex(index + 16) != 0.0);\n    outBestResult.lightEnabled = lightEnabled;\n  }\n\n  for (int index = u_trianglesStart; index < u_trianglesStop; index += 15)\n  {\n    bool castShadow = (getSceneDataByIndex(index + 13) != 0.0);\n\n    if (shadowMode && !castShadow) {\n      continue;\n    }\n\n    tmpRay.origin = ray.origin;\n    tmpRay.direction = ray.direction;\n\n    vec3 v0 = getSceneVec3ByIndex(index + 0);\n    vec3 v1 = getSceneVec3ByIndex(index + 3);\n    vec3 v2 = getSceneVec3ByIndex(index + 6);\n\n    float currDistance = 0.0;\n    if (\n      !intersectTriangle(tmpRay, v0, v1, v2, currDistance, normal) ||\n      (outBestResult.distance > 0.0 && currDistance > outBestResult.distance)\n    ) {\n      continue;\n    }\n\n    outBestResult.hasHit = true;\n    outBestResult.distance = currDistance;\n    outBestResult.position = ray.origin + currDistance * ray.direction;\n    outBestResult.normal = normal;\n\n    outBestResult.refractionFactor = 0.0; // TODO\n\n    vec3 color = getSceneVec3ByIndex(index + 9);\n\n    float reflectionFactor = getSceneDataByIndex(index + 12);\n\n    outBestResult.color = vec4(color, 1.0);\n    outBestResult.reflectionFactor = reflectionFactor;\n\n    bool lightEnabled = (getSceneDataByIndex(index + 14) != 0.0);\n    outBestResult.lightEnabled = lightEnabled;\n\n    // if (shadowMode)\n    //     return true;\n  }\n\n  { // plane test\n\n    // vec3 planeNormal = normalize(vec3(0.0, 0.0, 1.0));\n    // float val = intersectPlane(tmpRay, planeNormal, 35.0/4.0*3.0);\n\n    // vec3 planeNormal = normalize(vec3(0.0, 0.0, 1.0));\n    // float val = intersectPlane(tmpRay, planeNormal, 0.0);\n\n    // vec3 planeNormal = normalize(vec3(0.0, 0.0, 1.0));\n    // float val = intersectPlane(tmpRay, planeNormal, 10.0);\n\n    // if (val > 0.0 && (bestDistance <= 0.0 || val < bestDistance))\n    // {\n    //     outBestResult.hasHit = true;\n    //     outBestResult.distance = val;\n    //     outBestResult.position = ray.origin + val * ray.direction;\n    //     outBestResult.normal = vec3(planeNormal);\n    //     outBestResult.color = vec4(1.0, 1.0, 1.0, 1.0);\n    //     outBestResult.reflectionFactor = 0.0;\n    //     outBestResult.lightEnabled = true;\n    // }\n\n  } // plane test\n\n  return outBestResult.hasHit;\n}\n\nfloat lightAt(vec3 impactPosition, vec3 impactNormal, vec3 viewer)\n{\n  float bestIntensity = 0.0;\n\n  for (int index = u_sunLightsStart; index < u_sunLightsStop; index += 4)\n  {\n    vec3 lightDir = getLightsVec3ByIndex(index + 0);\n    float localIntensity = getLightsDataByIndex(index + 3);\n\n    float coef = localIntensity;\n    lightDir = normalize(lightDir);\n\n    // is the sun light blocked by an object?\n    RayResult result;\n    if (intersectScene(RayValues(impactPosition, lightDir), result, true)) {\n      // light ray is blocked, skip this light\n      continue;\n    }\n\n    //\n    //\n    //\n\n    float intensity = 0.0;\n    vec3 reflectionFactor = reflect(-lightDir, impactNormal);\n    intensity += 0.6 * pow(max(dot(reflectionFactor, viewer), 0.0), 30.0);\n    intensity += 1.0 * dot(lightDir, impactNormal);\n\n    intensity *= coef;\n\n    if (bestIntensity < intensity) {\n      bestIntensity = intensity;\n    }\n  }\n\n  for (int index = u_spotLightsStart; index < u_spotLightsStop; index += 5)\n  {\n    vec3 lightDir = vec3(1.0);\n    float coef = 1.0;\n\n    // spot light\n\n    vec3 lightPos = getLightsVec3ByIndex(index + 0);\n    float lightRadius = getLightsDataByIndex(index + 3);\n\n    vec3 lightToImpactVec3 = lightPos - impactPosition;\n\n    // is it out of the spot light effect radius?\n    float lightToImpactDistance = length(lightToImpactVec3);\n    if (lightToImpactDistance > lightRadius) {\n      // out of range, do not apply this light\n      continue;\n    }\n\n    lightDir.x = lightToImpactVec3.x / lightToImpactDistance; // normalize\n    lightDir.y = lightToImpactVec3.y / lightToImpactDistance; // normalize\n    lightDir.z = lightToImpactVec3.z / lightToImpactDistance; // normalize\n\n    float localIntensity = getLightsDataByIndex(index + 4);\n\n    coef = localIntensity * (1.0 - lightToImpactDistance / lightRadius);\n\n    RayResult result;\n    if (\n      // is the spot light blocked by an object?\n      intersectScene(RayValues(impactPosition, lightDir), result, true) &&\n      // is the blocking object in range of the spot light effect radius?\n      result.distance < lightToImpactDistance\n    ) {\n      // light ray is blocked, skip this light\n      continue;\n    }\n\n    //\n    //\n    //\n\n    float intensity = 0.0;\n    vec3 reflectionFactor = reflect(-lightDir, impactNormal);\n    intensity += 0.6 * pow(max(dot(reflectionFactor, viewer), 0.0), 30.0);\n    intensity += 1.0 * dot(lightDir, impactNormal);\n\n    intensity *= coef;\n\n    if (bestIntensity < intensity) {\n      bestIntensity = intensity;\n    }\n  }\n\n  return max(g_ambiantLight, bestIntensity);\n}\n\nvoid main()\n{\n  //\n  //\n  // initial ray\n\n  vec3 rayDir = normalize(v_position - u_cameraEye); // camera direction\n  vec3 finalPixelColor = g_backgroundColor;\n\n  const int maxStack = 4;\n  StackData _stack[maxStack];\n\n  // initialize stack\n  for (int ii = 0; ii < maxStack; ++ii)\n  {\n    _stack[ii].used = false;\n    _stack[ii].result.reflectionFactor = 0.0;\n    _stack[ii].result.refractionFactor = 0.0;\n    _stack[ii].result.lightEnabled = false;\n    _stack[ii].reflectionIndex = -1;\n    _stack[ii].refractionIndex = -1;\n  }\n\n  // initialize first stack element\n  _stack[0].used = true;\n  _stack[0].ray = RayValues(u_cameraEye, rayDir);\n  _stack[0].result.position = u_cameraEye;\n  _stack[0].result.reflectionFactor = 1.0;\n  _stack[0].result.refractionFactor = 1.0;\n  _stack[0].result.lightEnabled = true;\n  _stack[0].reflectionIndex = -1;\n  _stack[0].refractionIndex = -1;\n\n  int stackIndex = 0;\n\n  for (int ii = 0; ii < maxStack; ++ii)\n  {\n    // intersect object\n    // if reflection/refraction push to stack & set index\n    // repeat\n\n    if (!_stack[ii].used) {\n      break;\n    }\n\n    _stack[ii].result.hasHit = intersectScene(\n      _stack[ii].ray,\n      _stack[ii].result,\n      false\n    );\n\n    if (!_stack[ii].result.hasHit)\n    {\n      continue;\n    }\n\n    float lightIntensity = 1.0;\n\n    if (_stack[ii].result.lightEnabled)\n    {\n      lightIntensity = lightAt(\n        _stack[ii].result.position,\n        _stack[ii].result.normal,\n        -_stack[ii].ray.direction\n      );\n    }\n\n    _stack[ii].result.color.xyz *= lightIntensity;\n\n    if (_stack[ii].result.lightEnabled && lightIntensity <= 0.0)\n    {\n      // not lit\n      continue;\n    }\n\n    // reflection/refraction here\n\n    if (stackIndex + 1 >= maxStack)\n    {\n      // no more stack space left\n      continue;\n    }\n\n    if (_stack[ii].result.refractionFactor > 0.0)\n    {\n      // push refraction to the stack\n      stackIndex += 1;\n\n      _stack[stackIndex].used = true;\n      _stack[stackIndex].ray.origin = _stack[ii].result.position;\n      _stack[stackIndex].ray.direction = refract(_stack[ii].ray.direction, _stack[ii].result.normal, Eta);\n\n      _stack[ii].refractionIndex = stackIndex;\n    }\n\n    if (_stack[ii].result.reflectionFactor > 0.0)\n    {\n      // push reflection to the stack\n      stackIndex += 1;\n\n      _stack[stackIndex].used = true;\n      _stack[stackIndex].ray.origin = _stack[ii].result.position;\n      _stack[stackIndex].ray.direction = reflect(_stack[ii].ray.direction, _stack[ii].result.normal);\n\n      _stack[ii].reflectionIndex = stackIndex;\n    }\n\n  }\n\n  // combine all colors, from last to first\n  for (int ii = maxStack - 1; ii >= 0; --ii)\n  {\n\n\n    if (!_stack[ii].used || !_stack[ii].result.hasHit) {\n      _stack[ii].result.color.xyz = g_backgroundColor;\n      continue;\n    }\n\n    if (_stack[ii].reflectionIndex != -1)\n    {\n      _stack[ii].result.color.xyz =\n        _stack[ii].result.color.xyz * (1.0 - _stack[ii].result.reflectionFactor) +\n        _stack[_stack[ii].reflectionIndex].result.color.xyz * _stack[ii].result.reflectionFactor;\n    }\n\n    if (_stack[ii].refractionIndex != -1)\n    {\n      _stack[ii].result.color.xyz =\n        _stack[ii].result.color.xyz * (1.0 - _stack[ii].result.refractionFactor) +\n        _stack[_stack[ii].refractionIndex].result.color.xyz * _stack[ii].result.refractionFactor;\n    }\n  }\n\n  if (_stack[0].result.hasHit) {\n    finalPixelColor = _stack[0].result.color.xyz;\n  }\n\n  o_color = vec4(finalPixelColor, 1.0);\n\n}\n".trim(),mt="\n#version 300 es\n\nprecision highp float;\n\nin vec2 a_vertexPosition;\nin vec2 a_vertexTextureCoord;\n\nout vec2 v_textureCoord;\n\nvoid main(void)\n{\n  v_textureCoord = a_vertexTextureCoord;\n\n  gl_Position = vec4(a_vertexPosition, 1.0, 1.0);\n}\n".trim(),xt="\n#version 300 es\n\nprecision highp float;\n\nuniform sampler2D u_texture;\nuniform vec2 u_step;\n\nin vec2 v_textureCoord;\n\nout vec4 o_color;\n\nvoid main(void)\n{\n  // gl_FragColor = texture(u_texture, v_textureCoord);\n\n  float total = 0.0;\n  vec4 accumulated = vec4(0.0);\n\n  //\n\n  if (v_textureCoord.x - u_step.x > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x - u_step.x, v_textureCoord.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.x + u_step.x > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x + u_step.x, v_textureCoord.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.y - u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x, v_textureCoord.y - u_step.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.y + u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x, v_textureCoord.y + u_step.y));\n    total += 1.0;\n  }\n\n  //\n\n  if (v_textureCoord.x - u_step.x > 0.0 && v_textureCoord.y - u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x - u_step.x, v_textureCoord.y - u_step.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.x + u_step.x > 0.0 && v_textureCoord.y - u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x + u_step.x, v_textureCoord.y - u_step.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.x - u_step.x > 0.0 && v_textureCoord.y + u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x - u_step.x, v_textureCoord.y + u_step.y));\n    total += 1.0;\n  }\n\n  if (v_textureCoord.x + u_step.x > 0.0 && v_textureCoord.y + u_step.y > 0.0)\n  {\n    accumulated += texture(u_texture, vec2(v_textureCoord.x + u_step.x, v_textureCoord.y + u_step.y));\n    total += 1.0;\n  }\n\n  //\n\n  if (total > 0.0)\n    o_color = accumulated / total;\n  else\n    o_color = vec4(1.0, 0.0, 0.0, 1.0); // warning\n}\n".trim();const{WebGLContext:vt,DataTexture:bt,Texture:yt,FrameBuffer:wt,ShaderProgram:Et,GeometryWrapper:Rt}=Ee;class St{constructor(e){this._resolutionCoef=1,this._antiAliasing=!1,this._spheres=[],this._boxes=[],this._triangles=[],this._sunLights=[],this._spotLights=[],this._cameraFovy=e.fovy,this._renderWidth=this._canvasWidth=e.canvasWidth,this._renderHeight=this._canvasHeight=e.canvasHeight,this._rayTracerShaderProgram=new Et("RayTracerRenderer-1",{vertexSrc:pt,fragmentSrc:gt,attributes:["a_vertexPosition","a_plotPosition"],uniforms:["u_cameraEye","u_sceneTextureData","u_sceneTextureSize","u_spheresStart","u_spheresStop","u_boxesStart","u_boxesStop","u_trianglesStart","u_trianglesStop","u_lightsTextureData","u_sunLightsStart","u_sunLightsStop","u_spotLightsStart","u_spotLightsStop"]}),this._textureShaderProgram=new Et("RayTracerRenderer-1",{vertexSrc:mt,fragmentSrc:xt,attributes:["a_vertexPosition","a_vertexTextureCoord"],uniforms:["u_texture","u_step"]}),this._finalTexture=new yt,this._frameBuffer=new wt,this._finalTexture.initialize(),this._finalTexture.preBind((e=>{e.allocate(this._renderWidth,this._renderHeight),this._frameBuffer.bind((t=>{t.attachTexture(e)}))}));const t=new Rt.GeometryBuilder;t.reset().setPrimitiveType("triangleStrip").addVbo().addVboAttribute("a_vertexPosition","vec2f").addVbo().setVboAsDynamic().addVboAttribute("a_plotPosition","vec3f"),this._rayTracerGeometry=new Rt.Geometry(this._rayTracerShaderProgram,t.getDef());const i=[];i.push(1,1),i.push(-1,1),i.push(1,-1),i.push(-1,-1),this._rayTracerGeometry.allocateBuffer(0,i,i.length),this._rayTracerGeometry.setPrimitiveStart(0),this._rayTracerGeometry.setPrimitiveCount(4),t.reset().setPrimitiveType("triangleStrip").addVbo().addVboAttribute("a_vertexPosition","vec2f").addVboAttribute("a_vertexTextureCoord","vec2f"),this._screenGeometry=new Rt.Geometry(this._textureShaderProgram,t.getDef());const n=[];n.push(1,1,1,1),n.push(-1,1,0,1),n.push(1,-1,1,0),n.push(-1,-1,0,0),this._screenGeometry.allocateBuffer(0,n,n.length),this._screenGeometry.setPrimitiveStart(0),this._screenGeometry.setPrimitiveCount(4),this._sceneDataTexture=new bt,this._sceneDataTexture.initialize(2048),this._lightsDataTexture=new bt,this._lightsDataTexture.initialize(2048),this._camera={position:A(0,0,0),target:A(1.5,1.5,1.5),up:A(0,1,0)}}pushSphere({position:e,orientation:t,radius:i,color:n,reflectionFactor:r,refractionFactor:s,chessboardEnabled:o,castShadowEnabled:a,receiveLightEnabled:c}){if(i<=0)throw new Error("invalid sphere radius");if(r<0||r>1)throw new Error("invalid sphere reflection");if(s<0||s>1)throw new Error("invalid sphere refractionFactor");this._spheres.push({position:[e[0],e[1],e[2]],orientation:[t[0],t[1],t[2],t[3]],radius:i,color:[n[0],n[1],n[2]],reflectionFactor:r,refractionFactor:s,chessboardEnabled:o,castShadowEnabled:a,receiveLightEnabled:c})}pushBox({position:e,orientation:t,boxSize:i,color:n,reflectionFactor:r,refractionFactor:s,chessboardEnabled:o,castShadowEnabled:a,receiveLightEnabled:c}){if(i[0]<=0||i[1]<=0||i[2]<=0)throw new Error("invalid box size");if(r<0||r>1)throw new Error("invalid box reflection");this._boxes.push({position:[e[0],e[1],e[2]],orientation:[t[0],t[1],t[2],t[3]],boxSize:C(i),color:C(n),reflectionFactor:r,refractionFactor:s,chessboardEnabled:o,castShadowEnabled:a,receiveLightEnabled:c})}pushTriangle({v0:e,v1:t,v2:i,color:n,reflectionFactor:r,castShadowEnabled:s,receiveLightEnabled:o}){if(r<0||r>1)throw new Error("invalid triangle reflection");this._triangles.push({v0:C(e),v1:C(t),v2:C(i),color:C(n),reflectionFactor:r,castShadowEnabled:s,receiveLightEnabled:o})}pushSunLight({direction:e,intensity:t}){if(t<=0)throw new Error("intensity cannot be 0");if(0===(n=(i=e)[0],r=i[1],s=i[2],Math.hypot(n,r,s)))throw new Error("direction cannot be 0");var i,n,r,s;const o=k(C(e),e);this._sunLights.push({direction:o,intensity:t})}pushSpotLight({position:e,intensity:t,radius:i}){if(t<=0)throw new Error("intensity cannot be 0");if(i<=0)throw new Error("radius cannot be <= 0");this._spotLights.push({position:C(e),intensity:t,radius:i})}lookAt(e,t,i){B(this._camera.position,e);let n=U(D(),t,e);n=k(n,n),n=F(n,e,n),B(this._camera.target,n);const r=k(D(),i);B(this._camera.up,r)}render(){this._renderTexturePass(),this._renderRayTracingPass()}_renderTexturePass(){const e=vt.getContext();e.viewport(0,0,this._canvasWidth,this._canvasHeight),e.clear(e.COLOR_BUFFER_BIT),this._textureShaderProgram.bind((e=>{if(e.setTextureUniform("u_texture",this._finalTexture,0),this._antiAliasing){const t=.005*(1-this._renderWidth/this._canvasWidth),i=.005*(1-this._renderHeight/this._canvasHeight);e.setFloat2Uniform("u_step",t,i)}else e.setFloat2Uniform("u_step",0,0);this._screenGeometry.render()}))}_renderRayTracingPass(){const e=vt.getContext(),t=this._computeCameraFarCorners();this._rayTracerGeometry.allocateBuffer(1,t,t.length);const i=Math.floor(this._renderWidth),n=Math.floor(this._renderHeight);this._frameBuffer.bind((()=>{e.viewport(0,0,i,n),e.clear(e.COLOR_BUFFER_BIT),this._rayTracerShaderProgram.bind((t=>{t.setFloat3Uniform("u_cameraEye",this._camera.position[0],this._camera.position[1],this._camera.position[2]);{const i=[];t.setInteger1Uniform("u_spheresStart",0);for(const e of this._spheres)i.push(e.position[0],e.position[1],e.position[2]),i.push(e.orientation[0],e.orientation[1],e.orientation[2],e.orientation[3]),i.push(e.radius),i.push(e.color[0],e.color[1],e.color[2]),i.push(e.reflectionFactor),i.push(e.refractionFactor),i.push(e.castShadowEnabled?1:0),i.push(e.receiveLightEnabled?1:0),i.push(e.chessboardEnabled?1:0);t.setInteger1Uniform("u_spheresStop",i.length),t.setInteger1Uniform("u_boxesStart",i.length);for(const e of this._boxes)i.push(e.position[0],e.position[1],e.position[2]),i.push(e.orientation[0],e.orientation[1],e.orientation[2],e.orientation[3]),i.push(e.boxSize[0],e.boxSize[1],e.boxSize[2]),i.push(e.color[0],e.color[1],e.color[2]),i.push(e.reflectionFactor),i.push(e.refractionFactor),i.push(e.castShadowEnabled?1:0),i.push(e.receiveLightEnabled?1:0),i.push(e.chessboardEnabled?1:0);t.setInteger1Uniform("u_boxesStop",i.length),t.setInteger1Uniform("u_trianglesStart",i.length);for(const e of this._triangles)i.push(e.v0[0],e.v0[1],e.v0[2]),i.push(e.v1[0],e.v1[1],e.v1[2]),i.push(e.v2[0],e.v2[1],e.v2[2]),i.push(e.color[0],e.color[1],e.color[2]),i.push(e.reflectionFactor),i.push(e.castShadowEnabled?1:0),i.push(e.receiveLightEnabled?1:0);t.setInteger1Uniform("u_trianglesStop",i.length),e.activeTexture(e.TEXTURE0+0),this._sceneDataTexture.preBind((e=>{e.update(0,i)})),t.setInteger1Uniform("u_sceneTextureData",0),t.setInteger1Uniform("u_sceneTextureSize",i.length)}{const i=[];t.setInteger1Uniform("u_sunLightsStart",0);for(const e of this._sunLights)i.push(e.direction[0],e.direction[1],e.direction[2]),i.push(e.intensity);t.setInteger1Uniform("u_sunLightsStop",i.length),t.setInteger1Uniform("u_spotLightsStart",i.length);for(const e of this._spotLights)i.push(e.position[0],e.position[1],e.position[2]),i.push(e.radius),i.push(e.intensity);t.setInteger1Uniform("u_spotLightsStop",i.length),e.activeTexture(e.TEXTURE0+1),this._lightsDataTexture.preBind((e=>{e.update(0,i)})),t.setInteger1Uniform("u_lightsTextureData",1)}this._rayTracerGeometry.render()}))})),e.viewport(0,0,this._canvasWidth,this._canvasHeight)}reset(){this._sunLights.length=0,this._spotLights.length=0,this._spheres.length=0,this._boxes.length=0,this._triangles.length=0}setResolutionCoef(e){e===this._resolutionCoef||e<=0||e>1||(this._resolutionCoef=e,this._renderWidth=Math.floor(this._canvasWidth*this._resolutionCoef),this._renderHeight=Math.floor(this._canvasHeight*this._resolutionCoef),this._finalTexture.preBind((e=>{e.resize(this._renderWidth,this._renderHeight)})))}getResolutionCoef(){return this._resolutionCoef}setAntiAliasing(e){this._antiAliasing=e}getAntiAliasing(){return this._antiAliasing}getCurrentSize(){return[this._renderWidth,this._renderHeight]}_computeCameraFarCorners(){const e=U(D(),this._camera.target,this._camera.position),t=L(D(),e,this._camera.up),i=L(D(),t,e),n=.5*this._cameraFovy*Math.PI/180,r=1*Math.cos(n)/Math.sin(n),s=M(D(),e,A(r,r,r)),o=F(D(),this._camera.position,s),a=this._canvasWidth/this._canvasHeight,c=M(D(),t,A(a,a,a)),d=F(D(),o,i),f=z(D(),o,i),h=z(D(),d,c),l=z(D(),f,c),u=F(D(),d,c),_=F(D(),f,c);return[u[0],u[1],u[2],h[0],h[1],h[2],_[0],_[1],_[2],l[0],l[1],l[2]]}get canvasWidth(){return this._canvasWidth}get canvasHeight(){return this._canvasHeight}get renderWidth(){return this._renderWidth}get renderHeight(){return this._renderHeight}get camera(){return this._camera}get spheres(){return this._spheres}get boxes(){return this._boxes}get triangles(){return this._triangles}get sunLights(){return this._sunLights}get spotLights(){return this._spotLights}}const{WebGLContext:Tt}=Ee,{Camera:Dt}=ie,{TextRenderer:Ct,StackRenderers:At}=$e;class Bt{constructor(e){this._debugSceneCamera=new Dt,this._mainHudCamera=new Dt,this._def=e,this.resize(this._def.canvasDomElement.width,this._def.canvasDomElement.height),Tt.initialize(this._def.canvasDomElement),this._rayTracerRenderer=new St({canvasWidth:this._def.canvasDomElement.width,canvasHeight:this._def.canvasDomElement.height,fovy:70}),this._textRenderer=new Ct,this._stackRenderers=new At,this._multipleBuffering=new ze(this._def.canvasDomElement.width,this._def.canvasDomElement.height)}initialize(){const e=Tt.getContext();e.pixelStorei(e.UNPACK_ALIGNMENT,1),e.disable(e.DEPTH_TEST),e.disable(e.BLEND),e.disable(e.CULL_FACE),e.depthFunc(e.NEVER),e.clearColor(0,0,0,1),e.clearDepth(1)}resize(e,t){this._debugSceneCamera.setViewportSize(e,t),this._debugSceneCamera.setAsPerspective({fovy:70,near:1,far:500}),this._mainHudCamera.setViewportSize(e,t);const i=.5*e,n=.5*t;this._mainHudCamera.setAsOrthogonal({left:-i,right:+i,top:-n,bottom:+n,near:-200,far:200}),this._mainHudCamera.setEye([i,n,1]),this._mainHudCamera.setTarget([i,n,0]),this._mainHudCamera.setUpAxis([0,1,0]),this._mainHudCamera.computeMatrices()}_pushWireFrameSphere(e){const t=.5257311121191336*e.radius,i=.8506508083520399*e.radius,n=[[-t,0,i],[t,0,i],[-t,0,-i],[t,0,-i],[0,i,t],[0,i,-t],[0,-i,t],[0,-i,-t],[i,t,0],[-i,t,0],[i,-t,0],[-i,-t,0]];for(let t=0;t<n.length;++t)n[t][0]+=e.position[0],n[t][1]+=e.position[1],n[t][2]+=e.position[2];const r=[[0,4,1],[0,9,4],[9,5,4],[4,5,8],[4,8,1],[8,10,1],[8,3,10],[5,3,8],[5,2,3],[2,7,3],[7,10,3],[7,6,10],[7,11,6],[11,0,6],[0,1,6],[6,1,10],[9,0,11],[9,11,2],[9,2,5],[7,2,11]];for(const t of r){const i=n[t[0]],r=n[t[1]],s=n[t[2]];this._stackRenderers.pushLine(i,r,e.color),this._stackRenderers.pushLine(r,s,e.color),this._stackRenderers.pushLine(s,i,e.color)}}_pushWireFrameBox(e){const t=[A(-e.boxSize[0],-e.boxSize[1],-e.boxSize[2]),A(+e.boxSize[0],-e.boxSize[1],-e.boxSize[2]),A(-e.boxSize[0],+e.boxSize[1],-e.boxSize[2]),A(+e.boxSize[0],+e.boxSize[1],-e.boxSize[2]),A(-e.boxSize[0],-e.boxSize[1],+e.boxSize[2]),A(+e.boxSize[0],-e.boxSize[1],+e.boxSize[2]),A(-e.boxSize[0],+e.boxSize[1],+e.boxSize[2]),A(+e.boxSize[0],+e.boxSize[1],+e.boxSize[2])],i=[];t.forEach((t=>{const n=A(0,0,0),r=S(E());!function(e,t,i){var n,r,s,o,a,c,d,f,h,l,u,_,p=i[0],g=i[1],m=i[2];t===e?(e[12]=t[0]*p+t[4]*g+t[8]*m+t[12],e[13]=t[1]*p+t[5]*g+t[9]*m+t[13],e[14]=t[2]*p+t[6]*g+t[10]*m+t[14],e[15]=t[3]*p+t[7]*g+t[11]*m+t[15]):(n=t[0],r=t[1],s=t[2],o=t[3],a=t[4],c=t[5],d=t[6],f=t[7],h=t[8],l=t[9],u=t[10],_=t[11],e[0]=n,e[1]=r,e[2]=s,e[3]=o,e[4]=a,e[5]=c,e[6]=d,e[7]=f,e[8]=h,e[9]=l,e[10]=u,e[11]=_,e[12]=n*p+a*g+h*m+t[12],e[13]=r*p+c*g+l*m+t[13],e[14]=s*p+d*g+u*m+t[14],e[15]=o*p+f*g+_*m+t[15])}(r,r,e.position);const s=function(e,t){var i=t[0],n=t[1],r=t[2],s=t[3],o=i+i,a=n+n,c=r+r,d=i*o,f=n*o,h=n*a,l=r*o,u=r*a,_=r*c,p=s*o,g=s*a,m=s*c;return e[0]=1-h-_,e[1]=f+m,e[2]=l-g,e[3]=0,e[4]=f-m,e[5]=1-d-_,e[6]=u+p,e[7]=0,e[8]=l+g,e[9]=u-p,e[10]=1-d-h,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}(E(),e.orientation);T(r,r,s),function(e,t,i){var n=t[0],r=t[1],s=t[2],o=i[3]*n+i[7]*r+i[11]*s+i[15];o=o||1,e[0]=(i[0]*n+i[4]*r+i[8]*s+i[12])/o,e[1]=(i[1]*n+i[5]*r+i[9]*s+i[13])/o,e[2]=(i[2]*n+i[6]*r+i[10]*s+i[14])/o}(n,t,r),i.push(n)})),[[0,1],[1,3],[3,2],[2,0],[4,5],[5,7],[7,6],[6,4],[0,4],[1,5],[3,7],[2,6]].forEach((t=>{this._stackRenderers.pushLine(i[t[0]],i[t[1]],e.color)}))}_pushWireFrameTriangle(e){this._stackRenderers.pushLine(e.v0,e.v1,e.color),this._stackRenderers.pushLine(e.v1,e.v2,e.color),this._stackRenderers.pushLine(e.v2,e.v0,e.color)}safeSceneWireFrame(e){this._debugSceneCamera.setEye(this._rayTracerRenderer.camera.position),this._debugSceneCamera.setTarget(this._rayTracerRenderer.camera.target),this._debugSceneCamera.setUpAxis(this._rayTracerRenderer.camera.up),this._debugSceneCamera.computeMatrices(),this._stackRenderers.safeRender(this._debugSceneCamera.getComposedMatrix(),e)}flushHudWireFrame(){this._stackRenderers.flush(this._mainHudCamera.getComposedMatrix())}flushHudText(){this._textRenderer.flush(this._mainHudCamera.getComposedMatrix())}setupDebugRenderer(){this._rayTracerRenderer.spheres.forEach((e=>this._pushWireFrameSphere(e))),this._rayTracerRenderer.boxes.forEach((e=>this._pushWireFrameBox(e))),this._rayTracerRenderer.triangles.forEach((e=>this._pushWireFrameTriangle(e)))}get rayTracerRenderer(){return this._rayTracerRenderer}get stackRenderers(){return this._stackRenderers}get textRenderer(){return this._textRenderer}get multipleBuffering(){return this._multipleBuffering}get debugSceneCamera(){return this._debugSceneCamera}get mainHudCamera(){return this._mainHudCamera}}let Ft=0;const zt=[],Mt=[],Pt=[0,0,20],kt=(e,t,i,n,r,s,o=0,a=!1,c=!0,d=!0)=>{const f=e.createRigidBody({mass:0,shape:{type:"box",size:[1.95*n[0],1.95*n[1],1.95*n[2]]},position:t,orientation:i});f.setRestitution(.7),f.setFriction(1),zt.push({boxSize:n,color:r,reflectionFactor:s,physicBody:f,refractionFactor:o,chessboardMaterial:a,receiveLightEnabled:c,castShadowEnabled:d})},Lt=(e,t,i,n,r,s,o,a=!1,c=!0,d=!0,f=1)=>{const h=e.createRigidBody({mass:f,shape:{type:"box",size:[2*n[0],2*n[1],2*n[2]]},position:t,orientation:i});h.setRestitution(.5),h.setFriction(0),zt.push({boxSize:n,color:r,reflectionFactor:s,physicBody:h,refractionFactor:o,chessboardMaterial:a,receiveLightEnabled:c,castShadowEnabled:d})},It=(e,t,i,n)=>{const r=e.createRigidBody({mass:1,shape:{type:"sphere",radius:i},position:t,orientation:W(G())});r.setFriction(1),r.setRestitution(n),r.disableDeactivation(),Mt.push({radius:i,physicBody:r})};class Ut{ensureSceneData(e){zt.length>0||(kt(e,[-1,-4,0],X(G(),[0,0,1],1*Math.PI/32),[4,1,2],[1,1,1],.5,0,!0),kt(e,[-7,-5,0],X(G(),[1,0,0],1*Math.PI/32),[2,1,2],[1,1,1],.5,0,!0),kt(e,[-10,-3,2],X(G(),[1,0,0],1*Math.PI/32),[.25,.25,4],[.5,1,.5],0),kt(e,[-12,-2,2],X(G(),[0,1,0],-1*Math.PI/16),[.5,4,4],[.5,1,.5],0),kt(e,[-3,-6,4],X(G(),[0,0,1],-1*Math.PI/32),[6,1,2],[1,1,1],.5,0,!0),kt(e,[-7.8,-3,5.5],X(G(),[0,1,0],-.125*Math.PI),[1.5,.25,.25],[.5,1,.5],0),kt(e,[-3.8,-3.5,6.5],X(G(),[0,0,1],-1*Math.PI/32),[2.5,.25,.25],[.5,1,.5],0),Lt(e,[-6,-3.5,7],X(G(),[1,0,0],0*Math.PI),[.25,4,.25],[.5,1,.5],0,0,!1,!0,!0,0),Lt(e,[-4.5,-3.5,7],X(G(),[1,0,0],0*Math.PI),[.25,4,.25],[.5,1,.5],0,0,!1,!0,!0,0),Lt(e,[-3,-3.5,7],X(G(),[1,0,0],0*Math.PI),[.25,4,.25],[.5,1,.5],0,0,!1,!0,!0,0),kt(e,[-4,-6.5,9.5],X(G(),[1,0,0],0*Math.PI),[5,.25,4],[.5,1,.5],0),It(e,[0,10,0],1,.7),It(e,[-2,10,0],1.5,0),Lt(e,[-4,10,0],X(G(),[1,1,1],.25*Math.PI),[1,1,1],[1,0,0],.5,0,!1,!0,!0))}run(e,t,i){this.ensureSceneData(i),i.stepSimulation(e,0,e),Ft+=e;{const e=$(.25*Ft)*Math.PI*2;Pt[0]=2*Math.cos(e)-4,Pt[1]=2-1*Math.sin(e),Pt[2]=2+2*Math.sin(e)}zt.forEach(((e,t)=>{e.physicBody.getPosition()[1]<-12&&(e.physicBody.setLinearVelocity(0,0,0),e.physicBody.setAngularVelocity(0,0,0),e.physicBody.setPosition(0,10,0))})),Mt.forEach(((e,t)=>{e.physicBody.getPosition()[1]<-12&&(e.physicBody.setLinearVelocity(0,0,0),e.physicBody.setAngularVelocity(0,0,0),e.physicBody.setPosition(0,10,0))})),t.rayTracerRenderer.pushSphere({position:Pt,orientation:W(G()),radius:.125,color:[1,1,0],reflectionFactor:0,refractionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!1,castShadowEnabled:!1}),t.rayTracerRenderer.pushSpotLight({position:Pt,intensity:1,radius:15}),zt.forEach((e=>{const i=e.physicBody.getPosition(),n=e.physicBody.getRotation();t.rayTracerRenderer.pushBox({position:i,orientation:n,boxSize:e.boxSize,color:e.color,refractionFactor:e.refractionFactor,reflectionFactor:e.reflectionFactor,chessboardEnabled:e.chessboardMaterial,receiveLightEnabled:e.receiveLightEnabled,castShadowEnabled:e.castShadowEnabled})})),Mt.forEach(((e,i)=>{const n=e.physicBody.getPosition(),r=e.physicBody.getRotation();var s;i%2==0?(t.rayTracerRenderer.pushSphere({position:n,orientation:r,radius:1,color:[1,1,1],reflectionFactor:0,refractionFactor:0,chessboardEnabled:!0,receiveLightEnabled:!1,castShadowEnabled:!0}),t.rayTracerRenderer.pushSpotLight({position:n,intensity:.1+4.9*(s=$(.5*Ft),(s*=2)<1?s:1-(s-=1)),radius:10})):t.rayTracerRenderer.pushSphere({position:n,orientation:r,radius:1.5,color:[1,1,1],reflectionFactor:.3,refractionFactor:.5,chessboardEnabled:!0,receiveLightEnabled:!1,castShadowEnabled:!0})})),t.rayTracerRenderer.pushSphere({position:[-5,0,-7],orientation:W(G()),radius:5,color:[0,0,1],reflectionFactor:.8,refractionFactor:0,chessboardEnabled:!1,receiveLightEnabled:!0,castShadowEnabled:!0})}}const{GlobalMouseManager:Vt,GlobalKeyboardManager:Nt,GlobalTouchManager:Ot,GlobalVisibilityManager:Gt,GlobalPointerLockManager:Wt}=b,{WebGLContext:Xt}=Ee,{FreeFlyController:Ht}=j;class Yt{constructor(e){this._animationFrameHandle=0,this._lastFrameTime=Date.now(),this._currFrameMsecTime=Date.now(),this._frameProfiler=new K,this._perfAutoScalingEnabled=!0,this._framesUntilNextCheck=3,this._scene=new Ut,this._canvasElement=e.canvasElement,this._def=e,this._freeFlyController=new Ht({coordinates:["Z","X","Y"],position:[-5,5,10],theta:1.05*Math.PI,phi:.25*-Math.PI,mouseSensibility:6,keyboardSensibility:.55*Math.PI,touchSensibility:8,movingSpeed:16}),Nt.activate(),Ot.activate(this._canvasElement),Gt.activate(),Gt.addVisibilityChange((e=>{!1===e?(this._def.logger.log("document visibility changed: hidden"),this.stop()):(this._def.logger.log("document visibility changed: visible"),this.start())})),Wt.allowPointerLockedOnClickEvent(this._canvasElement),Wt.addOnLockChange((()=>{Wt.isPointerLocked(this._canvasElement)?(this._def.logger.log("The pointer lock status is now locked"),Vt.activate(this._canvasElement)):(this._def.logger.log("The pointer lock status is now unlocked"),Vt.deactivate(this._canvasElement),Wt.allowPointerLockedOnClickEvent(this._canvasElement))})),Wt.addOnLockError((e=>{this._def.logger.log(`The pointer lock sent an error, event: "${JSON.stringify(e)}"`)})),this._renderer=new Bt({canvasDomElement:this._canvasElement}),this._renderer.initialize(),this._running=!1,this._errorGraphicContext=!1,this._def.resolution.addEventListener("input",(e=>{const t=this._def.resolution.value;this._setResolution(t),this._logResolution()})),this._def.anti_aliasing_enabled.addEventListener("click",(()=>{const e=!0===this._def.anti_aliasing_enabled.checked;this._renderer.rayTracerRenderer.setAntiAliasing(e),this._def.logger.log("Anti aliasing change: "+(!0===e?"enabled":"disabled"))})),this._setResolution(this._def.resolution.value),this._def.perfAutoScaling.addEventListener("input",(()=>{this._framesUntilNextCheck=3,this._perfAutoScalingEnabled=!0===this._def.perfAutoScaling.checked,this._def.logger.log("Performance auto scaler change: "+(!0===this._perfAutoScalingEnabled?"enabled":"disabled"))}))}init(){return e(this,void 0,void 0,(function*(){yield this._renderer.initialize(),yield ut.load({jsUrl:"./dist/wasm/FrankenPhys.0.0.1.js",wasmUrl:"./dist/wasm"}),_t.WasmModuleHolder.set(ut.get()),this._physicWorld=new _t.PhysicWorld,this._physicWorld.setGravity(0,-10,0);let e=0;e|=_t.DebugDrawFlags.DBG_DrawWireframe,e|=_t.DebugDrawFlags.DBG_DrawAabb,e|=_t.DebugDrawFlags.DBG_DrawContactPoints,e|=_t.DebugDrawFlags.DBG_DrawConstraints,e|=_t.DebugDrawFlags.DBG_DrawConstraintLimits,e|=_t.DebugDrawFlags.DBG_DrawNormals,e|=_t.DebugDrawFlags.DBG_DrawFrames,this._physicWorld.setDebugWireframeFeaturesFlag(e),this._physicWorld.setDebugWireframeCallback(((e,t,i,n,r,s,o,a,c)=>{this._renderer.stackRenderers.pushLine([e,t,i],[n,r,s],[o,a,c])}))}))}resize(e,t,i){let n=e,r=t;i?(this._canvasElement.style.position="absolute",n=window.innerWidth,r=window.innerHeight):this._canvasElement.style.position="relative",this._canvasElement.style.left="0px",this._canvasElement.style.top="0px",this._canvasElement.style.width=`${n}px`,this._canvasElement.style.height=`${r}px`,this._canvasElement.width=n,this._canvasElement.height=r,this._renderer.resize(n,r)}start(){this.isRunning()||(this._running=!0,this._tick())}stop(){this.isRunning()&&(this._running=!1,window.clearTimeout(this._animationFrameHandle))}isRunning(){return this._running&&!this._errorGraphicContext}_tick(){const e=()=>{this._running&&!this._errorGraphicContext&&(this._animationFrameHandle=window.setTimeout(e,1e3/60),this._mainLoop())};e()}_mainLoop(){const e=Date.now(),t=e-this._lastFrameTime;this._lastFrameTime=e,this._handlePerformanceAutoScaling(t),this._frameProfiler.pushDelta(t);const i=e-this._currFrameMsecTime;this._currFrameMsecTime=e;const n=Math.min(i,100)/1e3;this._freeFlyController.update(n),Vt.resetDeltas(),Ot.resetDeltas(),this._physicWorld&&this._scene.run(n,this._renderer,this._physicWorld),this._renderScene(),this._renderHud()}_renderHud(){const e=Xt.getContext();e.viewport(0,0,this._canvasElement.width,this._canvasElement.height),e.clear(e.DEPTH_BUFFER_BIT),e.enable(e.DEPTH_TEST),e.depthFunc(e.LESS);{const e=[27,260],t=[7,35];Xe([27,165],this._renderer.stackRenderers,this._renderer.textRenderer),He(e,this._renderer.stackRenderers,this._renderer.textRenderer),Ye(this._canvasElement,t,this._renderer.stackRenderers,this._renderer.textRenderer)}qe([10,this._canvasElement.height-60,0],[100,50],this._frameProfiler,this._renderer.stackRenderers,this._renderer.textRenderer,!0),this._renderer.flushHudWireFrame(),this._renderer.flushHudText(),this._renderer.rayTracerRenderer.reset()}_renderScene(){{const e=Xt.getContext();e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.disable(e.DEPTH_TEST)}this._renderer.rayTracerRenderer.lookAt(this._freeFlyController.getPosition(),this._freeFlyController.getTarget(),this._freeFlyController.getUpAxis()),this._renderer.rayTracerRenderer.render(),!0===this._def.debug_mode_enabled.checked&&(this._renderer.stackRenderers.clear(),this._renderer.safeSceneWireFrame((()=>{this._physicWorld.debugDrawWorld();const e=[0,0,0];this._renderer.stackRenderers.pushLine(e,[100,0,0],[1,0,0]),this._renderer.stackRenderers.pushLine(e,[0,100,0],[0,1,0]),this._renderer.stackRenderers.pushLine(e,[0,0,100],[0,0,1])})))}_setResolution(e){const t=((e,t,i)=>Math.min(Math.max(e,0),9))(e),i=1/(10-t);this._renderer.rayTracerRenderer.setResolutionCoef(i)}_logResolution(){const e=this._renderer.rayTracerRenderer,t=e.getResolutionCoef(),i=e.getCurrentSize(),n=i[0]*i[1];this._def.logger.log(`resolution changed (1/${Math.ceil(1/t)}) => ${i[0]}x${i[1]} (${n}px)`)}_handlePerformanceAutoScaling(e){if(!0!==this._perfAutoScalingEnabled)return;if(e<=20)return void(this._framesUntilNextCheck=3);if(--this._framesUntilNextCheck,this._framesUntilNextCheck>0)return;this._def.logger.log("performance auto scaling: slow framerate, scaling down resolution");const t=this._def.resolution.value-1;t>=0&&t<=9&&(this._setResolution(t),this._logResolution(),this._def.resolution.value=t),this._framesUntilNextCheck=3}}let qt=null,jt=null;const $t=e=>{const t=document.querySelector(e);if(!t)throw new Error(`html element "${e}" not found`);return t};window.addEventListener("load",(()=>e(void 0,void 0,void 0,(function*(){qt=new Ke("loggerOutput"),qt.log("[SETUP] page loaded");const e=$t("#rendering-canvas"),t=$t("#auto-scaling-enabled"),i=$t("#resolution"),r=$t("#anti-aliasing-enabled"),s=$t("#debug-mode-enabled"),o=$t("#error-text");if(window.addEventListener("error",(c=>{if(jt){console.log("onPageError",c);try{jt.stop()}catch(c){}jt=null,a.deactivate(),d.deactivate(e),m.deactivate(e),n.removeAllCallbacks(),p.removeAllCallbacks(),x.removeAllCallbacks(),x.deactivate(),o.style.width="800px",o.style.height="600px",o.innerHTML=c.message,e.style.display="none",o.style.display="block",t.disabled=!0,i.min=i.max=i.value=0,r.disabled=!0,s.disabled=!0,document.title+=" (ERR)"}})),!v())throw new Error("missing WebGL2 feature (unsupported)");jt=new Yt({canvasElement:e,logger:qt,perfAutoScaling:t,resolution:i,anti_aliasing_enabled:r,debug_mode_enabled:s}),qt.log("[SETUP] Demo: initializing"),yield jt.init(),qt.log("[SETUP] Demo: initialized"),jt.start(),qt.log("[SETUP] Demo: running"),((e,t)=>{if(!x.isSupported())return;let i=-1;x.addVisibilityChange((e=>{e?i>=0&&(clearTimeout(i),i=-1):i=window.setTimeout(t,6e4)})),x.activate()})(0,(()=>{throw new Error("<br/><br/><br/>The page was inactive for too long<br/><br/>please reload")}))}))),!1);
